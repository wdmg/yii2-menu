var DragMenu=new function(){var e=this,t={},a=document.getElementById("menuItems"),n=document.getElementById("menuSources"),l=document.getElementById("addMenuItemForm"),o=n.querySelectorAll(".panel .panel-body"),r=(a=document.getElementById("menuItems"),document.getElementById("itemFormTemplate")),i=document.getElementById("menuItemTemplate");const s=e=>e.forEach((e=>e.remove())),c=(e,t=!0)=>{let a=[];function n(e,t){let a={itemId:e.id};e.childElementCount&&(a.children=[],Array.from(e.children).forEach((e=>{"UL"===e.nodeName&&Array.from(e.children).forEach((e=>{n(e,a.children)}))}))),t.push(a)}return Array.from(e.children).forEach((e=>{n(e,a)})),t?JSON.stringify(a):a},d=(e,t)=>{do{var a=e,n=(e=e.replace(/{{\s*([^}\s]+)\s*}}/g,(function(e,a){var n=t[$.trim(a)];return void 0===n?e:n})))!==a}while(n);return e};var u=e=>{if(console.log(e),a&&i&&"content"in document.createElement("template")){a.classList.contains("no-items")&&(a.classList.remove("no-items"),a.innerHTML="");let l=e;l.form=d(r.innerHTML,l);let o=d(i.innerHTML,l);a.append((t=o,n=document.createElement("template"),t=t.trim(),n.innerHTML=t,n.content.firstChild))}var t,n};if(l.length){l.querySelector('button[data-rel="add"]').addEventListener("click",(e=>{let t={id:"1",source:"links",source_name:"Links",name:l.querySelector('input[name="MenuItems[name]"]').value,title:l.querySelector('input[name="MenuItems[title]"]').value,url:l.querySelector('input[name="MenuItems[url]"]').value,only_auth:l.querySelector('input[name="MenuItems[only_auth]"]').value,target_blank:l.querySelector('input[name="MenuItems[target_blank]"]').value};u(t)}))}[...o].filter((e=>{if(e.children.length){let t=e.querySelector('button[data-rel="add"]'),a=e.querySelector('input[type="checkbox"][name="select-all"]'),n=e.querySelectorAll('.source-list input[type="checkbox"]');t&&n&&(n.forEach((a=>{a.onchange=a=>{a.preventDefault(),e.querySelectorAll('input[type="checkbox"]:checked:not([name="select-all"])').length?t.removeAttribute("disabled"):t.setAttribute("disabled",!0)}})),t.onclick=e=>{e.preventDefault();[...n].filter((e=>{e.checked&&u(e.dataset)}));n.forEach((e=>{e.checked=!1}))}),a&&n&&(a.onchange=e=>{e.preventDefault();let t=e.target.checked;n.forEach((a=>{a.checked=!!t,a.onchange(e)}))})}}));var m=e=>{t.avatar.hidden=!0;let a=e.clientY||e.changedTouches[0].pageY,n=e.clientX||e.changedTouches[0].pageX,l=document.elementFromPoint(n,a);return t.avatar.hidden=!1,null==l?null:l.closest(".droppable")},p=e=>{if("mousedown"!==e.type||1==e.which){var a=e.target.closest(".draggable");if(a)return t.elem=a,t.downX=e.pageX||e.targetTouches[0].pageX,t.downY=e.pageY||e.targetTouches[0].pageY,!1}},g=e=>{if(t.elem){if(!t.avatar){let a=0,o=0;if("touchmove"===e.type?(a=e.targetTouches[0].pageX-t.downX,o=e.targetTouches[0].pageY-t.downY):(a=e.pageX-t.downX,o=e.pageY-t.downY),Math.abs(a)<5&&Math.abs(o)<5)return;if(t.avatar=(n=t.elem,l={parent:n.parentNode,nextSibling:n.nextSibling,position:n.position||"",left:n.left||"",top:n.top||"",zIndex:n.zIndex||""},n.rollback=()=>{l.parent.insertBefore(n,l.nextSibling),n.style.position=l.position,n.style.left=l.left,n.style.top=l.top,n.style.zIndex=l.zIndex},n),!t.avatar)return void(t={});let r=(e=>{let t=e.getBoundingClientRect();return{top:t.top+pageYOffset,left:t.left+pageXOffset}})(t.avatar);t.shiftX=t.downX-r.left,t.shiftY=t.downY-r.top,(e=>{let a=t.avatar;a.style.width=t.avatar.offsetWidth+"px",a.style.height=t.avatar.offsetHeight+"px",a.classList.add("drag-in"),document.body.appendChild(a);let n=document.querySelector(".droppable.delete-area");n&&(n.hidden=!1)})()}var n,l;return"touchmove"===e.type?(t.avatar.style.left=e.changedTouches[0].pageX-t.shiftX+"px",t.avatar.style.top=e.changedTouches[0].pageY-t.shiftY+"px"):(t.avatar.style.left=e.pageX-t.shiftX+"px",t.avatar.style.top=e.pageY-t.shiftY+"px"),(e=>{let n=e.clientY||e.targetTouches[0].pageY,l=e.clientX||e.targetTouches[0].pageX,o=document.elementFromPoint(l,n),r=document.createElement("div");r.classList.add("droppable"),t.avatar.getBoundingClientRect().left-o.getBoundingClientRect().left>=.1*t.avatar.offsetWidth?r.classList.add("sub-item"):r.classList.remove("sub-item");let i=t.avatar.querySelector('.panel-title a[data-toggle="collapse"]').dataset.name,c=document.createTextNode(i.trim());r.appendChild(c),r.style.width=t.avatar.offsetWidth+"px",r.style.height=t.avatar.offsetHeight+"px",r.isEqualNode(t.droppable)||(s(a.querySelectorAll(".droppable:not(.delete-area)")),t.droppable=null),t.droppable=r;let d=o.closest(".draggable");if(d&&void 0!==d){s(a.querySelectorAll(".droppable:not(.delete-area)"));let n=e.clientY||e.targetTouches[0].pageY;if(e.clientX||e.targetTouches[0].pageX,n>=d.getBoundingClientRect().top+d.offsetHeight/1.5)t.avatar.getBoundingClientRect().left-o.getBoundingClientRect().left>=.1*t.avatar.offsetWidth?d.querySelector(".collapse").after(r):d.after(r),d.classList.contains("sub-item")&&r.classList.add("sub-item");else if(n<d.getBoundingClientRect().top+d.offsetHeight/1.5&&(t.avatar.getBoundingClientRect().left-o.getBoundingClientRect().left>=.1*t.avatar.offsetWidth?d.querySelector(".collapse").after(r):d.before(r),document.getElementById("menuItems").firstChild.isEqualNode(r)&&r.classList.remove("sub-item"),d.classList.contains("sub-item")))return r.remove(),!1;t.avatar.style.width=r.offsetWidth+"px",t.avatar.style.height=r.offsetHeight+"px"}})(e),!1}},h=n=>{t.avatar&&(n=>{let l=t.avatar,o=m(n);o||l.rollback(),l.style="",l.classList.remove("drag-in");let r=a.querySelector(".droppable");if(r.classList.contains("delete-area"))t={},l.remove();else if(r.classList.contains("sub-item")){let e=r.parentNode.querySelector("ul");e||(e=document.createElement("ul"),e.classList.add("menu-items"),e.setAttribute("role","tablist"),r.parentNode.appendChild(e)),l.classList.add("sub-item"),r.replaceWith(l),e.appendChild(l)}else l.classList.remove("sub-item"),r.replaceWith(l);let i=[...a.querySelectorAll("ul")].filter((e=>0===e.children.length));for(let e of i)e.remove();t.data=c(a.querySelector(".menu-items")),s(a.querySelectorAll(".droppable:not(.delete-area)"));let d=document.querySelector(".droppable.delete-area");d&&(d.hidden=!0),o?e.onDragEnd(t,o):e.onDragCancel(t)})(n),t={}};a.onmousedown=p,a.ontouchstart=p,a.onmousemove=g,a.ontouchmove=g,a.onmouseup=h,a.ontouchend=h,this.onDragEnd=function(e,t){},this.onDragCancel=function(e){}};DragMenu.onDragCancel=function(e){e.data&&(document.getElementById("menuOptions").innerText=e.data)},DragMenu.onDragEnd=function(e,t){e.data&&(document.getElementById("menuOptions").innerText=e.data)};
//# sourceMappingURL=data:application/json;charset=utf8;base64,
