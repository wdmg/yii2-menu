var DragMenu=new function(){var e=this,t={},a=document.getElementById("dragMenu"),n=document.getElementById("menuItems"),l=document.getElementById("menuSources"),r=l.querySelectorAll(".panel"),o=document.getElementById("itemFormTemplate"),u=document.getElementById("menuItemTemplate"),i=document.getElementById("addMenuItemForm");const s=e=>e.forEach((e=>e.remove())),c=(e,t=!0)=>{let a=[];function n(e,t,a="UL"){let l=e.querySelector("form[data-key]"),r={id:l.getAttribute("data-key")||null,name:l.querySelector('input[name="MenuItems[name]"]').value||null,title:l.querySelector('input[name="MenuItems[title]"]').value||null,source_id:l.querySelector('input[name="MenuItems[source_id]"]').value||null,source_type:l.querySelector('input[name="MenuItems[source_type]"]').value||null,source_url:l.querySelector('input[name="MenuItems[source_url]"]').value||null,only_auth:l.querySelector('input[name="MenuItems[only_auth]"]').value||null,target_blank:l.querySelector('input[name="MenuItems[target_blank]"]').value||null};e.childElementCount&&(r.children=[],Array.from(e.children).forEach((e=>{e.nodeName===a.toUpperCase()&&Array.from(e.children).forEach((e=>{n(e,r.children)}))}))),t.push(r)}return Array.from(e.children).forEach((e=>{n(e,a,"UL")})),t?JSON.stringify(a):a},d=e=>{var t=document.createElement("template");return e=e.trim(),t.innerHTML=e,t.content.firstChild},m=(e,t)=>{do{var a=e,n=(e=e.replace(/{{\s*([^}\s]+)\s*}}/g,(function(e,a){var n=t[$.trim(a)];return void 0===n?e:n})))!==a}while(n);return e};var p=(a,l=null)=>{if(n&&u&&"content"in document.createElement("template")){n.classList.contains("no-items")&&(n.classList.remove("no-items"),n.innerHTML="");let r=a;r.form=m(o.innerHTML,r);let i=m(u.innerHTML,r);if(i)if(l){let e=document.createElement("ul");e.classList.add("menu-items"),e.setAttribute("role","tablist");let t=d(i);t.classList.add("sub-item"),e.append(t),n.querySelector('[data-id="'+l+'"]').append(e)}else n.append(d(i));return e.onAddSuccess(t,n)}return e.onAddFailture(t,n)};if(i.length){i.querySelector('button[data-rel="add"]').addEventListener("click",(e=>{let t=l.querySelector('#source-link a[data-toggle="collapse"]'),a={id:null,source:t.dataset.type||null,source_name:t.dataset.name||null,name:i.querySelector('input[name="MenuItems[name]"]').value||!1,title:i.querySelector('input[name="MenuItems[title]"]').value||!1,source_id:null,source_type:i.querySelector('input[name="MenuItems[source_type]"]').value||!1,source_url:i.querySelector('input[name="MenuItems[source_url]"]').value||!1,only_auth:i.querySelector('input[name="MenuItems[only_auth]"]').value||!1,target_blank:i.querySelector('input[name="MenuItems[target_blank]"]').value||!1};p(a)&&i.reset()}))}[...r].filter((e=>{if(e.children.length){let t=e.querySelector('button[data-rel="add"]'),a=e.querySelector('input[type="checkbox"][name="select-all"]'),n=e.querySelectorAll('.source-list input[type="checkbox"]');t&&n&&(n.forEach((a=>{a.onchange=a=>{a.preventDefault(),e.querySelectorAll('input[type="checkbox"]:checked:not([name="select-all"])').length?t.removeAttribute("disabled"):t.setAttribute("disabled",!0)}})),t.onclick=e=>{e.preventDefault();[...n].filter((e=>{e.checked&&p(e.dataset)}));n.forEach((e=>{e.checked=!1}))}),a&&n&&(a.onchange=e=>{e.preventDefault();let t=e.target.checked;n.forEach((a=>{a.checked=!!t,a.onchange(e)}))})}}));var g=e=>{t.avatar.hidden=!0;let a=e.clientY||e.changedTouches[0].pageY,n=e.clientX||e.changedTouches[0].pageX,l=document.elementFromPoint(n,a);return t.avatar.hidden=!1,null==l?null:l.closest(".droppable")},f=e=>{if("mousedown"!==e.type||1==e.which){var a=e.target.closest(".draggable");a&&(t.elem=a,t.downX=e.pageX||e.targetTouches[0].pageX,t.downY=e.pageY||e.targetTouches[0].pageY)}},h=e=>{if(t.elem){if(!t.avatar){let n=0,r=0;if("touchmove"===e.type?(n=e.targetTouches[0].pageX-t.downX,r=e.targetTouches[0].pageY-t.downY):(n=e.pageX-t.downX,r=e.pageY-t.downY),Math.abs(n)<5&&Math.abs(r)<5)return;if(t.avatar=(a=t.elem,l={parent:a.parentNode,nextSibling:a.nextSibling,position:a.position||"",left:a.left||"",top:a.top||"",zIndex:a.zIndex||""},a.rollback=()=>{l.parent.insertBefore(a,l.nextSibling),a.style.position=l.position,a.style.left=l.left,a.style.top=l.top,a.style.zIndex=l.zIndex},a),!t.avatar)return void(t={});let o=(e=>{let t=e.getBoundingClientRect();return{top:t.top+pageYOffset,left:t.left+pageXOffset}})(t.avatar);t.shiftX=t.downX-o.left,t.shiftY=t.downY-o.top,(e=>{let a=t.avatar;a.style.width=t.avatar.offsetWidth+"px",a.style.height=t.avatar.offsetHeight+"px",a.classList.add("drag-in"),document.body.appendChild(a);let n=document.querySelector(".droppable.delete-area");n&&n.classList.add("show")})()}var a,l;return"touchmove"===e.type?(t.avatar.style.left=e.changedTouches[0].pageX-t.shiftX+"px",t.avatar.style.top=e.changedTouches[0].pageY-t.shiftY+"px"):(t.avatar.style.left=e.pageX-t.shiftX+"px",t.avatar.style.top=e.pageY-t.shiftY+"px"),(e=>{let a=e.clientY||e.targetTouches[0].pageY,l=e.clientX||e.targetTouches[0].pageX,r=document.elementFromPoint(l,a),o=document.createElement("div");o.classList.add("droppable"),t.avatar.getBoundingClientRect().left-r.getBoundingClientRect().left>=.1*t.avatar.offsetWidth?o.classList.add("sub-item"):o.classList.remove("sub-item");let u=t.avatar.querySelector('.panel-title a[data-toggle="collapse"]').dataset.name,i=document.createTextNode(u.trim());o.appendChild(i),o.style.width=t.avatar.offsetWidth+"px",o.style.height=t.avatar.offsetHeight+"px",o.isEqualNode(t.droppable)||(s(n.querySelectorAll(".droppable:not(.delete-area)")),t.droppable=null),t.droppable=o;let c=r.closest(".draggable");if(c&&void 0!==c){s(n.querySelectorAll(".droppable:not(.delete-area)"));let a=e.clientY||e.targetTouches[0].pageY;if(e.clientX||e.targetTouches[0].pageX,a>=c.getBoundingClientRect().top+c.offsetHeight/1.5)t.avatar.getBoundingClientRect().left-r.getBoundingClientRect().left>=.1*t.avatar.offsetWidth?c.querySelector(".collapse").after(o):c.after(o),c.classList.contains("sub-item")&&o.classList.add("sub-item");else if(a<c.getBoundingClientRect().top+c.offsetHeight/1.5&&(t.avatar.getBoundingClientRect().left-r.getBoundingClientRect().left>=.1*t.avatar.offsetWidth?c.querySelector(".collapse").after(o):c.before(o),document.getElementById("menuItems").firstChild.isEqualNode(o)&&o.classList.remove("sub-item"),c.classList.contains("sub-item")))return o.remove(),!1;t.avatar.style.width=o.offsetWidth+"px",t.avatar.style.height=o.offsetHeight+"px"}})(e),!1}},y=l=>{t.avatar&&(l=>{let r=t.avatar,o=g(l);o||r.rollback(),r.style="",r.classList.remove("drag-in");let u=a.querySelector(".droppable");if(u.classList.contains("delete-area"))t={},r.remove();else if(u.classList.contains("sub-item")){let e=u.parentNode.querySelector("ul");e||(e=document.createElement("ul"),e.classList.add("menu-items"),e.setAttribute("role","tablist"),u.parentNode.appendChild(e)),r.classList.add("sub-item"),u.replaceWith(r),e.appendChild(r)}else r.classList.remove("sub-item"),u.replaceWith(r);let i=[...n.querySelectorAll("ul")].filter((e=>0===e.children.length));for(let e of i)e.remove();t.data=c(n),s(n.querySelectorAll(".droppable:not(.delete-area)"));let d=document.querySelector(".droppable.delete-area");setTimeout((function(){d&&d.classList.remove("show")}),500),o?e.onDragEnd(t,o):e.onDragCancel(t)})(l),t={}};this.getItemsData=function(){return c(n)},this.buildMenuItems=function(e){[...e].filter((e=>{if("object"==typeof e){let t=e.parent_id;e.source_type&&!e.source_name&&(e.source_name=l.querySelector('.panel .panel-heading a[data-id="'+e.source_type+'"]').dataset.name),p(e,t)}}))},this.onInit=function(e){},this.onDragEnd=function(e,t){},this.onDragCancel=function(e){},this.onAddSuccess=function(e,t){},this.onAddFailture=function(e,t){},document.addEventListener("DOMContentLoaded",(function(t){a&&n&&(a.onmousedown=f,a.ontouchstart=f,a.onmousemove=h,a.ontouchmove=h,a.onmouseup=y,a.ontouchend=y,e.onInit())}))};DragMenu.onDragCancel=function(e){if(e.data){document.getElementById("addMenuForm").querySelector("input#menu-items").value=e.data}},DragMenu.onDragEnd=function(e,t){if(e.data){document.getElementById("addMenuForm").querySelector("input#menu-items").value=e.data}},DragMenu.onAddSuccess=function(e,t){document.getElementById("addMenuForm").querySelector("input#menu-items").value=this.getItemsData()},DragMenu.onInit=function(){let e=document.getElementById("addMenuForm"),t=JSON.parse(e.querySelector("input#menu-items").value);this.buildMenuItems(t)};
//# sourceMappingURL=data:application/json;charset=utf8;base64,
