var DragMenu=new function(){var e=this,t={},a=document.getElementById("dragMenu"),n=document.getElementById("menuItems"),l=document.getElementById("menuSources"),o=l.querySelectorAll(".panel"),r=document.getElementById("itemFormTemplate"),u=document.getElementById("menuItemTemplate"),i=document.getElementById("addMenuItemForm");const s=e=>e.forEach((e=>e.remove())),d=(e,t=!0)=>{let a=[];function n(e,t,a="UL"){let l=e.querySelector("form[data-key]"),o={id:l.getAttribute("data-key")||null,type:l.getAttribute("data-type")||null,name:l.querySelector('input[name="MenuItems[name]"]').value||null,title:l.querySelector('input[name="MenuItems[title]"]').value||null,url:l.querySelector('input[name="MenuItems[url]"]').value||null,only_auth:l.querySelector('input[name="MenuItems[only_auth]"]').value||null,target_blank:l.querySelector('input[name="MenuItems[target_blank]"]').value||null};e.childElementCount&&(o.children=[],Array.from(e.children).forEach((e=>{e.nodeName===a.toUpperCase()&&Array.from(e.children).forEach((e=>{n(e,o.children)}))}))),t.push(o)}return Array.from(e.children).forEach((e=>{n(e,a,"UL")})),t?JSON.stringify(a):a},c=e=>{var t=document.createElement("template");return e=e.trim(),t.innerHTML=e,t.content.firstChild},m=(e,t)=>{do{var a=e,n=(e=e.replace(/{{\s*([^}\s]+)\s*}}/g,(function(e,a){var n=t[$.trim(a)];return void 0===n?e:n})))!==a}while(n);return e};var p=(a,l=null)=>{if(n&&u&&"content"in document.createElement("template")){n.classList.contains("no-items")&&(n.classList.remove("no-items"),n.innerHTML="");let o=a;o.form=m(r.innerHTML,o);let i=m(u.innerHTML,o);if(l){let e=document.createElement("ul");e.classList.add("menu-items"),e.setAttribute("role","tablist");let t=c(i);t.classList.add("sub-item"),e.append(t),n.querySelector('[data-id="'+l+'"]').append(e)}else n.append(c(i));return e.onAddSuccess(t,n)}return e.onAddFailture(t,n)};if(i.length){i.querySelector('button[data-rel="add"]').addEventListener("click",(e=>{let t=l.querySelector('#source-link a[data-toggle="collapse"]');console.log(t);let a={id:null,source:t.dataset.type||null,source_name:t.dataset.name||null,name:i.querySelector('input[name="MenuItems[name]"]').value||!1,title:i.querySelector('input[name="MenuItems[title]"]').value||!1,url:i.querySelector('input[name="MenuItems[url]"]').value||!1,only_auth:i.querySelector('input[name="MenuItems[only_auth]"]').value||!1,target_blank:i.querySelector('input[name="MenuItems[target_blank]"]').value||!1};p(a)&&i.reset()}))}[...o].filter((e=>{if(e.children.length){let t=e.querySelector('button[data-rel="add"]'),a=e.querySelector('input[type="checkbox"][name="select-all"]'),n=e.querySelectorAll('.source-list input[type="checkbox"]');t&&n&&(n.forEach((a=>{a.onchange=a=>{a.preventDefault(),e.querySelectorAll('input[type="checkbox"]:checked:not([name="select-all"])').length?t.removeAttribute("disabled"):t.setAttribute("disabled",!0)}})),t.onclick=e=>{e.preventDefault();[...n].filter((e=>{e.checked&&p(e.dataset)}));n.forEach((e=>{e.checked=!1}))}),a&&n&&(a.onchange=e=>{e.preventDefault();let t=e.target.checked;n.forEach((a=>{a.checked=!!t,a.onchange(e)}))})}}));var g=e=>{t.avatar.hidden=!0;let a=e.clientY||e.changedTouches[0].pageY,n=e.clientX||e.changedTouches[0].pageX,l=document.elementFromPoint(n,a);return t.avatar.hidden=!1,null==l?null:l.closest(".droppable")},f=e=>{if("mousedown"!==e.type||1==e.which){var a=e.target.closest(".draggable");if(a)return t.elem=a,t.downX=e.pageX||e.targetTouches[0].pageX,t.downY=e.pageY||e.targetTouches[0].pageY,!1}},h=e=>{if(t.elem){if(!t.avatar){let n=0,o=0;if("touchmove"===e.type?(n=e.targetTouches[0].pageX-t.downX,o=e.targetTouches[0].pageY-t.downY):(n=e.pageX-t.downX,o=e.pageY-t.downY),Math.abs(n)<5&&Math.abs(o)<5)return;if(t.avatar=(a=t.elem,l={parent:a.parentNode,nextSibling:a.nextSibling,position:a.position||"",left:a.left||"",top:a.top||"",zIndex:a.zIndex||""},a.rollback=()=>{l.parent.insertBefore(a,l.nextSibling),a.style.position=l.position,a.style.left=l.left,a.style.top=l.top,a.style.zIndex=l.zIndex},a),!t.avatar)return void(t={});let r=(e=>{let t=e.getBoundingClientRect();return{top:t.top+pageYOffset,left:t.left+pageXOffset}})(t.avatar);t.shiftX=t.downX-r.left,t.shiftY=t.downY-r.top,(e=>{let a=t.avatar;a.style.width=t.avatar.offsetWidth+"px",a.style.height=t.avatar.offsetHeight+"px",a.classList.add("drag-in"),document.body.appendChild(a);let n=document.querySelector(".droppable.delete-area");n&&n.classList.add("show")})()}var a,l;return"touchmove"===e.type?(t.avatar.style.left=e.changedTouches[0].pageX-t.shiftX+"px",t.avatar.style.top=e.changedTouches[0].pageY-t.shiftY+"px"):(t.avatar.style.left=e.pageX-t.shiftX+"px",t.avatar.style.top=e.pageY-t.shiftY+"px"),(e=>{let a=e.clientY||e.targetTouches[0].pageY,l=e.clientX||e.targetTouches[0].pageX,o=document.elementFromPoint(l,a),r=document.createElement("div");r.classList.add("droppable"),t.avatar.getBoundingClientRect().left-o.getBoundingClientRect().left>=.1*t.avatar.offsetWidth?r.classList.add("sub-item"):r.classList.remove("sub-item");let u=t.avatar.querySelector('.panel-title a[data-toggle="collapse"]').dataset.name,i=document.createTextNode(u.trim());r.appendChild(i),r.style.width=t.avatar.offsetWidth+"px",r.style.height=t.avatar.offsetHeight+"px",r.isEqualNode(t.droppable)||(s(n.querySelectorAll(".droppable:not(.delete-area)")),t.droppable=null),t.droppable=r;let d=o.closest(".draggable");if(d&&void 0!==d){s(n.querySelectorAll(".droppable:not(.delete-area)"));let a=e.clientY||e.targetTouches[0].pageY;if(e.clientX||e.targetTouches[0].pageX,a>=d.getBoundingClientRect().top+d.offsetHeight/1.5)t.avatar.getBoundingClientRect().left-o.getBoundingClientRect().left>=.1*t.avatar.offsetWidth?d.querySelector(".collapse").after(r):d.after(r),d.classList.contains("sub-item")&&r.classList.add("sub-item");else if(a<d.getBoundingClientRect().top+d.offsetHeight/1.5&&(t.avatar.getBoundingClientRect().left-o.getBoundingClientRect().left>=.1*t.avatar.offsetWidth?d.querySelector(".collapse").after(r):d.before(r),document.getElementById("menuItems").firstChild.isEqualNode(r)&&r.classList.remove("sub-item"),d.classList.contains("sub-item")))return r.remove(),!1;t.avatar.style.width=r.offsetWidth+"px",t.avatar.style.height=r.offsetHeight+"px"}})(e),!1}},y=l=>{t.avatar&&(l=>{let o=t.avatar,r=g(l);r||o.rollback(),o.style="",o.classList.remove("drag-in");let u=a.querySelector(".droppable");if(u.classList.contains("delete-area"))t={},o.remove();else if(u.classList.contains("sub-item")){let e=u.parentNode.querySelector("ul");e||(e=document.createElement("ul"),e.classList.add("menu-items"),e.setAttribute("role","tablist"),u.parentNode.appendChild(e)),o.classList.add("sub-item"),u.replaceWith(o),e.appendChild(o)}else o.classList.remove("sub-item"),u.replaceWith(o);let i=[...n.querySelectorAll("ul")].filter((e=>0===e.children.length));for(let e of i)e.remove();t.data=d(n),s(n.querySelectorAll(".droppable:not(.delete-area)"));let c=document.querySelector(".droppable.delete-area");setTimeout((function(){c&&c.classList.remove("show")}),500),r?e.onDragEnd(t,r):e.onDragCancel(t)})(l),t={}};this.getItemsData=function(){return d(n)},this.buildMenuItems=function(e){[...e].filter((e=>{if("object"==typeof e){console.log(e);let t=e.parent_id;p(e,t)}}))},this.onInit=function(e){},this.onDragEnd=function(e,t){},this.onDragCancel=function(e){},this.onAddSuccess=function(e,t){},this.onAddFailture=function(e,t){},document.addEventListener("DOMContentLoaded",(function(t){a&&n&&(console.log("dragMenu.onload"),a.onmousedown=f,a.ontouchstart=f,a.onmousemove=h,a.ontouchmove=h,a.onmouseup=y,a.ontouchend=y,e.onInit())}))};DragMenu.onDragCancel=function(e){if(e.data){document.getElementById("addMenuForm").querySelector("input#menu-items").value=e.data}},DragMenu.onDragEnd=function(e,t){if(e.data){document.getElementById("addMenuForm").querySelector("input#menu-items").value=e.data}},DragMenu.onAddSuccess=function(e,t){document.getElementById("addMenuForm").querySelector("input#menu-items").value=this.getItemsData()},DragMenu.onInit=function(){let e=document.getElementById("addMenuForm"),t=JSON.parse(e.querySelector("input#menu-items").value);this.buildMenuItems(t)};
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1lbnUuanMiXSwibmFtZXMiOlsiRHJhZ01lbnUiLCJzZWxmIiwidGhpcyIsImRyYWdPYmplY3QiLCJkcmFnTWVudSIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJtZW51SXRlbXMiLCJtZW51U291cmNlcyIsInBhbmVscyIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJmb3JtVGVtcGxhdGUiLCJpdGVtVGVtcGxhdGUiLCJhZGRNZW51SXRlbUZvcm0iLCJyZW1vdmVFbGVtZW50cyIsImVsbXMiLCJmb3JFYWNoIiwiZWxlbSIsInJlbW92ZSIsInRyYW5zZm9ybURhdGEiLCJsaXN0IiwianNvbiIsInRyZWUiLCJwdXNoIiwiZSIsInJlZiIsIm5vZGUiLCJpdGVtRm9ybSIsInF1ZXJ5U2VsZWN0b3IiLCJwb2ludGVyIiwiaWQiLCJnZXRBdHRyaWJ1dGUiLCJ0eXBlIiwibmFtZSIsInZhbHVlIiwidGl0bGUiLCJ1cmwiLCJvbmx5X2F1dGgiLCJ0YXJnZXRfYmxhbmsiLCJjaGlsZEVsZW1lbnRDb3VudCIsImNoaWxkcmVuIiwiQXJyYXkiLCJmcm9tIiwiaSIsIm5vZGVOYW1lIiwidG9VcHBlckNhc2UiLCJKU09OIiwic3RyaW5naWZ5IiwiaHRtbFRvRWxlbWVudCIsImh0bWwiLCJ0ZW1wbGF0ZSIsImNyZWF0ZUVsZW1lbnQiLCJ0cmltIiwiaW5uZXJIVE1MIiwiY29udGVudCIsImZpcnN0Q2hpbGQiLCJmaWxsVGVtcGxhdGUiLCJzdHIiLCJvYmoiLCJiZWZvcmVSZXBsYWNlIiwiYWZ0ZXJSZXBsYWNlIiwicmVwbGFjZSIsIndob2xlTWF0Y2giLCJrZXkiLCJzdWJzdGl0dXRpb24iLCIkIiwidW5kZWZpbmVkIiwiYWRkTWVudUl0ZW0iLCJpdGVtIiwicGFyZW50IiwiY2xhc3NMaXN0IiwiY29udGFpbnMiLCJkYXRhIiwiZm9ybSIsImFkZCIsInNldEF0dHJpYnV0ZSIsImxpc3RJdGVtIiwiYXBwZW5kIiwib25BZGRTdWNjZXNzIiwib25BZGRGYWlsdHVyZSIsImxlbmd0aCIsImFkZEV2ZW50TGlzdGVuZXIiLCJldmVudCIsImNvbGxhcHNlVG9nZ2xlciIsImNvbnNvbGUiLCJsb2ciLCJzb3VyY2UiLCJkYXRhc2V0Iiwic291cmNlX25hbWUiLCJyZXNldCIsImZpbHRlciIsInBhbmVsIiwiYWRkQnV0dG9uIiwic2VsZWN0QWxsIiwiaXRlbXMiLCJvbmNoYW5nZSIsInByZXZlbnREZWZhdWx0IiwicmVtb3ZlQXR0cmlidXRlIiwib25jbGljayIsImNoZWNrZWQiLCJjaGVja2JveCIsInRhcmdldCIsImZpbmREcm9wcGFibGUiLCJhdmF0YXIiLCJoaWRkZW4iLCJ0b3AiLCJjbGllbnRZIiwiY2hhbmdlZFRvdWNoZXMiLCJwYWdlWSIsImxlZnQiLCJjbGllbnRYIiwicGFnZVgiLCJlbGVtZW50RnJvbVBvaW50IiwiY2xvc2VzdCIsIm9uTW91c2VEb3duIiwid2hpY2giLCJkb3duWCIsInRhcmdldFRvdWNoZXMiLCJkb3duWSIsIm9uTW91c2VNb3ZlIiwibW92ZVgiLCJtb3ZlWSIsIk1hdGgiLCJhYnMiLCJvbGQiLCJwYXJlbnROb2RlIiwibmV4dFNpYmxpbmciLCJwb3NpdGlvbiIsInpJbmRleCIsInJvbGxiYWNrIiwiaW5zZXJ0QmVmb3JlIiwic3R5bGUiLCJjb29yZHMiLCJib3giLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJwYWdlWU9mZnNldCIsInBhZ2VYT2Zmc2V0IiwiZ2V0Q29vcmRzIiwic2hpZnRYIiwic2hpZnRZIiwid2lkdGgiLCJvZmZzZXRXaWR0aCIsImhlaWdodCIsIm9mZnNldEhlaWdodCIsImJvZHkiLCJhcHBlbmRDaGlsZCIsImRlbGV0ZUFyZWEiLCJzdGFydERyYWciLCJkcm9wcGFibGUiLCJpdGVtVGV4dCIsImRyb3BwYWJsZVRleHQiLCJjcmVhdGVUZXh0Tm9kZSIsImlzRXF1YWxOb2RlIiwiYWZ0ZXIiLCJiZWZvcmUiLCJjcmVhdGVEcm9wcGFibGUiLCJvbk1vdXNlVXAiLCJkcm9wRWxlbSIsInJlcGxhY2VXaXRoIiwiZW1wdHlMaXN0IiwiZW1wdHkiLCJzZXRUaW1lb3V0Iiwib25EcmFnRW5kIiwib25EcmFnQ2FuY2VsIiwiZmluaXNoRHJhZyIsImdldEl0ZW1zRGF0YSIsImJ1aWxkTWVudUl0ZW1zIiwicGFyZW50X2lkIiwib25Jbml0Iiwib25tb3VzZWRvd24iLCJvbnRvdWNoc3RhcnQiLCJvbm1vdXNlbW92ZSIsIm9udG91Y2htb3ZlIiwib25tb3VzZXVwIiwib250b3VjaGVuZCIsInBhcnNlIl0sIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxTQUFXLElBQUksV0FFZixJQUFJQyxFQUFPQyxLQUNQQyxFQUFhLEdBQ2JDLEVBQVdDLFNBQVNDLGVBQWUsWUFDbkNDLEVBQVlGLFNBQVNDLGVBQWUsYUFDcENFLEVBQWNILFNBQVNDLGVBQWUsZUFDdENHLEVBQVNELEVBQVlFLGlCQUFpQixVQUN0Q0MsRUFBZU4sU0FBU0MsZUFBZSxvQkFDdkNNLEVBQWVQLFNBQVNDLGVBQWUsb0JBQ3ZDTyxFQUFrQlIsU0FBU0MsZUFBZSxtQkFFOUMsTUFBTVEsRUFBa0JDLEdBQVNBLEVBQUtDLFNBQVFDLEdBQVFBLEVBQUtDLFdBRXJEQyxFQUFnQixDQUFDQyxFQUFNQyxHQUFPLEtBQ2hDLElBQUlDLEVBQU8sR0FRWCxTQUFTQyxFQUFLQyxFQUFHQyxFQUFLQyxFQUFPLE1BRXpCLElBQUlDLEVBQVdILEVBQUVJLGNBQWMsa0JBQzNCQyxFQUFVLENBQ1ZDLEdBQUlILEVBQVNJLGFBQWEsYUFBZSxLQUN6Q0MsS0FBTUwsRUFBU0ksYUFBYSxjQUFnQixLQUM1Q0UsS0FBTU4sRUFBU0MsY0FBYyxpQ0FBaUNNLE9BQVMsS0FDdkVDLE1BQU9SLEVBQVNDLGNBQWMsa0NBQWtDTSxPQUFTLEtBQ3pFRSxJQUFLVCxFQUFTQyxjQUFjLGdDQUFnQ00sT0FBUyxLQUNyRUcsVUFBV1YsRUFBU0MsY0FBYyxzQ0FBc0NNLE9BQVMsS0FDakZJLGFBQWNYLEVBQVNDLGNBQWMseUNBQXlDTSxPQUFTLE1BR3ZGVixFQUFFZSxvQkFDRlYsRUFBUVcsU0FBVyxHQUNuQkMsTUFBTUMsS0FB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OUJzQixjQUFjLG9CQUFvQk0sTUFBUS9CLEVBQVdxRSxPQUlsRXhFLFNBQVM4RSxhQUFlLFNBQVUzRSxFQUFZSSxHQUMvQkYsU0FBU0MsZUFBZSxlQUM5QnNCLGNBQWMsb0JBQW9CTSxNQUFRaEMsS0FBS21LLGdCQUd4RHJLLFNBQVN3SyxPQUFTLFdBQ2QsSUFBSS9GLEVBQU9wRSxTQUFTQyxlQUFlLGVBQy9Ca0UsRUFBTzFCLEtBQUtpSSxNQUFNdEcsRUFBSzdDLGNBQWMsb0JBQW9CTSxPQUM3RGhDLEtBQUtvSyxlQUFlOUYiLCJmaWxlIjoibWVudS5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBEcmFnTWVudSA9IG5ldyBmdW5jdGlvbigpIHtcblxuICAgIHZhciBzZWxmID0gdGhpcztcbiAgICB2YXIgZHJhZ09iamVjdCA9IHt9O1xuICAgIHZhciBkcmFnTWVudSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdkcmFnTWVudScpO1xuICAgIHZhciBtZW51SXRlbXMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbWVudUl0ZW1zJyk7XG4gICAgdmFyIG1lbnVTb3VyY2VzID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ21lbnVTb3VyY2VzJyk7XG4gICAgdmFyIHBhbmVscyA9IG1lbnVTb3VyY2VzLnF1ZXJ5U2VsZWN0b3JBbGwoXCIucGFuZWxcIik7XG4gICAgdmFyIGZvcm1UZW1wbGF0ZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdpdGVtRm9ybVRlbXBsYXRlJyk7XG4gICAgdmFyIGl0ZW1UZW1wbGF0ZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdtZW51SXRlbVRlbXBsYXRlJyk7XG4gICAgdmFyIGFkZE1lbnVJdGVtRm9ybSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhZGRNZW51SXRlbUZvcm0nKTtcblxuICAgIGNvbnN0IHJlbW92ZUVsZW1lbnRzID0gKGVsbXMpID0+IGVsbXMuZm9yRWFjaChlbGVtID0+IGVsZW0ucmVtb3ZlKCkpO1xuXG4gICAgY29uc3QgdHJhbnNmb3JtRGF0YSA9IChsaXN0LCBqc29uID0gdHJ1ZSkgPT4ge1xuICAgICAgICBsZXQgdHJlZSA9IFtdO1xuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiDQndCw0L/QvtC70L3QtdC90LjQtSDQtNC10YDQtdCy0LAg0LfQvdCw0YfQtdC90LjRj9C80LhcbiAgICAgICAgICpcbiAgICAgICAgICogQHBhcmFtIHtIVE1MTElFbGVtZW50fSBlICAgTEkt0Y3Qu9C10LzQtdC90YIg0YEgZGF0YS1pZFxuICAgICAgICAgKiBAcGFyYW0ge0FycmF5fSAgICAgICAgIHJlZiDQodGB0YvQu9C60LAg0L3QsCDQtNC10YDQtdCy0L4sINC60YPQtNCwINC00L7QsdCw0LLQu9GP0YLRjCDRgdCy0L7QudGB0YLQstCwXG4gICAgICAgICAqL1xuICAgICAgICBmdW5jdGlvbiBwdXNoKGUsIHJlZiwgbm9kZSA9ICdVTCcpIHtcblxuICAgICAgICAgICAgbGV0IGl0ZW1Gb3JtID0gZS5xdWVyeVNlbGVjdG9yKCdmb3JtW2RhdGEta2V5XScpO1xuICAgICAgICAgICAgbGV0IHBvaW50ZXIgPSB7IC8vINCR0LXRgNGR0Lwg0LDRgtGA0LjQsdGD0YIgaWQg0Y3Qu9C10LzQtdC90YLQsFxuICAgICAgICAgICAgICAgIGlkOiBpdGVtRm9ybS5nZXRBdHRyaWJ1dGUoJ2RhdGEta2V5JykgfHwgbnVsbCxcbiAgICAgICAgICAgICAgICB0eXBlOiBpdGVtRm9ybS5nZXRBdHRyaWJ1dGUoJ2RhdGEtdHlwZScpIHx8IG51bGwsXG4gICAgICAgICAgICAgICAgbmFtZTogaXRlbUZvcm0ucXVlcnlTZWxlY3RvcignaW5wdXRbbmFtZT1cIk1lbnVJdGVtc1tuYW1lXVwiXScpLnZhbHVlIHx8IG51bGwsXG4gICAgICAgICAgICAgICAgdGl0bGU6IGl0ZW1Gb3JtLnF1ZXJ5U2VsZWN0b3IoJ2lucHV0W25hbWU9XCJNZW51SXRlbXNbdGl0bGVdXCJdJykudmFsdWUgfHwgbnVsbCxcbiAgICAgICAgICAgICAgICB1cmw6IGl0ZW1Gb3JtLnF1ZXJ5U2VsZWN0b3IoJ2lucHV0W25hbWU9XCJNZW51SXRlbXNbdXJsXVwiXScpLnZhbHVlIHx8IG51bGwsXG4gICAgICAgICAgICAgICAgb25seV9hdXRoOiBpdGVtRm9ybS5xdWVyeVNlbGVjdG9yKCdpbnB1dFtuYW1lPVwiTWVudUl0ZW1zW29ubHlfYXV0aF1cIl0nKS52YWx1ZSB8fCBudWxsLFxuICAgICAgICAgICAgICAgIHRhcmdldF9ibGFuazogaXRlbUZvcm0ucXVlcnlTZWxlY3RvcignaW5wdXRbbmFtZT1cIk1lbnVJdGVtc1t0YXJnZXRfYmxhbmtdXCJdJykudmFsdWUgfHwgbnVsbCxcbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIGlmIChlLmNoaWxkRWxlbWVudENvdW50KSB7IC8vINCV0YHQu9C4INC10YHRgtGMINC/0L7RgtC+0LzQutC4XG4gICAgICAgICAgICAgICAgcG9pbnRlci5jaGlsZHJlbiA9IFtdOyAvLyDQodC+0LfQtNCw0ZHQvCDRgdCy0L7QudGB0YLQstC+INC00LvRjyDQvdC40YVcbiAgICAgICAgICAgICAgICBBcnJheS5mcm9tKGUuY2hpbGRyZW4pLmZvckVhY2goaSA9PiB7IC8vINCf0LXRgNC10LHQuNGA0LDQtdC8Li4uINGF0LwuLi4g0LTQtdGC0LXQuSAo0L/QviDQutC+0YHRgtC+0YfQutCw0LwhKVxuICAgICAgICAgICAgICAgICAgICBpZiAoaS5ub2RlTmFtZSA9PT0gbm9kZS50b1VwcGVyQ2FzZSgpKSB7IC8vINCV0YHQu9C4INC10YHRgtGMINC10YnRkSDQvtC00LjQvSDQutC+0L3RgtC10LnQvdC10YAgVUwsINC/0LXRgNC10LHQuNGA0LDQtdC8INC10LPQvlxuICAgICAgICAgICAgICAgICAgICAgICAgQXJyYXkuZnJvbShpLmNoaWxkcmVuKS5mb3JFYWNoKGUgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHB1c2goZSwgcG9pbnRlci5jaGlsZHJlbik7IC8vINCS0YvQt9GL0LLQsNC10LwgcHVzaCDQvdCwINC90L7QstGL0YUgbGksINC90L4g0YHRgdGL0LvQutCwINC90LAg0LTRgNC10LLQviDRgtC10L/QtdGA0YwgLSDRjdGC0L4g0LzQsNGB0YHQuNCyIGNoaWxkcmVuINGD0LrQsNC30LDRgtC10LvRj1xuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmVmLnB1c2gocG9pbnRlcik7XG4gICAgICAgIH1cblxuICAgICAgICAvLyDQn9GA0L7RhdC+0LTQuNC80YHRjyDQv9C+INCy0YHQtdC8IGxpINC/0LXRgNC10LTQsNC90L3QvtCz0L4gdWxcbiAgICAgICAgQXJyYXkuZnJvbShsaXN0LmNoaWxkcmVuKS5mb3JFYWNoKGUgPT4ge1xuICAgICAgICAgICAgcHVzaChlLCB0cmVlLCAnVUwnKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgcmV0dXJuIGpzb24gPyBKU09OLnN0cmluZ2lmeSh0cmVlKSA6IHRyZWU7XG4gICAgfVxuXG4gICAgY29uc3QgdG9XcmFwID0gKGVsZW0sIHdyYXBwZXIpID0+IHtcbiAgICAgICAgd3JhcHBlciA9IHdyYXBwZXIgfHwgZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgIGVsZW0ucGFyZW50Tm9kZS5hcHBlbmRDaGlsZCh3cmFwcGVyKTtcbiAgICAgICAgcmV0dXJuIHdyYXBwZXIuYXBwZW5kQ2hpbGQoZWxlbSk7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIEBwYXJhbSB7U3RyaW5nfSBIVE1MIHJlcHJlc2VudGluZyBhIHNpbmdsZSBlbGVtZW50XG4gICAgICogQHJldHVybiB7RWxlbWVudH1cbiAgICAgKi9cbiAgICBjb25zdCBodG1sVG9FbGVtZW50ID0gKGh0bWwpID0+IHtcbiAgICAgICAgdmFyIHRlbXBsYXRlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndGVtcGxhdGUnKTtcbiAgICAgICAgaHRtbCA9IGh0bWwudHJpbSgpOyAvLyBOZXZlciByZXR1cm4gYSB0ZXh0IG5vZGUgb2Ygd2hpdGVzcGFjZSBhcyB0aGUgcmVzdWx0XG4gICAgICAgIHRlbXBsYXRlLmlubmVySFRNTCA9IGh0bWw7XG4gICAgICAgIHJldHVybiB0ZW1wbGF0ZS5jb250ZW50LmZpcnN0Q2hpbGQ7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQHBhcmFtIHtTdHJpbmd9IEhUTUwgcmVwcmVzZW50aW5nIGFueSBudW1iZXIgb2Ygc2libGluZyBlbGVtZW50c1xuICAgICAqIEByZXR1cm4ge05vZGVMaXN0fVxuICAgICAqL1xuICAgIGNvbnN0IGh0bWxUb0VsZW1lbnRzID0gKGh0bWwpID0+IHtcbiAgICAgICAgdmFyIHRlbXBsYXRlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndGVtcGxhdGUnKTtcbiAgICAgICAgdGVtcGxhdGUuaW5uZXJIVE1MID0gaHRtbDtcbiAgICAgICAgcmV0dXJuIHRlbXBsYXRlLmNvbnRlbnQuY2hpbGROb2RlcztcbiAgICB9XG5cbiAgICBjb25zdCBmaWxsVGVtcGxhdGUgPSAoc3RyLCBvYmopID0+IHtcbiAgICAgICAgZG8ge1xuICAgICAgICAgICAgdmFyIGJlZm9yZVJlcGxhY2UgPSBzdHI7XG4gICAgICAgICAgICBzdHIgPSBzdHIucmVwbGFjZSgve3tcXHMqKFtefVxcc10rKVxccyp9fS9nLCBmdW5jdGlvbih3aG9sZU1hdGNoLCBrZXkpIHtcbiAgICAgICAgICAgICAgICB2YXIgc3Vic3RpdHV0aW9uID0gb2JqWyQudHJpbShrZXkpXTtcbiAgICAgICAgICAgICAgICByZXR1cm4gKHN1YnN0aXR1dGlvbiA9PT0gdW5kZWZpbmVkID8gd2hvbGVNYXRjaCA6IHN1YnN0aXR1dGlvbik7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHZhciBhZnRlclJlcGxhY2UgPSBzdHIgIT09IGJlZm9yZVJlcGxhY2U7XG4gICAgICAgIH0gd2hpbGUgKGFmdGVyUmVwbGFjZSk7XG5cbiAgICAgICAgcmV0dXJuIHN0cjtcbiAgICB9O1xuXG4gICAgY29uc3QgZ2V0Q29vcmRzID0gKGVsZW0pID0+IHtcbiAgICAgICAgbGV0IGJveCA9IGVsZW0uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICB0b3A6IGJveC50b3AgKyBwYWdlWU9mZnNldCxcbiAgICAgICAgICAgIGxlZnQ6IGJveC5sZWZ0ICsgcGFnZVhPZmZzZXRcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICB2YXIgYWRkTWVudUl0ZW0gPSAoaXRlbSwgcGFyZW50ID0gbnVsbCkgPT4ge1xuICAgICAgICBpZiAobWVudUl0ZW1zICYmIGl0ZW1UZW1wbGF0ZSAmJiAnY29udGVudCcgaW4gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndGVtcGxhdGUnKSkge1xuXG4gICAgICAgICAgICBpZiAobWVudUl0ZW1zLmNsYXNzTGlzdC5jb250YWlucygnbm8taXRlbXMnKSkge1xuICAgICAgICAgICAgICAgIG1lbnVJdGVtcy5jbGFzc0xpc3QucmVtb3ZlKCduby1pdGVtcycpO1xuICAgICAgICAgICAgICAgIG1lbnVJdGVtcy5pbm5lckhUTUwgPSBcIlwiO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBsZXQgZGF0YSA9IGl0ZW07XG4gICAgICAgICAgICBkYXRhLmZvcm0gPSBmaWxsVGVtcGxhdGUoZm9ybVRlbXBsYXRlLmlubmVySFRNTCwgZGF0YSk7XG5cbiAgICAgICAgICAgIGxldCBjb250ZW50ID0gZmlsbFRlbXBsYXRlKGl0ZW1UZW1wbGF0ZS5pbm5lckhUTUwsIGRhdGEpO1xuXG4gICAgICAgICAgICBpZiAocGFyZW50KSB7XG5cbiAgICAgICAgICAgICAgICBsZXQgbGlzdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3VsJyk7XG4gICAgICAgICAgICAgICAgbGlzdC5jbGFzc0xpc3QuYWRkKCdtZW51LWl0ZW1zJyk7XG4gICAgICAgICAgICAgICAgbGlzdC5zZXRBdHRyaWJ1dGUoJ3JvbGUnLCBcInRhYmxpc3RcIik7XG5cbiAgICAgICAgICAgICAgICBsZXQgbGlzdEl0ZW0gPSBodG1sVG9FbGVtZW50KGNvbnRlbnQpO1xuICAgICAgICAgICAgICAgIGxpc3RJdGVtLmNsYXNzTGlzdC5hZGQoJ3N1Yi1pdGVtJyk7XG4gICAgICAgICAgICAgICAgbGlzdC5hcHBlbmQobGlzdEl0ZW0pO1xuXG4gICAgICAgICAgICAgICAgbWVudUl0ZW1zLnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLWlkPVwiJyArIHBhcmVudCArICdcIl0nKS5hcHBlbmQobGlzdCk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIG1lbnVJdGVtcy5hcHBlbmQoaHRtbFRvRWxlbWVudChjb250ZW50KSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJldHVybiBzZWxmLm9uQWRkU3VjY2VzcyhkcmFnT2JqZWN0LCBtZW51SXRlbXMpO1xuXG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHNlbGYub25BZGRGYWlsdHVyZShkcmFnT2JqZWN0LCBtZW51SXRlbXMpO1xuICAgIH07XG5cbiAgICBpZiAoYWRkTWVudUl0ZW1Gb3JtLmxlbmd0aCkge1xuICAgICAgICBsZXQgYWRkQnV0dG9uID0gYWRkTWVudUl0ZW1Gb3JtLnF1ZXJ5U2VsZWN0b3IoJ2J1dHRvbltkYXRhLXJlbD1cImFkZFwiXScpO1xuICAgICAgICBhZGRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChldmVudCkgPT4ge1xuXG4gICAgICAgICAgICBsZXQgY29sbGFwc2VUb2dnbGVyID0gbWVudVNvdXJjZXMucXVlcnlTZWxlY3RvcignI3NvdXJjZS1saW5rIGFbZGF0YS10b2dnbGU9XCJjb2xsYXBzZVwiXScpO1xuXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhjb2xsYXBzZVRvZ2dsZXIpO1xuXG4gICAgICAgICAgICBsZXQgaXRlbSA9IHtcbiAgICAgICAgICAgICAgICAnaWQnOiBudWxsLFxuICAgICAgICAgICAgICAgICdzb3VyY2UnOiBjb2xsYXBzZVRvZ2dsZXIuZGF0YXNldC50eXBlIHx8IG51bGwsXG4gICAgICAgICAgICAgICAgJ3NvdXJjZV9uYW1lJzogY29sbGFwc2VUb2dnbGVyLmRhdGFzZXQubmFtZSB8fCBudWxsLFxuICAgICAgICAgICAgICAgICduYW1lJzogYWRkTWVudUl0ZW1Gb3JtLnF1ZXJ5U2VsZWN0b3IoJ2lucHV0W25hbWU9XCJNZW51SXRlbXNbbmFtZV1cIl0nKS52YWx1ZSB8fCBmYWxzZSxcbiAgICAgICAgICAgICAgICAndGl0bGUnOiBhZGRNZW51SXRlbUZvcm0ucXVlcnlTZWxlY3RvcignaW5wdXRbbmFtZT1cIk1lbnVJdGVtc1t0aXRsZV1cIl0nKS52YWx1ZSB8fCBmYWxzZSxcbiAgICAgICAgICAgICAgICAndXJsJzogYWRkTWVudUl0ZW1Gb3JtLnF1ZXJ5U2VsZWN0b3IoJ2lucHV0W25hbWU9XCJNZW51SXRlbXNbdXJsXVwiXScpLnZhbHVlIHx8IGZhbHNlLFxuICAgICAgICAgICAgICAgICdvbmx5X2F1dGgnOiBhZGRNZW51SXRlbUZvcm0ucXVlcnlTZWxlY3RvcignaW5wdXRbbmFtZT1cIk1lbnVJdGVtc1tvbmx5X2F1dGhdXCJdJykudmFsdWUgfHwgZmFsc2UsXG4gICAgICAgICAgICAgICAgJ3RhcmdldF9ibGFuayc6IGFkZE1lbnVJdGVtRm9ybS5xdWVyeVNlbGVjdG9yKCdpbnB1dFtuYW1lPVwiTWVudUl0ZW1zW3RhcmdldF9ibGFua11cIl0nKS52YWx1ZSB8fCBmYWxzZSxcbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIGlmIChhZGRNZW51SXRlbShpdGVtKSlcbiAgICAgICAgICAgICAgICBhZGRNZW51SXRlbUZvcm0ucmVzZXQoKTtcblxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICB2YXIgc291cmNlc0xpc3QgPSBbLi4ucGFuZWxzXS5maWx0ZXIocGFuZWwgPT4ge1xuICAgICAgICBpZiAocGFuZWwuY2hpbGRyZW4ubGVuZ3RoKSB7XG5cbiAgICAgICAgICAgIGxldCBhZGRCdXR0b24gPSBwYW5lbC5xdWVyeVNlbGVjdG9yKCdidXR0b25bZGF0YS1yZWw9XCJhZGRcIl0nKTtcbiAgICAgICAgICAgIGxldCBzZWxlY3RBbGwgPSBwYW5lbC5xdWVyeVNlbGVjdG9yKCdpbnB1dFt0eXBlPVwiY2hlY2tib3hcIl1bbmFtZT1cInNlbGVjdC1hbGxcIl0nKTtcbiAgICAgICAgICAgIGxldCBpdGVtcyA9IHBhbmVsLnF1ZXJ5U2VsZWN0b3JBbGwoJy5zb3VyY2UtbGlzdCBpbnB1dFt0eXBlPVwiY2hlY2tib3hcIl0nKTtcblxuXG4gICAgICAgICAgICBpZiAoYWRkQnV0dG9uICYmIGl0ZW1zKSB7XG5cbiAgICAgICAgICAgICAgICBpdGVtcy5mb3JFYWNoKGl0ZW0gPT4ge1xuICAgICAgICAgICAgICAgICAgICBpdGVtLm9uY2hhbmdlID0gKGV2ZW50KSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHBhbmVsLnF1ZXJ5U2VsZWN0b3JBbGwoJ2lucHV0W3R5cGU9XCJjaGVja2JveFwiXTpjaGVja2VkOm5vdChbbmFtZT1cInNlbGVjdC1hbGxcIl0pJykubGVuZ3RoKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFkZEJ1dHRvbi5yZW1vdmVBdHRyaWJ1dGUoJ2Rpc2FibGVkJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBlbHNlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYWRkQnV0dG9uLnNldEF0dHJpYnV0ZSgnZGlzYWJsZWQnLCB0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgYWRkQnV0dG9uLm9uY2xpY2sgPSAoZXZlbnQpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgICAgICAgbGV0IHNvdXJjZXNJdGVtcyA9IFsuLi5pdGVtc10uZmlsdGVyKGl0ZW0gPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGl0ZW0uY2hlY2tlZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFkZE1lbnVJdGVtKGl0ZW0uZGF0YXNldCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgICAgIGl0ZW1zLmZvckVhY2goY2hlY2tib3ggPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgY2hlY2tib3guY2hlY2tlZCA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChzZWxlY3RBbGwgJiYgaXRlbXMpIHtcbiAgICAgICAgICAgICAgICBzZWxlY3RBbGwub25jaGFuZ2UgPSAoZXZlbnQpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgICAgICAgbGV0IHRhcmdldCA9IGV2ZW50LnRhcmdldC5jaGVja2VkO1xuICAgICAgICAgICAgICAgICAgICBpdGVtcy5mb3JFYWNoKGNoZWNrYm94ID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0YXJnZXQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGVja2JveC5jaGVja2VkID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hlY2tib3guY2hlY2tlZCA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgY2hlY2tib3gub25jaGFuZ2UoZXZlbnQpO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9KTtcblxuXG4gICAgdmFyIGNyZWF0ZURyb3BwYWJsZSA9IChlKSA9PiB7XG4gICAgICAgIGxldCB0b3AgPSBlLmNsaWVudFkgfHwgZS50YXJnZXRUb3VjaGVzWzBdLnBhZ2VZO1xuICAgICAgICBsZXQgbGVmdCA9IGUuY2xpZW50WCB8fCBlLnRhcmdldFRvdWNoZXNbMF0ucGFnZVg7XG4gICAgICAgIGxldCBlbGVtID0gZG9jdW1lbnQuZWxlbWVudEZyb21Qb2ludChsZWZ0LCB0b3ApO1xuICAgICAgICBsZXQgZHJvcHBhYmxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgIGRyb3BwYWJsZS5jbGFzc0xpc3QuYWRkKCdkcm9wcGFibGUnKTtcblxuICAgICAgICBpZiAoKGRyYWdPYmplY3QuYXZhdGFyLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLmxlZnQgLSBlbGVtLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLmxlZnQpID49IChkcmFnT2JqZWN0LmF2YXRhci5vZmZzZXRXaWR0aCowLjEpKVxuICAgICAgICAgICAgZHJvcHBhYmxlLmNsYXNzTGlzdC5hZGQoJ3N1Yi1pdGVtJyk7XG4gICAgICAgIGVsc2VcbiAgICAgICAgICAgIGRyb3BwYWJsZS5jbGFzc0xpc3QucmVtb3ZlKCdzdWItaXRlbScpO1xuXG4gICAgICAgIGxldCBpdGVtVGV4dCA9IGRyYWdPYmplY3QuYXZhdGFyLnF1ZXJ5U2VsZWN0b3IoJy5wYW5lbC10aXRsZSBhW2RhdGEtdG9nZ2xlPVwiY29sbGFwc2VcIl0nKS5kYXRhc2V0WyduYW1lJ107XG4gICAgICAgIGxldCBkcm9wcGFibGVUZXh0ID0gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoaXRlbVRleHQudHJpbSgpKTtcbiAgICAgICAgZHJvcHBhYmxlLmFwcGVuZENoaWxkKGRyb3BwYWJsZVRleHQpO1xuXG4gICAgICAgIGRyb3BwYWJsZS5zdHlsZS53aWR0aCA9IGRyYWdPYmplY3QuYXZhdGFyLm9mZnNldFdpZHRoICsgJ3B4JztcbiAgICAgICAgZHJvcHBhYmxlLnN0eWxlLmhlaWdodCA9IGRyYWdPYmplY3QuYXZhdGFyLm9mZnNldEhlaWdodCArICdweCc7XG5cbiAgICAgICAgaWYgKCFkcm9wcGFibGUuaXNFcXVhbE5vZGUoZHJhZ09iamVjdC5kcm9wcGFibGUpKSB7XG4gICAgICAgICAgICByZW1vdmVFbGVtZW50cyhtZW51SXRlbXMucXVlcnlTZWxlY3RvckFsbChcIi5kcm9wcGFibGU6bm90KC5kZWxldGUtYXJlYSlcIikpO1xuICAgICAgICAgICAgZHJhZ09iamVjdC5kcm9wcGFibGUgPSBudWxsO1xuICAgICAgICB9XG4gICAgICAgIGRyYWdPYmplY3QuZHJvcHBhYmxlID0gZHJvcHBhYmxlO1xuXG4gICAgICAgIGxldCB0YXJnZXQgPSBlbGVtLmNsb3Nlc3QoJy5kcmFnZ2FibGUnKTtcblxuICAgICAgICBpZiAodGFyZ2V0ICYmIHR5cGVvZiB0YXJnZXQgIT09IFwidW5kZWZpbmVkXCIpIHtcblxuICAgICAgICAgICAgLy9jb25zb2xlLmxvZygndGFyZ2V0JywgdGFyZ2V0KTtcblxuICAgICAgICAgICAgcmVtb3ZlRWxlbWVudHMobWVudUl0ZW1zLnF1ZXJ5U2VsZWN0b3JBbGwoXCIuZHJvcHBhYmxlOm5vdCguZGVsZXRlLWFyZWEpXCIpKTtcblxuICAgICAgICAgICAgbGV0IHRvcCA9IGUuY2xpZW50WSB8fCBlLnRhcmdldFRvdWNoZXNbMF0ucGFnZVk7XG4gICAgICAgICAgICBsZXQgbGVmdCA9IGUuY2xpZW50WCB8fCBlLnRhcmdldFRvdWNoZXNbMF0ucGFnZVg7XG4gICAgICAgICAgICBpZiAodG9wID49ICh0YXJnZXQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkudG9wICsgKHRhcmdldC5vZmZzZXRIZWlnaHQvMS41KSkpIHtcblxuXG4gICAgICAgICAgICAgICAgaWYgKChkcmFnT2JqZWN0LmF2YXRhci5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS5sZWZ0IC0gZWxlbS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS5sZWZ0KSA+PSAoZHJhZ09iamVjdC5hdmF0YXIub2Zmc2V0V2lkdGgqMC4xKSlcbiAgICAgICAgICAgICAgICAgICAgdGFyZ2V0LnF1ZXJ5U2VsZWN0b3IoJy5jb2xsYXBzZScpLmFmdGVyKGRyb3BwYWJsZSk7XG4gICAgICAgICAgICAgICAgZWxzZVxuICAgICAgICAgICAgICAgICAgICB0YXJnZXQuYWZ0ZXIoZHJvcHBhYmxlKTtcblxuICAgICAgICAgICAgICAgIGlmICh0YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKCdzdWItaXRlbScpKVxuICAgICAgICAgICAgICAgICAgICBkcm9wcGFibGUuY2xhc3NMaXN0LmFkZCgnc3ViLWl0ZW0nKTtcblxuICAgICAgICAgICAgICAgIC8vY29uc29sZS5sb2coJ2FmdGVyJyk7XG5cbiAgICAgICAgICAgIH0gZWxzZSBpZiAodG9wIDwgKHRhcmdldC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS50b3AgKyAodGFyZ2V0Lm9mZnNldEhlaWdodC8xLjUpKSkge1xuXG4gICAgICAgICAgICAgICAgaWYgKChkcmFnT2JqZWN0LmF2YXRhci5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS5sZWZ0IC0gZWxlbS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS5sZWZ0KSA+PSAoZHJhZ09iamVjdC5hdmF0YXIub2Zmc2V0V2lkdGgqMC4xKSlcbiAgICAgICAgICAgICAgICAgICAgdGFyZ2V0LnF1ZXJ5U2VsZWN0b3IoJy5jb2xsYXBzZScpLmFmdGVyKGRyb3BwYWJsZSk7XG4gICAgICAgICAgICAgICAgZWxzZVxuICAgICAgICAgICAgICAgICAgICB0YXJnZXQuYmVmb3JlKGRyb3BwYWJsZSk7XG5cbiAgICAgICAgICAgICAgICBpZiAoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ21lbnVJdGVtcycpLmZpcnN0Q2hpbGQuaXNFcXVhbE5vZGUoZHJvcHBhYmxlKSlcbiAgICAgICAgICAgICAgICAgICAgZHJvcHBhYmxlLmNsYXNzTGlzdC5yZW1vdmUoJ3N1Yi1pdGVtJyk7XG5cbiAgICAgICAgICAgICAgICBpZiAodGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucygnc3ViLWl0ZW0nKSkge1xuICAgICAgICAgICAgICAgICAgICBkcm9wcGFibGUucmVtb3ZlKCk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAvL2NvbnNvbGUubG9nKCdiZWZvcmUnKTtcblxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBkcmFnT2JqZWN0LmF2YXRhci5zdHlsZS53aWR0aCA9IGRyb3BwYWJsZS5vZmZzZXRXaWR0aCArICdweCc7XG4gICAgICAgICAgICBkcmFnT2JqZWN0LmF2YXRhci5zdHlsZS5oZWlnaHQgPSBkcm9wcGFibGUub2Zmc2V0SGVpZ2h0ICsgJ3B4JztcbiAgICAgICAgfVxuICAgIH1cbiAgICB2YXIgY3JlYXRlQXZhdGFyID0gKGUpID0+IHtcblxuICAgICAgICAvLyDQt9Cw0L/QvtC80L3QuNGC0Ywg0YHRgtCw0YDRi9C1INGB0LLQvtC50YHRgtCy0LAsINGH0YLQvtCx0Ysg0LLQtdGA0L3Rg9GC0YzRgdGPINC6INC90LjQvCDQv9GA0Lgg0L7RgtC80LXQvdC1INC/0LXRgNC10L3QvtGB0LBcbiAgICAgICAgdmFyIGF2YXRhciA9IGRyYWdPYmplY3QuZWxlbTtcbiAgICAgICAgdmFyIG9sZCA9IHtcbiAgICAgICAgICAgIHBhcmVudDogYXZhdGFyLnBhcmVudE5vZGUsXG4gICAgICAgICAgICBuZXh0U2libGluZzogYXZhdGFyLm5leHRTaWJsaW5nLFxuICAgICAgICAgICAgcG9zaXRpb246IGF2YXRhci5wb3NpdGlvbiB8fCAnJyxcbiAgICAgICAgICAgIGxlZnQ6IGF2YXRhci5sZWZ0IHx8ICcnLFxuICAgICAgICAgICAgdG9wOiBhdmF0YXIudG9wIHx8ICcnLFxuICAgICAgICAgICAgekluZGV4OiBhdmF0YXIuekluZGV4IHx8ICcnXG4gICAgICAgIH07XG5cbiAgICAgICAgLy8g0YTRg9C90LrRhtC40Y8g0LTQu9GPINC+0YLQvNC10L3RiyDQv9C10YDQtdC90L7RgdCwXG4gICAgICAgIGF2YXRhci5yb2xsYmFjayA9ICgpID0+IHtcbiAgICAgICAgICAgIG9sZC5wYXJlbnQuaW5zZXJ0QmVmb3JlKGF2YXRhciwgb2xkLm5leHRTaWJsaW5nKTtcbiAgICAgICAgICAgIGF2YXRhci5zdHlsZS5wb3NpdGlvbiA9IG9sZC5wb3NpdGlvbjtcbiAgICAgICAgICAgIGF2YXRhci5zdHlsZS5sZWZ0ID0gb2xkLmxlZnQ7XG4gICAgICAgICAgICBhdmF0YXIuc3R5bGUudG9wID0gb2xkLnRvcDtcbiAgICAgICAgICAgIGF2YXRhci5zdHlsZS56SW5kZXggPSBvbGQuekluZGV4O1xuICAgICAgICAgICAgLy9jb25zb2xlLmxvZygnRHJhZyBjYW5jZWwsIHJvbGxiYWNrJyk7XG4gICAgICAgICAgICAvKnNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmRyb3BwYWJsZS5kZWxldGUtYXJlYScpLmNsYXNzTGlzdC5yZW1vdmUoJ3Nob3cnKTtcbiAgICAgICAgICAgIH0sIDUwMCk7Ki9cbiAgICAgICAgfTtcblxuICAgICAgICByZXR1cm4gYXZhdGFyO1xuICAgIH1cbiAgICB2YXIgc3RhcnREcmFnID0gKGUpID0+IHtcbiAgICAgICAgLy9jb25zb2xlLmxvZygnc3RhcnREcmFnJyk7XG5cbiAgICAgICAgbGV0IGF2YXRhciA9IGRyYWdPYmplY3QuYXZhdGFyO1xuICAgICAgICBhdmF0YXIuc3R5bGUud2lkdGggPSBkcmFnT2JqZWN0LmF2YXRhci5vZmZzZXRXaWR0aCArICdweCc7XG4gICAgICAgIGF2YXRhci5zdHlsZS5oZWlnaHQgPSBkcmFnT2JqZWN0LmF2YXRhci5vZmZzZXRIZWlnaHQgKyAncHgnO1xuXG4gICAgICAgIC8vINC40L3QuNGG0LjQuNGA0L7QstCw0YLRjCDQvdCw0YfQsNC70L4g0L/QtdGA0LXQvdC+0YHQsFxuICAgICAgICBhdmF0YXIuY2xhc3NMaXN0LmFkZCgnZHJhZy1pbicpO1xuICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGF2YXRhcik7XG5cbiAgICAgICAgbGV0IGRlbGV0ZUFyZWEgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmRyb3BwYWJsZS5kZWxldGUtYXJlYVwiKTtcbiAgICAgICAgaWYgKGRlbGV0ZUFyZWEpXG4gICAgICAgICAgICBkZWxldGVBcmVhLmNsYXNzTGlzdC5hZGQoJ3Nob3cnKTtcblxuICAgIH1cbiAgICB2YXIgZmluaXNoRHJhZyA9IChlKSA9PiB7XG4gICAgICAgIC8vY29uc29sZS5sb2coJ2ZpbmlzaERyYWcnKTtcblxuICAgICAgICBsZXQgYXZhdGFyID0gZHJhZ09iamVjdC5hdmF0YXI7XG4gICAgICAgIGxldCBkcm9wRWxlbSA9IGZpbmREcm9wcGFibGUoZSk7XG5cbiAgICAgICAgaWYgKCFkcm9wRWxlbSlcbiAgICAgICAgICAgIGF2YXRhci5yb2xsYmFjaygpO1xuXG4gICAgICAgIGF2YXRhci5zdHlsZSA9ICcnO1xuICAgICAgICBhdmF0YXIuY2xhc3NMaXN0LnJlbW92ZSgnZHJhZy1pbicpO1xuXG4gICAgICAgIGxldCBkcm9wcGFibGUgPSBkcmFnTWVudS5xdWVyeVNlbGVjdG9yKFwiLmRyb3BwYWJsZVwiKTtcbiAgICAgICAgaWYgKGRyb3BwYWJsZS5jbGFzc0xpc3QuY29udGFpbnMoJ2RlbGV0ZS1hcmVhJykpIHtcbiAgICAgICAgICAgIGRyYWdPYmplY3QgPSB7fTtcbiAgICAgICAgICAgIGF2YXRhci5yZW1vdmUoKTtcbiAgICAgICAgfSBlbHNlIGlmIChkcm9wcGFibGUuY2xhc3NMaXN0LmNvbnRhaW5zKCdzdWItaXRlbScpKSB7XG5cbiAgICAgICAgICAgIGxldCBsaXN0ID0gZHJvcHBhYmxlLnBhcmVudE5vZGUucXVlcnlTZWxlY3RvcihcInVsXCIpO1xuICAgICAgICAgICAgaWYgKCFsaXN0KSB7XG4gICAgICAgICAgICAgICAgbGlzdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3VsJyk7XG4gICAgICAgICAgICAgICAgbGlzdC5jbGFzc0xpc3QuYWRkKCdtZW51LWl0ZW1zJyk7XG4gICAgICAgICAgICAgICAgbGlzdC5zZXRBdHRyaWJ1dGUoJ3JvbGUnLCBcInRhYmxpc3RcIik7XG4gICAgICAgICAgICAgICAgZHJvcHBhYmxlLnBhcmVudE5vZGUuYXBwZW5kQ2hpbGQobGlzdCk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGF2YXRhci5jbGFzc0xpc3QuYWRkKCdzdWItaXRlbScpO1xuICAgICAgICAgICAgZHJvcHBhYmxlLnJlcGxhY2VXaXRoKGF2YXRhcik7XG4gICAgICAgICAgICBsaXN0LmFwcGVuZENoaWxkKGF2YXRhcik7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBhdmF0YXIuY2xhc3NMaXN0LnJlbW92ZSgnc3ViLWl0ZW0nKTtcbiAgICAgICAgICAgIGRyb3BwYWJsZS5yZXBsYWNlV2l0aChhdmF0YXIpO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gc2VsZWN0cyBhbGwgPHVsPiBlbGVtZW50cywgdGhlbiBmaWx0ZXJzIHRoZSBjb2xsZWN0aW9uXG4gICAgICAgIGxldCBsaXN0cyA9IG1lbnVJdGVtcy5xdWVyeVNlbGVjdG9yQWxsKCd1bCcpO1xuICAgICAgICAvLyBrZWVwIG9ubHkgdGhvc2UgZWxlbWVudHMgd2l0aCBubyBjaGlsZC1lbGVtZW50c1xuICAgICAgICBsZXQgZW1wdHlMaXN0ID0gWy4uLmxpc3RzXS5maWx0ZXIoZWxlbSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gZWxlbS5jaGlsZHJlbi5sZW5ndGggPT09IDA7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIGZvciAobGV0IGVtcHR5IG9mIGVtcHR5TGlzdClcbiAgICAgICAgICAgIGVtcHR5LnJlbW92ZSgpO1xuXG4gICAgICAgIC8vZHJhZ09iamVjdC5kYXRhID0gdHJhbnNmb3JtRGF0YShtZW51SXRlbXMucXVlcnlTZWxlY3RvcihcIi5tZW51LWl0ZW1zXCIpKTtcbiAgICAgICAgZHJhZ09iamVjdC5kYXRhID0gdHJhbnNmb3JtRGF0YShtZW51SXRlbXMpO1xuICAgICAgICByZW1vdmVFbGVtZW50cyhtZW51SXRlbXMucXVlcnlTZWxlY3RvckFsbChcIi5kcm9wcGFibGU6bm90KC5kZWxldGUtYXJlYSlcIikpO1xuXG4gICAgICAgIGxldCBkZWxldGVBcmVhID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5kcm9wcGFibGUuZGVsZXRlLWFyZWFcIik7XG4gICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICBpZiAoZGVsZXRlQXJlYSlcbiAgICAgICAgICAgICAgICBkZWxldGVBcmVhLmNsYXNzTGlzdC5yZW1vdmUoJ3Nob3cnKTtcbiAgICAgICAgfSwgNTAwKTtcblxuICAgICAgICBpZiAoIWRyb3BFbGVtKVxuICAgICAgICAgICAgc2VsZi5vbkRyYWdDYW5jZWwoZHJhZ09iamVjdCk7XG4gICAgICAgIGVsc2VcbiAgICAgICAgICAgIHNlbGYub25EcmFnRW5kKGRyYWdPYmplY3QsIGRyb3BFbGVtKTtcbiAgICB9XG4gICAgdmFyIGZpbmREcm9wcGFibGUgPSAoZSkgPT4ge1xuICAgICAgICAvLyDRgdC/0YDRj9GH0LXQvCDQv9C10YDQtdC90L7RgdC40LzRi9C5INGN0LvQtdC80LXQvdGCXG4gICAgICAgIGRyYWdPYmplY3QuYXZhdGFyLmhpZGRlbiA9IHRydWU7XG5cbiAgICAgICAgbGV0IHRvcCA9IGUuY2xpZW50WSB8fCBlLmNoYW5nZWRUb3VjaGVzWzBdLnBhZ2VZO1xuICAgICAgICBsZXQgbGVmdCA9IGUuY2xpZW50WCB8fCBlLmNoYW5nZWRUb3VjaGVzWzBdLnBhZ2VYO1xuXG4gICAgICAgIC8vINC/0L7Qu9GD0YfQuNGC0Ywg0YHQsNC80YvQuSDQstC70L7QttC10L3QvdGL0Lkg0Y3Qu9C10LzQtdC90YIg0L/QvtC0INC60YPRgNGB0L7RgNC+0Lwg0LzRi9GI0LhcbiAgICAgICAgbGV0IGVsZW0gPSBkb2N1bWVudC5lbGVtZW50RnJvbVBvaW50KGxlZnQsIHRvcCk7XG5cbiAgICAgICAgLy8g0L/QvtC60LDQt9Cw0YLRjCDQv9C10YDQtdC90L7RgdC40LzRi9C5INGN0LvQtdC80LXQvdGCINC+0LHRgNCw0YLQvdC+XG4gICAgICAgIGRyYWdPYmplY3QuYXZhdGFyLmhpZGRlbiA9IGZhbHNlO1xuXG4gICAgICAgIGlmIChlbGVtID09IG51bGwpIC8vINGC0LDQutC+0LUg0LLQvtC30LzQvtC20L3Qviwg0LXRgdC70Lgg0LrRg9GA0YHQvtGAINC80YvRiNC4IFwi0LLRi9C70LXRgtC10LtcIiDQt9CwINCz0YDQsNC90LjRhtGDINC+0LrQvdCwXG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcblxuICAgICAgICByZXR1cm4gZWxlbS5jbG9zZXN0KCcuZHJvcHBhYmxlJyk7XG4gICAgfVxuXG5cbiAgICB2YXIgb25Nb3VzZURvd24gPSAoZSkgPT4ge1xuXG4gICAgICAgIGlmIChlLnR5cGUgPT09IFwibW91c2Vkb3duXCIgJiYgZS53aGljaCAhPSAxKVxuICAgICAgICAgICAgcmV0dXJuO1xuXG4gICAgICAgIHZhciBlbGVtID0gZS50YXJnZXQuY2xvc2VzdCgnLmRyYWdnYWJsZScpO1xuICAgICAgICBpZiAoIWVsZW0pIHJldHVybjtcblxuICAgICAgICBkcmFnT2JqZWN0LmVsZW0gPSBlbGVtO1xuXG4gICAgICAgIC8vINC30LDQv9C+0LzQvdC40LwsINGH0YLQviDRjdC70LXQvNC10L3RgiDQvdCw0LbQsNGCINC90LAg0YLQtdC60YPRidC40YUg0LrQvtC+0YDQtNC40L3QsNGC0LDRhSBwYWdlWC9wYWdlWVxuICAgICAgICBkcmFnT2JqZWN0LmRvd25YID0gZS5wYWdlWCB8fCBlLnRhcmdldFRvdWNoZXNbMF0ucGFnZVg7XG4gICAgICAgIGRyYWdPYmplY3QuZG93blkgPSBlLnBhZ2VZIHx8IGUudGFyZ2V0VG91Y2hlc1swXS5wYWdlWTtcblxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIHZhciBvbk1vdXNlTW92ZSA9IChlKSA9PiB7XG4gICAgICAgIGlmICghZHJhZ09iamVjdC5lbGVtKSByZXR1cm47IC8vINGN0LvQtdC80LXQvdGCINC90LUg0LfQsNC20LDRglxuXG4gICAgICAgIGlmICghZHJhZ09iamVjdC5hdmF0YXIpIHsgLy8g0LXRgdC70Lgg0L/QtdGA0LXQvdC+0YEg0L3QtSDQvdCw0YfQsNGCLi4uXG5cbiAgICAgICAgICAgIGxldCBtb3ZlWCA9IDA7XG4gICAgICAgICAgICBsZXQgbW92ZVkgPSAwO1xuICAgICAgICAgICAgaWYgKGUudHlwZSA9PT0gXCJ0b3VjaG1vdmVcIikge1xuICAgICAgICAgICAgICAgIG1vdmVYID0gZS50YXJnZXRUb3VjaGVzWzBdLnBhZ2VYIC0gZHJhZ09iamVjdC5kb3duWDtcbiAgICAgICAgICAgICAgICBtb3ZlWSA9IGUudGFyZ2V0VG91Y2hlc1swXS5wYWdlWSAtIGRyYWdPYmplY3QuZG93blk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIG1vdmVYID0gZS5wYWdlWCAtIGRyYWdPYmplY3QuZG93blg7XG4gICAgICAgICAgICAgICAgbW92ZVkgPSBlLnBhZ2VZIC0gZHJhZ09iamVjdC5kb3duWTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy8g0LXRgdC70Lgg0LzRi9GI0Ywg0L/QtdGA0LXQtNCy0LjQvdGD0LvQsNGB0Ywg0LIg0L3QsNC20LDRgtC+0Lwg0YHQvtGB0YLQvtGP0L3QuNC4INC90LXQtNC+0YHRgtCw0YLQvtGH0L3QviDQtNCw0LvQtdC60L5cbiAgICAgICAgICAgIGlmIChNYXRoLmFicyhtb3ZlWCkgPCA1ICYmIE1hdGguYWJzKG1vdmVZKSA8IDUpXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuXG4gICAgICAgICAgICAvLyDQvdCw0YfQuNC90LDQtdC8INC/0LXRgNC10L3QvtGBXG4gICAgICAgICAgICBkcmFnT2JqZWN0LmF2YXRhciA9IGNyZWF0ZUF2YXRhcihlKTsgLy8g0YHQvtC30LTQsNGC0Ywg0LDQstCw0YLQsNGAXG4gICAgICAgICAgICBpZiAoIWRyYWdPYmplY3QuYXZhdGFyKSB7IC8vINC+0YLQvNC10L3QsCDQv9C10YDQtdC90L7RgdCwLCDQvdC10LvRjNC30Y8gXCLQt9Cw0YXQstCw0YLQuNGC0YxcIiDQt9CwINGN0YLRgyDRh9Cw0YHRgtGMINGN0LvQtdC80LXQvdGC0LBcbiAgICAgICAgICAgICAgICBkcmFnT2JqZWN0ID0ge307XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvLyDQsNCy0LDRgtCw0YAg0YHQvtC30LTQsNC9INGD0YHQv9C10YjQvdC+XG4gICAgICAgICAgICAvLyDRgdC+0LfQtNCw0YLRjCDQstGB0L/QvtC80L7Qs9Cw0YLQtdC70YzQvdGL0LUg0YHQstC+0LnRgdGC0LLQsCBzaGlmdFgvc2hpZnRZXG4gICAgICAgICAgICBsZXQgY29vcmRzID0gZ2V0Q29vcmRzKGRyYWdPYmplY3QuYXZhdGFyKTtcbiAgICAgICAgICAgIGRyYWdPYmplY3Quc2hpZnRYID0gZHJhZ09iamVjdC5kb3duWCAtIGNvb3Jkcy5sZWZ0O1xuICAgICAgICAgICAgZHJhZ09iamVjdC5zaGlmdFkgPSBkcmFnT2JqZWN0LmRvd25ZIC0gY29vcmRzLnRvcDtcblxuICAgICAgICAgICAgc3RhcnREcmFnKGUpOyAvLyDQvtGC0L7QsdGA0LDQt9C40YLRjCDQvdCw0YfQsNC70L4g0L/QtdGA0LXQvdC+0YHQsFxuICAgICAgICB9XG5cbiAgICAgICAgLy8g0L7RgtC+0LHRgNCw0LfQuNGC0Ywg0L/QtdGA0LXQvdC+0YEg0L7QsdGK0LXQutGC0LAg0L/RgNC4INC60LDQttC00L7QvCDQtNCy0LjQttC10L3QuNC4INC80YvRiNC4XG4gICAgICAgIGlmIChlLnR5cGUgPT09IFwidG91Y2htb3ZlXCIpIHtcbiAgICAgICAgICAgIGRyYWdPYmplY3QuYXZhdGFyLnN0eWxlLmxlZnQgPSAoZS5jaGFuZ2VkVG91Y2hlc1swXS5wYWdlWCAtIGRyYWdPYmplY3Quc2hpZnRYKSArICdweCc7XG4gICAgICAgICAgICBkcmFnT2JqZWN0LmF2YXRhci5zdHlsZS50b3AgPSAoZS5jaGFuZ2VkVG91Y2hlc1swXS5wYWdlWSAtIGRyYWdPYmplY3Quc2hpZnRZKSArICdweCc7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBkcmFnT2JqZWN0LmF2YXRhci5zdHlsZS5sZWZ0ID0gKGUucGFnZVggLSBkcmFnT2JqZWN0LnNoaWZ0WCkgKyAncHgnO1xuICAgICAgICAgICAgZHJhZ09iamVjdC5hdmF0YXIuc3R5bGUudG9wID0gKGUucGFnZVkgLSBkcmFnT2JqZWN0LnNoaWZ0WSkgKyAncHgnO1xuICAgICAgICB9XG5cbiAgICAgICAgY3JlYXRlRHJvcHBhYmxlKGUpO1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIHZhciBvbk1vdXNlVXAgPSAoZSkgPT4ge1xuICAgICAgICBpZiAoZHJhZ09iamVjdC5hdmF0YXIpIC8vINC10YHQu9C4INC/0LXRgNC10L3QvtGBINC40LTQtdGCXG4gICAgICAgICAgICBmaW5pc2hEcmFnKGUpO1xuXG4gICAgICAgIC8vINC/0LXRgNC10L3QvtGBINC70LjQsdC+INC90LUg0L3QsNGH0LjQvdCw0LvRgdGPLCDQu9C40LHQviDQt9Cw0LLQtdGA0YjQuNC70YHRj1xuICAgICAgICAvLyDQsiDQu9GO0LHQvtC8INGB0LvRg9GH0LDQtSDQvtGH0LjRgdGC0LjQvCBcItGB0L7RgdGC0L7Rj9C90LjQtSDQv9C10YDQtdC90L7RgdCwXCIgZHJhZ09iamVjdFxuICAgICAgICBkcmFnT2JqZWN0ID0ge307XG4gICAgfVxuXG4gICAgdGhpcy5nZXRJdGVtc0RhdGEgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIHRyYW5zZm9ybURhdGEobWVudUl0ZW1zKTtcbiAgICB9O1xuXG4gICAgdGhpcy5idWlsZE1lbnVJdGVtcyA9IGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgICAgbGV0IGl0ZW1zID0gWy4uLmRhdGFdLmZpbHRlcihpdGVtID0+IHtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgaXRlbSA9PSBcIm9iamVjdFwiKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coaXRlbSk7XG4gICAgICAgICAgICAgICAgbGV0IHBhcmVudF9pZCA9IGl0ZW0ucGFyZW50X2lkXG4gICAgICAgICAgICAgICAgYWRkTWVudUl0ZW0oaXRlbSwgcGFyZW50X2lkKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfTtcblxuICAgIHRoaXMub25Jbml0ID0gZnVuY3Rpb24obWVudUl0ZW1zKSB7IH07XG4gICAgdGhpcy5vbkRyYWdFbmQgPSBmdW5jdGlvbihkcmFnT2JqZWN0LCBkcm9wRWxlbSkge307XG4gICAgdGhpcy5vbkRyYWdDYW5jZWwgPSBmdW5jdGlvbihkcmFnT2JqZWN0KSB7fTtcblxuICAgIHRoaXMub25BZGRTdWNjZXNzID0gZnVuY3Rpb24oZHJhZ09iamVjdCwgbWVudUl0ZW1zKSB7fTtcbiAgICB0aGlzLm9uQWRkRmFpbHR1cmUgPSBmdW5jdGlvbihkcmFnT2JqZWN0LCBtZW51SXRlbXMpIHt9O1xuXG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcIkRPTUNvbnRlbnRMb2FkZWRcIiwgZnVuY3Rpb24oZXZlbnQpIHtcbiAgICAgICAgaWYgKGRyYWdNZW51ICYmIG1lbnVJdGVtcykge1xuICAgICAgICAgICAgY29uc29sZS5sb2coJ2RyYWdNZW51Lm9ubG9hZCcpO1xuICAgICAgICAgICAgZHJhZ01lbnUub25tb3VzZWRvd24gPSBvbk1vdXNlRG93bjtcbiAgICAgICAgICAgIGRyYWdNZW51Lm9udG91Y2hzdGFydCA9IG9uTW91c2VEb3duO1xuICAgICAgICAgICAgZHJhZ01lbnUub25tb3VzZW1vdmUgPSBvbk1vdXNlTW92ZTtcbiAgICAgICAgICAgIGRyYWdNZW51Lm9udG91Y2htb3ZlID0gb25Nb3VzZU1vdmU7XG4gICAgICAgICAgICBkcmFnTWVudS5vbm1vdXNldXAgPSBvbk1vdXNlVXA7XG4gICAgICAgICAgICBkcmFnTWVudS5vbnRvdWNoZW5kID0gb25Nb3VzZVVwO1xuICAgICAgICAgICAgc2VsZi5vbkluaXQoKTtcbiAgICAgICAgfVxuICAgIH0pO1xufVxuXG5EcmFnTWVudS5vbkRyYWdDYW5jZWwgPSBmdW5jdGlvbiAoZHJhZ09iamVjdCkge1xuICAgIGlmIChkcmFnT2JqZWN0LmRhdGEpIHtcbiAgICAgICAgbGV0IGZvcm0gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYWRkTWVudUZvcm0nKTtcbiAgICAgICAgZm9ybS5xdWVyeVNlbGVjdG9yKCdpbnB1dCNtZW51LWl0ZW1zJykudmFsdWUgPSBkcmFnT2JqZWN0LmRhdGE7XG4gICAgfVxufTtcblxuRHJhZ01lbnUub25EcmFnRW5kID0gZnVuY3Rpb24gKGRyYWdPYmplY3QsIGRyb3BFbGVtKSB7XG4gICAgaWYgKGRyYWdPYmplY3QuZGF0YSkge1xuICAgICAgICBsZXQgZm9ybSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhZGRNZW51Rm9ybScpO1xuICAgICAgICBmb3JtLnF1ZXJ5U2VsZWN0b3IoJ2lucHV0I21lbnUtaXRlbXMnKS52YWx1ZSA9IGRyYWdPYmplY3QuZGF0YTtcbiAgICB9XG59O1xuXG5EcmFnTWVudS5vbkFkZFN1Y2Nlc3MgPSBmdW5jdGlvbiAoZHJhZ09iamVjdCwgbWVudUl0ZW1zKSB7XG4gICAgbGV0IGZvcm0gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYWRkTWVudUZvcm0nKTtcbiAgICBmb3JtLnF1ZXJ5U2VsZWN0b3IoJ2lucHV0I21lbnUtaXRlbXMnKS52YWx1ZSA9IHRoaXMuZ2V0SXRlbXNEYXRhKCk7XG59O1xuXG5EcmFnTWVudS5vbkluaXQgPSBmdW5jdGlvbiAoKSB7XG4gICAgbGV0IGZvcm0gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYWRkTWVudUZvcm0nKTtcbiAgICBsZXQgZGF0YSA9IEpTT04ucGFyc2UoZm9ybS5xdWVyeVNlbGVjdG9yKCdpbnB1dCNtZW51LWl0ZW1zJykudmFsdWUpO1xuICAgIHRoaXMuYnVpbGRNZW51SXRlbXMoZGF0YSk7XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbTFsYm5VdWFuTWlYU3dpYm1GdFpYTWlPbHRkTENKdFlYQndhVzVuY3lJNklrRkJRVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFTSXNJbVpwYkdVaU9pSnRaVzUxTG1weklpd2ljMjkxY21ObGMwTnZiblJsYm5RaU9sc2lkbUZ5SUVSeVlXZE5aVzUxSUQwZ2JtVjNJR1oxYm1OMGFXOXVLQ2tnZTF4dVhHNGdJQ0FnZG1GeUlITmxiR1lnUFNCMGFHbHpPMXh1SUNBZ0lIWmhjaUJrY21GblQySnFaV04wSUQwZ2UzMDdYRzRnSUNBZ2RtRnlJR1J5WVdkTlpXNTFJRDBnWkc5amRXMWxiblF1WjJWMFJXeGxiV1Z1ZEVKNVNXUW9KMlJ5WVdkTlpXNTFKeWs3WEc0Z0lDQWdkbUZ5SUcxbGJuVkpkR1Z0Y3lBOUlHUnZZM1Z0Wlc1MExtZGxkRVZzWlcxbGJuUkNlVWxrS0NkdFpXNTFTWFJsYlhNbktUdGNiaUFnSUNCMllYSWdiV1Z1ZFZOdmRYSmpaWE1nUFNCa2IyTjFiV1Z1ZEM1blpYUkZiR1Z0Wlc1MFFubEpaQ2duYldWdWRWTnZkWEpqWlhNbktUdGNiaUFnSUNCMllYSWdjR0Z1Wld4eklEMGdiV1Z1ZFZOdmRYSmpaWE11Y1hWbGNubFRaV3hsWTNSdmNrRnNiQ2hjSWk1d1lXNWxiRndpS1R0Y2JpQWdJQ0IyWVhJZ1ptOXliVlJsYlhCc1lYUmxJRDBnWkc5amRXMWxiblF1WjJWMFJXeGxiV1Z1ZEVKNVNXUW9KMmwwWlcxR2IzSnRWR1Z0Y0d4aGRHVW5LVHRjYmlBZ0lDQjJZWElnYVhSbGJWUmxiWEJzWVhSbElEMGdaRzlqZFcxbGJuUXVaMlYwUld4bGJXVnVkRUo1U1dRb0oyMWxiblZKZEdWdFZHVnRjR3hoZEdVbktUdGNiaUFnSUNCMllYSWdZV1JrVFdWdWRVbDBaVzFHYjNKdElEMGdaRzlqZFcxbGJuUXVaMlYwUld4bGJXVnVkRUo1U1dRb0oyRmtaRTFsYm5WSmRHVnRSbTl5YlNjcE8xeHVYRzRnSUNBZ1kyOXVjM1FnY21WdGIzWmxSV3hsYldWdWRITWdQU0FvWld4dGN5a2dQVDRnWld4dGN5NW1iM0pGWVdOb0tHVnNaVzBnUFQ0Z1pXeGxiUzV5WlcxdmRtVW9LU2s3WEc1Y2JpQWdJQ0JqYjI1emRDQjBjbUZ1YzJadmNtMUVZWFJoSUQwZ0tHeHBjM1FzSUdwemIyNGdQU0IwY25WbEtTQTlQaUI3WEc0Z0lDQWdJQ0FnSUd4bGRDQjBjbVZsSUQwZ1cxMDdYRzVjYmlBZ0lDQWdJQ0FnTHlvcVhHNGdJQ0FnSUNBZ0lDQXFJTkNkMExEUXY5QyswTHZRdmRDMTBMM1F1TkMxSU5DMDBMWFJnTkMxMExMUXNDRFF0OUM5MExEUmg5QzEwTDNRdU5HUDBMelF1Rnh1SUNBZ0lDQWdJQ0FnS2x4dUlDQWdJQ0FnSUNBZ0tpQkFjR0Z5WVcwZ2UwaFVUVXhNU1VWc1pXMWxiblI5SUdVZ0lDQk1TUzNSamRDNzBMWFF2TkMxMEwzUmdpRFJnU0JrWVhSaExXbGtYRzRnSUNBZ0lDQWdJQ0FxSUVCd1lYSmhiU0I3UVhKeVlYbDlJQ0FnSUNBZ0lDQWdjbVZtSU5DaDBZSFJpOUM3MExyUXNDRFF2ZEN3SU5DMDBMWFJnTkMxMExMUXZpd2cwTHJSZzlDMDBMQWcwTFRRdnRDeDBMRFFzdEM3MFkvUmd0R01JTkdCMExMUXZ0QzUwWUhSZ3RDeTBMQmNiaUFnSUNBZ0lDQWdJQ292WEc0Z0lDQWdJQ0FnSUdaMWJtTjBhVzl1SUhCMWMyZ29aU3dnY21WbUxDQnViMlJsSUQwZ0oxVk1KeWtnZTF4dVhHNGdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2FYUmxiVVp2Y20wZ1BTQmxMbkYxWlhKNVUyVnNaV04wYjNJb0oyWnZjbTFiWkdGMFlTMXJaWGxkSnlrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2NHOXBiblJsY2lBOUlIc2dMeThnMEpIUXRkR0EwWkhRdkNEUXNOR0MwWURRdU5DeDBZUFJnaUJwWkNEUmpkQzcwTFhRdk5DMTBMM1JndEN3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdRNklHbDBaVzFHYjNKdExtZGxkRUYwZEhKcFluVjBaU2duWkdGMFlTMXJaWGtuS1NCOGZDQnVkV3hzTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSNWNHVTZJR2wwWlcxR2IzSnRMbWRsZEVGMGRISnBZblYwWlNnblpHRjBZUzEwZVhCbEp5a2dmSHdnYm5Wc2JDeGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnVZVzFsT2lCcGRHVnRSbTl5YlM1eGRXVnllVk5sYkdWamRHOXlLQ2RwYm5CMWRGdHVZVzFsUFZ3aVRXVnVkVWwwWlcxelcyNWhiV1ZkWENKZEp5a3VkbUZzZFdVZ2ZId2diblZzYkN4Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFYUnNaVG9nYVhSbGJVWnZjbTB1Y1hWbGNubFRaV3hsWTNSdmNpZ25hVzV3ZFhSYmJtRnRaVDFjSWsxbGJuVkpkR1Z0YzF0MGFYUnNaVjFjSWwwbktTNTJZV3gxWlNCOGZDQnVkV3hzTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhWeWJEb2dhWFJsYlVadmNtMHVjWFZsY25sVFpXeGxZM1J2Y2lnbmFXNXdkWFJiYm1GdFpUMWNJazFsYm5WSmRHVnRjMXQxY214ZFhDSmRKeWt1ZG1Gc2RXVWdmSHdnYm5Wc2JDeGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnZibXg1WDJGMWRHZzZJR2wwWlcxR2IzSnRMbkYxWlhKNVUyVnNaV04wYjNJb0oybHVjSFYwVzI1aGJXVTlYQ0pOWlc1MVNYUmxiWE5iYjI1c2VWOWhkWFJvWFZ3aVhTY3BMblpoYkhWbElIeDhJRzUxYkd3c1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHRnlaMlYwWDJKc1lXNXJPaUJwZEdWdFJtOXliUzV4ZFdWeWVWTmxiR1ZqZEc5eUtDZHBibkIxZEZ0dVlXMWxQVndpVFdWdWRVbDBaVzF6VzNSaGNtZGxkRjlpYkdGdWExMWNJbDBuS1M1MllXeDFaU0I4ZkNCdWRXeHNMRnh1SUNBZ0lDQWdJQ0FnSUNBZ2ZUdGNibHh1SUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR1V1WTJocGJHUkZiR1Z0Wlc1MFEyOTFiblFwSUhzZ0x5OGcwSlhSZ2RDNzBMZ2cwTFhSZ2RHQzBZd2cwTC9RdnRHQzBMN1F2TkM2MExoY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCd2IybHVkR1Z5TG1Ob2FXeGtjbVZ1SUQwZ1cxMDdJQzh2SU5DaDBMN1F0OUMwMExEUmtkQzhJTkdCMExMUXZ0QzUwWUhSZ3RDeTBMNGcwTFRRdTlHUElOQzkwTGpSaFZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUVGeWNtRjVMbVp5YjIwb1pTNWphR2xzWkhKbGJpa3VabTl5UldGamFDaHBJRDArSUhzZ0x5OGcwSi9RdGRHQTBMWFFzZEM0MFlEUXNOQzEwTHd1TGk0ZzBZWFF2QzR1TGlEUXROQzEwWUxRdGRDNUlDalF2OUMrSU5DNjBMN1JnZEdDMEw3Umg5QzYwTERRdkNFcFhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNocExtNXZaR1ZPWVcxbElEMDlQU0J1YjJSbExuUnZWWEJ3WlhKRFlYTmxLQ2twSUhzZ0x5OGcwSlhSZ2RDNzBMZ2cwTFhSZ2RHQzBZd2cwTFhSaWRHUklOQyswTFRRdU5DOUlOQzYwTDdRdmRHQzBMWFF1ZEM5MExYUmdDQlZUQ3dnMEwvUXRkR0EwTFhRc2RDNDBZRFFzTkMxMEx3ZzBMWFFzOUMrWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JCY25KaGVTNW1jbTl0S0drdVkyaHBiR1J5Wlc0cExtWnZja1ZoWTJnb1pTQTlQaUI3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NIVnphQ2hsTENCd2IybHVkR1Z5TG1Ob2FXeGtjbVZ1S1RzZ0x5OGcwSkxSaTlDMzBZdlFzdEN3MExYUXZDQndkWE5vSU5DOTBMQWcwTDNRdnRDeTBZdlJoU0JzYVN3ZzBMM1F2aURSZ2RHQjBZdlF1OUM2MExBZzBMM1FzQ0RRdE5HQTBMWFFzdEMrSU5HQzBMWFF2OUMxMFlEUmpDQXRJTkdOMFlMUXZpRFF2TkN3MFlIUmdkQzQwTElnWTJocGJHUnlaVzRnMFlQUXV0Q3cwTGZRc05HQzBMWFF1OUdQWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5S1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0FnSUNBZ0lDQnlaV1l1Y0hWemFDaHdiMmx1ZEdWeUtUdGNiaUFnSUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0FnSUM4dklOQ2YwWURRdnRHRjBMN1F0TkM0MEx6UmdkR1BJTkMvMEw0ZzBMTFJnZEMxMEx3Z2JHa2cwTC9RdGRHQTBMWFF0TkN3MEwzUXZkQyswTFBRdmlCMWJGeHVJQ0FnSUNBZ0lDQkJjbkpoZVM1bWNtOXRLR3hwYzNRdVkyaHBiR1J5Wlc0cExtWnZja1ZoWTJnb1pTQTlQaUI3WEc0Z0lDQWdJQ0FnSUNBZ0lDQndkWE5vS0dVc0lIUnlaV1VzSUNkVlRDY3BPMXh1SUNBZ0lDQWdJQ0I5S1R0Y2JseHVJQ0FnSUNBZ0lDQnlaWFIxY200Z2FuTnZiaUEvSUVwVFQwNHVjM1J5YVc1bmFXWjVLSFJ5WldVcElEb2dkSEpsWlR0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0JqYjI1emRDQjBiMWR5WVhBZ1BTQW9aV3hsYlN3Z2QzSmhjSEJsY2lrZ1BUNGdlMXh1SUNBZ0lDQWdJQ0IzY21Gd2NHVnlJRDBnZDNKaGNIQmxjaUI4ZkNCa2IyTjFiV1Z1ZEM1amNtVmhkR1ZGYkdWdFpXNTBLQ2RrYVhZbktUdGNiaUFnSUNBZ0lDQWdaV3hsYlM1d1lYSmxiblJPYjJSbExtRndjR1Z1WkVOb2FXeGtLSGR5WVhCd1pYSXBPMXh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdkM0poY0hCbGNpNWhjSEJsYm1SRGFHbHNaQ2hsYkdWdEtUdGNiaUFnSUNCOU8xeHVYRzRnSUNBZ0x5b3FYRzRnSUNBZ0lDb2dRSEJoY21GdElIdFRkSEpwYm1kOUlFaFVUVXdnY21Wd2NtVnpaVzUwYVc1bklHRWdjMmx1WjJ4bElHVnNaVzFsYm5SY2JpQWdJQ0FnS2lCQWNtVjBkWEp1SUh0RmJHVnRaVzUwZlZ4dUlDQWdJQ0FxTDF4dUlDQWdJR052Ym5OMElHaDBiV3hVYjBWc1pXMWxiblFnUFNBb2FIUnRiQ2tnUFQ0Z2UxeHVJQ0FnSUNBZ0lDQjJZWElnZEdWdGNHeGhkR1VnUFNCa2IyTjFiV1Z1ZEM1amNtVmhkR1ZGYkdWdFpXNTBLQ2QwWlcxd2JHRjBaU2NwTzF4dUlDQWdJQ0FnSUNCb2RHMXNJRDBnYUhSdGJDNTBjbWx0S0NrN0lDOHZJRTVsZG1WeUlISmxkSFZ5YmlCaElIUmxlSFFnYm05a1pTQnZaaUIzYUdsMFpYTndZV05sSUdGeklIUm9aU0J5WlhOMWJIUmNiaUFnSUNBZ0lDQWdkR1Z0Y0d4aGRHVXVhVzV1WlhKSVZFMU1JRDBnYUhSdGJEdGNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUmxiWEJzWVhSbExtTnZiblJsYm5RdVptbHljM1JEYUdsc1pEdGNiaUFnSUNCOVhHNWNiaUFnSUNBdktpcGNiaUFnSUNBZ0tpQkFjR0Z5WVcwZ2UxTjBjbWx1WjMwZ1NGUk5UQ0J5WlhCeVpYTmxiblJwYm1jZ1lXNTVJRzUxYldKbGNpQnZaaUJ6YVdKc2FXNW5JR1ZzWlcxbGJuUnpYRzRnSUNBZ0lDb2dRSEpsZEhWeWJpQjdUbTlrWlV4cGMzUjlYRzRnSUNBZ0lDb3ZYRzRnSUNBZ1kyOXVjM1FnYUhSdGJGUnZSV3hsYldWdWRITWdQU0FvYUhSdGJDa2dQVDRnZTF4dUlDQWdJQ0FnSUNCMllYSWdkR1Z0Y0d4aGRHVWdQU0JrYjJOMWJXVnVkQzVqY21WaGRHVkZiR1Z0Wlc1MEtDZDBaVzF3YkdGMFpTY3BPMXh1SUNBZ0lDQWdJQ0IwWlcxd2JHRjBaUzVwYm01bGNraFVUVXdnUFNCb2RHMXNPMXh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR1Z0Y0d4aGRHVXVZMjl1ZEdWdWRDNWphR2xzWkU1dlpHVnpPMXh1SUNBZ0lIMWNibHh1SUNBZ0lHTnZibk4wSUdacGJHeFVaVzF3YkdGMFpTQTlJQ2h6ZEhJc0lHOWlhaWtnUFQ0Z2UxeHVJQ0FnSUNBZ0lDQmtieUI3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjJZWElnWW1WbWIzSmxVbVZ3YkdGalpTQTlJSE4wY2p0Y2JpQWdJQ0FnSUNBZ0lDQWdJSE4wY2lBOUlITjBjaTV5WlhCc1lXTmxLQzk3ZTF4Y2N5b29XMTU5WEZ4elhTc3BYRnh6S24xOUwyY3NJR1oxYm1OMGFXOXVLSGRvYjJ4bFRXRjBZMmdzSUd0bGVTa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpoY2lCemRXSnpkR2wwZFhScGIyNGdQU0J2WW1wYkpDNTBjbWx0S0d0bGVTbGRPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQW9jM1ZpYzNScGRIVjBhVzl1SUQwOVBTQjFibVJsWm1sdVpXUWdQeUIzYUc5c1pVMWhkR05vSURvZ2MzVmljM1JwZEhWMGFXOXVLVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIMHBPMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RtRnlJR0ZtZEdWeVVtVndiR0ZqWlNBOUlITjBjaUFoUFQwZ1ltVm1iM0psVW1Wd2JHRmpaVHRjYmlBZ0lDQWdJQ0FnZlNCM2FHbHNaU0FvWVdaMFpYSlNaWEJzWVdObEtUdGNibHh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdjM1J5TzF4dUlDQWdJSDA3WEc1Y2JpQWdJQ0JqYjI1emRDQm5aWFJEYjI5eVpITWdQU0FvWld4bGJTa2dQVDRnZTF4dUlDQWdJQ0FnSUNCc1pYUWdZbTk0SUQwZ1pXeGxiUzVuWlhSQ2IzVnVaR2x1WjBOc2FXVnVkRkpsWTNRb0tUdGNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhSdmNEb2dZbTk0TG5SdmNDQXJJSEJoWjJWWlQyWm1jMlYwTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdiR1ZtZERvZ1ltOTRMbXhsWm5RZ0t5QndZV2RsV0U5bVpuTmxkRnh1SUNBZ0lDQWdJQ0I5TzF4dUlDQWdJSDFjYmx4dUlDQWdJSFpoY2lCaFpHUk5aVzUxU1hSbGJTQTlJQ2hwZEdWdExDQndZWEpsYm5RZ1BTQnVkV3hzS1NBOVBpQjdYRzRnSUNBZ0lDQWdJR2xtSUNodFpXNTFTWFJsYlhNZ0ppWWdhWFJsYlZSbGJYQnNZWFJsSUNZbUlDZGpiMjUwWlc1MEp5QnBiaUJrYjJOMWJXVnVkQzVqY21WaGRHVkZiR1Z0Wlc1MEtDZDBaVzF3YkdGMFpTY3BLU0I3WEc1Y2JpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNodFpXNTFTWFJsYlhNdVkyeGhjM05NYVhOMExtTnZiblJoYVc1ektDZHVieTFwZEdWdGN5Y3BLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYldWdWRVbDBaVzF6TG1Oc1lYTnpUR2x6ZEM1eVpXMXZkbVVvSjI1dkxXbDBaVzF6SnlrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JXVnVkVWwwWlcxekxtbHVibVZ5U0ZSTlRDQTlJRndpWENJN1hHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCa1lYUmhJRDBnYVhSbGJUdGNiaUFnSUNBZ0lDQWdJQ0FnSUdSaGRHRXVabTl5YlNBOUlHWnBiR3hVWlcxd2JHRjBaU2htYjNKdFZHVnRjR3hoZEdVdWFXNXVaWEpJVkUxTUxDQmtZWFJoS1R0Y2JseHVJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHTnZiblJsYm5RZ1BTQm1hV3hzVkdWdGNHeGhkR1VvYVhSbGJWUmxiWEJzWVhSbExtbHVibVZ5U0ZSTlRDd2daR0YwWVNrN1hHNWNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaHdZWEpsYm5RcElIdGNibHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCc2FYTjBJRDBnWkc5amRXMWxiblF1WTNKbFlYUmxSV3hsYldWdWRDZ25kV3duS1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc2FYTjBMbU5zWVhOelRHbHpkQzVoWkdRb0oyMWxiblV0YVhSbGJYTW5LVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzYVhOMExuTmxkRUYwZEhKcFluVjBaU2duY205c1pTY3NJRndpZEdGaWJHbHpkRndpS1R0Y2JseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JzYVhOMFNYUmxiU0E5SUdoMGJXeFViMFZzWlcxbGJuUW9ZMjl1ZEdWdWRDazdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR2x6ZEVsMFpXMHVZMnhoYzNOTWFYTjBMbUZrWkNnbmMzVmlMV2wwWlcwbktUdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNhWE4wTG1Gd2NHVnVaQ2hzYVhOMFNYUmxiU2s3WEc1Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdFpXNTFTWFJsYlhNdWNYVmxjbmxUWld4bFkzUnZjaWduVzJSaGRHRXRhV1E5WENJbklDc2djR0Z5Wlc1MElDc2dKMXdpWFNjcExtRndjR1Z1WkNoc2FYTjBLVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIMGdaV3h6WlNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JXVnVkVWwwWlcxekxtRndjR1Z1WkNob2RHMXNWRzlGYkdWdFpXNTBLR052Ym5SbGJuUXBLVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNibHh1SUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUhObGJHWXViMjVCWkdSVGRXTmpaWE56S0dSeVlXZFBZbXBsWTNRc0lHMWxiblZKZEdWdGN5azdYRzVjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnYzJWc1ppNXZia0ZrWkVaaGFXeDBkWEpsS0dSeVlXZFBZbXBsWTNRc0lHMWxiblZKZEdWdGN5azdYRzRnSUNBZ2ZUdGNibHh1SUNBZ0lHbG1JQ2hoWkdSTlpXNTFTWFJsYlVadmNtMHViR1Z1WjNSb0tTQjdYRzRnSUNBZ0lDQWdJR3hsZENCaFpHUkNkWFIwYjI0Z1BTQmhaR1JOWlc1MVNYUmxiVVp2Y20wdWNYVmxjbmxUWld4bFkzUnZjaWduWW5WMGRHOXVXMlJoZEdFdGNtVnNQVndpWVdSa1hDSmRKeWs3WEc0Z0lDQWdJQ0FnSUdGa1pFSjFkSFJ2Ymk1aFpHUkZkbVZ1ZEV4cGMzUmxibVZ5S0Z3aVkyeHBZMnRjSWl3Z0tHVjJaVzUwS1NBOVBpQjdYRzVjYmlBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JqYjJ4c1lYQnpaVlJ2WjJkc1pYSWdQU0J0Wlc1MVUyOTFjbU5sY3k1eGRXVnllVk5sYkdWamRHOXlLQ2NqYzI5MWNtTmxMV3hwYm1zZ1lWdGtZWFJoTFhSdloyZHNaVDFjSW1OdmJHeGhjSE5sWENKZEp5azdYRzVjYmlBZ0lDQWdJQ0FnSUNBZ0lHTnZibk52YkdVdWJHOW5LR052Ykd4aGNITmxWRzluWjJ4bGNpazdYRzVjYmlBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JwZEdWdElEMGdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ2RwWkNjNklHNTFiR3dzWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSjNOdmRYSmpaU2M2SUdOdmJHeGhjSE5sVkc5bloyeGxjaTVrWVhSaGMyVjBMblI1Y0dVZ2ZId2diblZzYkN4Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBbmMyOTFjbU5sWDI1aGJXVW5PaUJqYjJ4c1lYQnpaVlJ2WjJkc1pYSXVaR0YwWVhObGRDNXVZVzFsSUh4OElHNTFiR3dzWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSjI1aGJXVW5PaUJoWkdSTlpXNTFTWFJsYlVadmNtMHVjWFZsY25sVFpXeGxZM1J2Y2lnbmFXNXdkWFJiYm1GdFpUMWNJazFsYm5WSmRHVnRjMXR1WVcxbFhWd2lYU2NwTG5aaGJIVmxJSHg4SUdaaGJITmxMRnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ2QwYVhSc1pTYzZJR0ZrWkUxbGJuVkpkR1Z0Um05eWJTNXhkV1Z5ZVZObGJHVmpkRzl5S0NkcGJuQjFkRnR1WVcxbFBWd2lUV1Z1ZFVsMFpXMXpXM1JwZEd4bFhWd2lYU2NwTG5aaGJIVmxJSHg4SUdaaGJITmxMRnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ2QxY213bk9pQmhaR1JOWlc1MVNYUmxiVVp2Y20wdWNYVmxjbmxUWld4bFkzUnZjaWduYVc1d2RYUmJibUZ0WlQxY0lrMWxiblZKZEdWdGMxdDFjbXhkWENKZEp5a3VkbUZzZFdVZ2ZId2dabUZzYzJVc1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0oyOXViSGxmWVhWMGFDYzZJR0ZrWkUxbGJuVkpkR1Z0Um05eWJTNXhkV1Z5ZVZObGJHVmpkRzl5S0NkcGJuQjFkRnR1WVcxbFBWd2lUV1Z1ZFVsMFpXMXpXMjl1YkhsZllYVjBhRjFjSWwwbktTNTJZV3gxWlNCOGZDQm1ZV3h6WlN4Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBbmRHRnlaMlYwWDJKc1lXNXJKem9nWVdSa1RXVnVkVWwwWlcxR2IzSnRMbkYxWlhKNVUyVnNaV04wYjNJb0oybHVjSFYwVzI1aGJXVTlYQ0pOWlc1MVNYUmxiWE5iZEdGeVoyVjBYMkpzWVc1clhWd2lYU2NwTG5aaGJIVmxJSHg4SUdaaGJITmxMRnh1SUNBZ0lDQWdJQ0FnSUNBZ2ZUdGNibHh1SUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR0ZrWkUxbGJuVkpkR1Z0S0dsMFpXMHBLVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0ZrWkUxbGJuVkpkR1Z0Um05eWJTNXlaWE5sZENncE8xeHVYRzRnSUNBZ0lDQWdJSDBwTzF4dUlDQWdJSDFjYmx4dUlDQWdJSFpoY2lCemIzVnlZMlZ6VEdsemRDQTlJRnN1TGk1d1lXNWxiSE5kTG1acGJIUmxjaWh3WVc1bGJDQTlQaUI3WEc0Z0lDQWdJQ0FnSUdsbUlDaHdZVzVsYkM1amFHbHNaSEpsYmk1c1pXNW5kR2dwSUh0Y2JseHVJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHRmtaRUoxZEhSdmJpQTlJSEJoYm1Wc0xuRjFaWEo1VTJWc1pXTjBiM0lvSjJKMWRIUnZibHRrWVhSaExYSmxiRDFjSW1Ga1pGd2lYU2NwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhObGJHVmpkRUZzYkNBOUlIQmhibVZzTG5GMVpYSjVVMlZzWldOMGIzSW9KMmx1Y0hWMFczUjVjR1U5WENKamFHVmphMkp2ZUZ3aVhWdHVZVzFsUFZ3aWMyVnNaV04wTFdGc2JGd2lYU2NwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdsMFpXMXpJRDBnY0dGdVpXd3VjWFZsY25sVFpXeGxZM1J2Y2tGc2JDZ25Mbk52ZFhKalpTMXNhWE4wSUdsdWNIVjBXM1I1Y0dVOVhDSmphR1ZqYTJKdmVGd2lYU2NwTzF4dVhHNWNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaGhaR1JDZFhSMGIyNGdKaVlnYVhSbGJYTXBJSHRjYmx4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsMFpXMXpMbVp2Y2tWaFkyZ29hWFJsYlNBOVBpQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsMFpXMHViMjVqYUdGdVoyVWdQU0FvWlhabGJuUXBJRDArSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdWMlpXNTBMbkJ5WlhabGJuUkVaV1poZFd4MEtDazdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvY0dGdVpXd3VjWFZsY25sVFpXeGxZM1J2Y2tGc2JDZ25hVzV3ZFhSYmRIbHdaVDFjSW1Ob1pXTnJZbTk0WENKZE9tTm9aV05yWldRNmJtOTBLRnR1WVcxbFBWd2ljMlZzWldOMExXRnNiRndpWFNrbktTNXNaVzVuZEdncFhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZV1JrUW5WMGRHOXVMbkpsYlc5MlpVRjBkSEpwWW5WMFpTZ25aR2x6WVdKc1pXUW5LVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1ZzYzJWY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmhaR1JDZFhSMGIyNHVjMlYwUVhSMGNtbGlkWFJsS0Nka2FYTmhZbXhsWkNjc0lIUnlkV1VwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmU2s3WEc1Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaFpHUkNkWFIwYjI0dWIyNWpiR2xqYXlBOUlDaGxkbVZ1ZENrZ1BUNGdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbGRtVnVkQzV3Y21WMlpXNTBSR1ZtWVhWc2RDZ3BPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdjMjkxY21ObGMwbDBaVzF6SUQwZ1d5NHVMbWwwWlcxelhTNW1hV3gwWlhJb2FYUmxiU0E5UGlCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9hWFJsYlM1amFHVmphMlZrS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZV1JrVFdWdWRVbDBaVzBvYVhSbGJTNWtZWFJoYzJWMEtUdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlNrN1hHNWNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVhSbGJYTXVabTl5UldGamFDaGphR1ZqYTJKdmVDQTlQaUI3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqYUdWamEySnZlQzVqYUdWamEyVmtJRDBnWm1Gc2MyVTdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwcE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tITmxiR1ZqZEVGc2JDQW1KaUJwZEdWdGN5a2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSE5sYkdWamRFRnNiQzV2Ym1Ob1lXNW5aU0E5SUNobGRtVnVkQ2tnUFQ0Z2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JsZG1WdWRDNXdjbVYyWlc1MFJHVm1ZWFZzZENncE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2RHRnlaMlYwSUQwZ1pYWmxiblF1ZEdGeVoyVjBMbU5vWldOclpXUTdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsMFpXMXpMbVp2Y2tWaFkyZ29ZMmhsWTJ0aWIzZ2dQVDRnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tIUmhjbWRsZENrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR05vWldOclltOTRMbU5vWldOclpXUWdQU0IwY25WbE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZTQmxiSE5sSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmphR1ZqYTJKdmVDNWphR1ZqYTJWa0lEMGdabUZzYzJVN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamFHVmphMkp2ZUM1dmJtTm9ZVzVuWlNobGRtVnVkQ2s3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMHBPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lIMHBPMXh1WEc1Y2JpQWdJQ0IyWVhJZ1kzSmxZWFJsUkhKdmNIQmhZbXhsSUQwZ0tHVXBJRDArSUh0Y2JpQWdJQ0FnSUNBZ2JHVjBJSFJ2Y0NBOUlHVXVZMnhwWlc1MFdTQjhmQ0JsTG5SaGNtZGxkRlJ2ZFdOb1pYTmJNRjB1Y0dGblpWazdYRzRnSUNBZ0lDQWdJR3hsZENCc1pXWjBJRDBnWlM1amJHbGxiblJZSUh4OElHVXVkR0Z5WjJWMFZHOTFZMmhsYzFzd1hTNXdZV2RsV0R0Y2JpQWdJQ0FnSUNBZ2JHVjBJR1ZzWlcwZ1BTQmtiMk4xYldWdWRDNWxiR1Z0Wlc1MFJuSnZiVkJ2YVc1MEtHeGxablFzSUhSdmNDazdYRzRnSUNBZ0lDQWdJR3hsZENCa2NtOXdjR0ZpYkdVZ1BTQmtiMk4xYldWdWRDNWpjbVZoZEdWRmJHVnRaVzUwS0Nka2FYWW5LVHRjYmlBZ0lDQWdJQ0FnWkhKdmNIQmhZbXhsTG1Oc1lYTnpUR2x6ZEM1aFpHUW9KMlJ5YjNCd1lXSnNaU2NwTzF4dVhHNGdJQ0FnSUNBZ0lHbG1JQ2dvWkhKaFowOWlhbVZqZEM1aGRtRjBZWEl1WjJWMFFtOTFibVJwYm1kRGJHbGxiblJTWldOMEtDa3ViR1ZtZENBdElHVnNaVzB1WjJWMFFtOTFibVJwYm1kRGJHbGxiblJTWldOMEtDa3ViR1ZtZENrZ1BqMGdLR1J5WVdkUFltcGxZM1F1WVhaaGRHRnlMbTltWm5ObGRGZHBaSFJvS2pBdU1Ta3BYRzRnSUNBZ0lDQWdJQ0FnSUNCa2NtOXdjR0ZpYkdVdVkyeGhjM05NYVhOMExtRmtaQ2duYzNWaUxXbDBaVzBuS1R0Y2JpQWdJQ0FnSUNBZ1pXeHpaVnh1SUNBZ0lDQWdJQ0FnSUNBZ1pISnZjSEJoWW14bExtTnNZWE56VEdsemRDNXlaVzF2ZG1Vb0ozTjFZaTFwZEdWdEp5azdYRzVjYmlBZ0lDQWdJQ0FnYkdWMElHbDBaVzFVWlhoMElEMGdaSEpoWjA5aWFtVmpkQzVoZG1GMFlYSXVjWFZsY25sVFpXeGxZM1J2Y2lnbkxuQmhibVZzTFhScGRHeGxJR0ZiWkdGMFlTMTBiMmRuYkdVOVhDSmpiMnhzWVhCelpWd2lYU2NwTG1SaGRHRnpaWFJiSjI1aGJXVW5YVHRjYmlBZ0lDQWdJQ0FnYkdWMElHUnliM0J3WVdKc1pWUmxlSFFnUFNCa2IyTjFiV1Z1ZEM1amNtVmhkR1ZVWlhoMFRtOWtaU2hwZEdWdFZHVjRkQzUwY21sdEtDa3BPMXh1SUNBZ0lDQWdJQ0JrY205d2NHRmliR1V1WVhCd1pXNWtRMmhwYkdRb1pISnZjSEJoWW14bFZHVjRkQ2s3WEc1Y2JpQWdJQ0FnSUNBZ1pISnZjSEJoWW14bExuTjBlV3hsTG5kcFpIUm9JRDBnWkhKaFowOWlhbVZqZEM1aGRtRjBZWEl1YjJabWMyVjBWMmxrZEdnZ0t5QW5jSGduTzF4dUlDQWdJQ0FnSUNCa2NtOXdjR0ZpYkdVdWMzUjViR1V1YUdWcFoyaDBJRDBnWkhKaFowOWlhbVZqZEM1aGRtRjBZWEl1YjJabWMyVjBTR1ZwWjJoMElDc2dKM0I0Snp0Y2JseHVJQ0FnSUNBZ0lDQnBaaUFvSVdSeWIzQndZV0pzWlM1cGMwVnhkV0ZzVG05a1pTaGtjbUZuVDJKcVpXTjBMbVJ5YjNCd1lXSnNaU2twSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSEpsYlc5MlpVVnNaVzFsYm5SektHMWxiblZKZEdWdGN5NXhkV1Z5ZVZObGJHVmpkRzl5UVd4c0tGd2lMbVJ5YjNCd1lXSnNaVHB1YjNRb0xtUmxiR1YwWlMxaGNtVmhLVndpS1NrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JrY21GblQySnFaV04wTG1SeWIzQndZV0pzWlNBOUlHNTFiR3c3WEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ1pISmhaMDlpYW1WamRDNWtjbTl3Y0dGaWJHVWdQU0JrY205d2NHRmliR1U3WEc1Y2JpQWdJQ0FnSUNBZ2JHVjBJSFJoY21kbGRDQTlJR1ZzWlcwdVkyeHZjMlZ6ZENnbkxtUnlZV2RuWVdKc1pTY3BPMXh1WEc0Z0lDQWdJQ0FnSUdsbUlDaDBZWEpuWlhRZ0ppWWdkSGx3Wlc5bUlIUmhjbWRsZENBaFBUMGdYQ0oxYm1SbFptbHVaV1JjSWlrZ2UxeHVYRzRnSUNBZ0lDQWdJQ0FnSUNBdkwyTnZibk52YkdVdWJHOW5LQ2QwWVhKblpYUW5MQ0IwWVhKblpYUXBPMXh1WEc0Z0lDQWdJQ0FnSUNBZ0lDQnlaVzF2ZG1WRmJHVnRaVzUwY3lodFpXNTFTWFJsYlhNdWNYVmxjbmxUWld4bFkzUnZja0ZzYkNoY0lpNWtjbTl3Y0dGaWJHVTZibTkwS0M1a1pXeGxkR1V0WVhKbFlTbGNJaWtwTzF4dVhHNGdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2RHOXdJRDBnWlM1amJHbGxiblJaSUh4OElHVXVkR0Z5WjJWMFZHOTFZMmhsYzFzd1hTNXdZV2RsV1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCc1pXWjBJRDBnWlM1amJHbGxiblJZSUh4OElHVXVkR0Z5WjJWMFZHOTFZMmhsYzFzd1hTNXdZV2RsV0R0Y2JpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoMGIzQWdQajBnS0hSaGNtZGxkQzVuWlhSQ2IzVnVaR2x1WjBOc2FXVnVkRkpsWTNRb0tTNTBiM0FnS3lBb2RHRnlaMlYwTG05bVpuTmxkRWhsYVdkb2RDOHhMalVwS1NrZ2UxeHVYRzVjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb0tHUnlZV2RQWW1wbFkzUXVZWFpoZEdGeUxtZGxkRUp2ZFc1a2FXNW5RMnhwWlc1MFVtVmpkQ2dwTG14bFpuUWdMU0JsYkdWdExtZGxkRUp2ZFc1a2FXNW5RMnhwWlc1MFVtVmpkQ2dwTG14bFpuUXBJRDQ5SUNoa2NtRm5UMkpxWldOMExtRjJZWFJoY2k1dlptWnpaWFJYYVdSMGFDb3dMakVwS1Z4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBZWEpuWlhRdWNYVmxjbmxUWld4bFkzUnZjaWduTG1OdmJHeGhjSE5sSnlrdVlXWjBaWElvWkhKdmNIQmhZbXhsS1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbGJITmxYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSaGNtZGxkQzVoWm5SbGNpaGtjbTl3Y0dGaWJHVXBPMXh1WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tIUmhjbWRsZEM1amJHRnpjMHhwYzNRdVkyOXVkR0ZwYm5Nb0ozTjFZaTFwZEdWdEp5a3BYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdSeWIzQndZV0pzWlM1amJHRnpjMHhwYzNRdVlXUmtLQ2R6ZFdJdGFYUmxiU2NwTzF4dVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0x5OWpiMjV6YjJ4bExteHZaeWduWVdaMFpYSW5LVHRjYmx4dUlDQWdJQ0FnSUNBZ0lDQWdmU0JsYkhObElHbG1JQ2gwYjNBZ1BDQW9kR0Z5WjJWMExtZGxkRUp2ZFc1a2FXNW5RMnhwWlc1MFVtVmpkQ2dwTG5SdmNDQXJJQ2gwWVhKblpYUXViMlptYzJWMFNHVnBaMmgwTHpFdU5Ta3BLU0I3WEc1Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9LR1J5WVdkUFltcGxZM1F1WVhaaGRHRnlMbWRsZEVKdmRXNWthVzVuUTJ4cFpXNTBVbVZqZENncExteGxablFnTFNCbGJHVnRMbWRsZEVKdmRXNWthVzVuUTJ4cFpXNTBVbVZqZENncExteGxablFwSUQ0OUlDaGtjbUZuVDJKcVpXTjBMbUYyWVhSaGNpNXZabVp6WlhSWGFXUjBhQ293TGpFcEtWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwWVhKblpYUXVjWFZsY25sVFpXeGxZM1J2Y2lnbkxtTnZiR3hoY0hObEp5a3VZV1owWlhJb1pISnZjSEJoWW14bEtUdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmxiSE5sWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUmhjbWRsZEM1aVpXWnZjbVVvWkhKdmNIQmhZbXhsS1R0Y2JseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hrYjJOMWJXVnVkQzVuWlhSRmJHVnRaVzUwUW5sSlpDZ25iV1Z1ZFVsMFpXMXpKeWt1Wm1seWMzUkRhR2xzWkM1cGMwVnhkV0ZzVG05a1pTaGtjbTl3Y0dGaWJHVXBLVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCa2NtOXdjR0ZpYkdVdVkyeGhjM05NYVhOMExuSmxiVzkyWlNnbmMzVmlMV2wwWlcwbktUdGNibHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoMFlYSm5aWFF1WTJ4aGMzTk1hWE4wTG1OdmJuUmhhVzV6S0NkemRXSXRhWFJsYlNjcEtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdSeWIzQndZV0pzWlM1eVpXMXZkbVVvS1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHWmhiSE5sTzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDOHZZMjl1YzI5c1pTNXNiMmNvSjJKbFptOXlaU2NwTzF4dVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUNBZ0lDQWdJR1J5WVdkUFltcGxZM1F1WVhaaGRHRnlMbk4wZVd4bExuZHBaSFJvSUQwZ1pISnZjSEJoWW14bExtOW1abk5sZEZkcFpIUm9JQ3NnSjNCNEp6dGNiaUFnSUNBZ0lDQWdJQ0FnSUdSeVlXZFBZbXBsWTNRdVlYWmhkR0Z5TG5OMGVXeGxMbWhsYVdkb2RDQTlJR1J5YjNCd1lXSnNaUzV2Wm1aelpYUklaV2xuYUhRZ0t5QW5jSGduTzF4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dUlDQWdJSFpoY2lCamNtVmhkR1ZCZG1GMFlYSWdQU0FvWlNrZ1BUNGdlMXh1WEc0Z0lDQWdJQ0FnSUM4dklOQzMwTERRdjlDKzBMelF2ZEM0MFlMUmpDRFJnZEdDMExEUmdOR0wwTFVnMFlIUXN0QyswTG5SZ2RHQzBMTFFzQ3dnMFlmUmd0QyswTEhSaXlEUXN0QzEwWURRdmRHRDBZTFJqTkdCMFk4ZzBMb2cwTDNRdU5DOElOQy8wWURRdUNEUXZ0R0MwTHpRdGRDOTBMVWcwTC9RdGRHQTBMWFF2ZEMrMFlIUXNGeHVJQ0FnSUNBZ0lDQjJZWElnWVhaaGRHRnlJRDBnWkhKaFowOWlhbVZqZEM1bGJHVnRPMXh1SUNBZ0lDQWdJQ0IyWVhJZ2IyeGtJRDBnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdjR0Z5Wlc1ME9pQmhkbUYwWVhJdWNHRnlaVzUwVG05a1pTeGNiaUFnSUNBZ0lDQWdJQ0FnSUc1bGVIUlRhV0pzYVc1bk9pQmhkbUYwWVhJdWJtVjRkRk5wWW14cGJtY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCd2IzTnBkR2x2YmpvZ1lYWmhkR0Z5TG5CdmMybDBhVzl1SUh4OElDY25MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2JHVm1kRG9nWVhaaGRHRnlMbXhsWm5RZ2ZId2dKeWNzWEc0Z0lDQWdJQ0FnSUNBZ0lDQjBiM0E2SUdGMllYUmhjaTUwYjNBZ2ZId2dKeWNzWEc0Z0lDQWdJQ0FnSUNBZ0lDQjZTVzVrWlhnNklHRjJZWFJoY2k1NlNXNWtaWGdnZkh3Z0p5ZGNiaUFnSUNBZ0lDQWdmVHRjYmx4dUlDQWdJQ0FnSUNBdkx5RFJoTkdEMEwzUXV0R0cwTGpSanlEUXROQzcwWThnMEw3Umd0QzgwTFhRdmRHTElOQy8wTFhSZ05DMTBMM1F2dEdCMExCY2JpQWdJQ0FnSUNBZ1lYWmhkR0Z5TG5KdmJHeGlZV05ySUQwZ0tDa2dQVDRnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdiMnhrTG5CaGNtVnVkQzVwYm5ObGNuUkNaV1p2Y21Vb1lYWmhkR0Z5TENCdmJHUXVibVY0ZEZOcFlteHBibWNwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdZWFpoZEdGeUxuTjBlV3hsTG5CdmMybDBhVzl1SUQwZ2IyeGtMbkJ2YzJsMGFXOXVPMXh1SUNBZ0lDQWdJQ0FnSUNBZ1lYWmhkR0Z5TG5OMGVXeGxMbXhsWm5RZ1BTQnZiR1F1YkdWbWREdGNiaUFnSUNBZ0lDQWdJQ0FnSUdGMllYUmhjaTV6ZEhsc1pTNTBiM0FnUFNCdmJHUXVkRzl3TzF4dUlDQWdJQ0FnSUNBZ0lDQWdZWFpoZEdGeUxuTjBlV3hsTG5wSmJtUmxlQ0E5SUc5c1pDNTZTVzVrWlhnN1hHNGdJQ0FnSUNBZ0lDQWdJQ0F2TDJOdmJuTnZiR1V1Ykc5bktDZEVjbUZuSUdOaGJtTmxiQ3dnY205c2JHSmhZMnNuS1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJQzhxYzJWMFZHbHRaVzkxZENobWRXNWpkR2x2YmlncElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmtiMk4xYldWdWRDNXhkV1Z5ZVZObGJHVmpkRzl5S0NjdVpISnZjSEJoWW14bExtUmxiR1YwWlMxaGNtVmhKeWt1WTJ4aGMzTk1hWE4wTG5KbGJXOTJaU2duYzJodmR5Y3BPMXh1SUNBZ0lDQWdJQ0FnSUNBZ2ZTd2dOVEF3S1RzcUwxeHVJQ0FnSUNBZ0lDQjlPMXh1WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUJoZG1GMFlYSTdYRzRnSUNBZ2ZWeHVJQ0FnSUhaaGNpQnpkR0Z5ZEVSeVlXY2dQU0FvWlNrZ1BUNGdlMXh1SUNBZ0lDQWdJQ0F2TDJOdmJuTnZiR1V1Ykc5bktDZHpkR0Z5ZEVSeVlXY25LVHRjYmx4dUlDQWdJQ0FnSUNCc1pYUWdZWFpoZEdGeUlEMGdaSEpoWjA5aWFtVmpkQzVoZG1GMFlYSTdYRzRnSUNBZ0lDQWdJR0YyWVhSaGNpNXpkSGxzWlM1M2FXUjBhQ0E5SUdSeVlXZFBZbXBsWTNRdVlYWmhkR0Z5TG05bVpuTmxkRmRwWkhSb0lDc2dKM0I0Snp0Y2JpQWdJQ0FnSUNBZ1lYWmhkR0Z5TG5OMGVXeGxMbWhsYVdkb2RDQTlJR1J5WVdkUFltcGxZM1F1WVhaaGRHRnlMbTltWm5ObGRFaGxhV2RvZENBcklDZHdlQ2M3WEc1Y2JpQWdJQ0FnSUNBZ0x5OGcwTGpRdmRDNDBZYlF1TkM0MFlEUXZ0Q3kwTERSZ3RHTUlOQzkwTERSaDlDdzBMdlF2aURRdjlDMTBZRFF0ZEM5MEw3UmdkQ3dYRzRnSUNBZ0lDQWdJR0YyWVhSaGNpNWpiR0Z6YzB4cGMzUXVZV1JrS0Nka2NtRm5MV2x1SnlrN1hHNGdJQ0FnSUNBZ0lHUnZZM1Z0Wlc1MExtSnZaSGt1WVhCd1pXNWtRMmhwYkdRb1lYWmhkR0Z5S1R0Y2JseHVJQ0FnSUNBZ0lDQnNaWFFnWkdWc1pYUmxRWEpsWVNBOUlHUnZZM1Z0Wlc1MExuRjFaWEo1VTJWc1pXTjBiM0lvWENJdVpISnZjSEJoWW14bExtUmxiR1YwWlMxaGNtVmhYQ0lwTzF4dUlDQWdJQ0FnSUNCcFppQW9aR1ZzWlhSbFFYSmxZU2xjYmlBZ0lDQWdJQ0FnSUNBZ0lHUmxiR1YwWlVGeVpXRXVZMnhoYzNOTWFYTjBMbUZrWkNnbmMyaHZkeWNwTzF4dVhHNGdJQ0FnZlZ4dUlDQWdJSFpoY2lCbWFXNXBjMmhFY21GbklEMGdLR1VwSUQwK0lIdGNiaUFnSUNBZ0lDQWdMeTlqYjI1emIyeGxMbXh2WnlnblptbHVhWE5vUkhKaFp5Y3BPMXh1WEc0Z0lDQWdJQ0FnSUd4bGRDQmhkbUYwWVhJZ1BTQmtjbUZuVDJKcVpXTjBMbUYyWVhSaGNqdGNiaUFnSUNBZ0lDQWdiR1YwSUdSeWIzQkZiR1Z0SUQwZ1ptbHVaRVJ5YjNCd1lXSnNaU2hsS1R0Y2JseHVJQ0FnSUNBZ0lDQnBaaUFvSVdSeWIzQkZiR1Z0S1Z4dUlDQWdJQ0FnSUNBZ0lDQWdZWFpoZEdGeUxuSnZiR3hpWVdOcktDazdYRzVjYmlBZ0lDQWdJQ0FnWVhaaGRHRnlMbk4wZVd4bElEMGdKeWM3WEc0Z0lDQWdJQ0FnSUdGMllYUmhjaTVqYkdGemMweHBjM1F1Y21WdGIzWmxLQ2RrY21GbkxXbHVKeWs3WEc1Y2JpQWdJQ0FnSUNBZ2JHVjBJR1J5YjNCd1lXSnNaU0E5SUdSeVlXZE5aVzUxTG5GMVpYSjVVMlZzWldOMGIzSW9YQ0l1WkhKdmNIQmhZbXhsWENJcE8xeHVJQ0FnSUNBZ0lDQnBaaUFvWkhKdmNIQmhZbXhsTG1Oc1lYTnpUR2x6ZEM1amIyNTBZV2x1Y3lnblpHVnNaWFJsTFdGeVpXRW5LU2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdaSEpoWjA5aWFtVmpkQ0E5SUh0OU8xeHVJQ0FnSUNBZ0lDQWdJQ0FnWVhaaGRHRnlMbkpsYlc5MlpTZ3BPMXh1SUNBZ0lDQWdJQ0I5SUdWc2MyVWdhV1lnS0dSeWIzQndZV0pzWlM1amJHRnpjMHhwYzNRdVkyOXVkR0ZwYm5Nb0ozTjFZaTFwZEdWdEp5a3BJSHRjYmx4dUlDQWdJQ0FnSUNBZ0lDQWdiR1YwSUd4cGMzUWdQU0JrY205d2NHRmliR1V1Y0dGeVpXNTBUbTlrWlM1eGRXVnllVk5sYkdWamRHOXlLRndpZFd4Y0lpazdYRzRnSUNBZ0lDQWdJQ0FnSUNCcFppQW9JV3hwYzNRcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNhWE4wSUQwZ1pHOWpkVzFsYm5RdVkzSmxZWFJsUld4bGJXVnVkQ2duZFd3bktUdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNhWE4wTG1Oc1lYTnpUR2x6ZEM1aFpHUW9KMjFsYm5VdGFYUmxiWE1uS1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc2FYTjBMbk5sZEVGMGRISnBZblYwWlNnbmNtOXNaU2NzSUZ3aWRHRmliR2x6ZEZ3aUtUdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmtjbTl3Y0dGaWJHVXVjR0Z5Wlc1MFRtOWtaUzVoY0hCbGJtUkRhR2xzWkNoc2FYTjBLVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNibHh1SUNBZ0lDQWdJQ0FnSUNBZ1lYWmhkR0Z5TG1Oc1lYTnpUR2x6ZEM1aFpHUW9KM04xWWkxcGRHVnRKeWs3WEc0Z0lDQWdJQ0FnSUNBZ0lDQmtjbTl3Y0dGaWJHVXVjbVZ3YkdGalpWZHBkR2dvWVhaaGRHRnlLVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHeHBjM1F1WVhCd1pXNWtRMmhwYkdRb1lYWmhkR0Z5S1R0Y2JpQWdJQ0FnSUNBZ2ZTQmxiSE5sSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJR0YyWVhSaGNpNWpiR0Z6YzB4cGMzUXVjbVZ0YjNabEtDZHpkV0l0YVhSbGJTY3BPMXh1SUNBZ0lDQWdJQ0FnSUNBZ1pISnZjSEJoWW14bExuSmxjR3hoWTJWWGFYUm9LR0YyWVhSaGNpazdYRzRnSUNBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnSUNBdkx5QnpaV3hsWTNSeklHRnNiQ0E4ZFd3K0lHVnNaVzFsYm5SekxDQjBhR1Z1SUdacGJIUmxjbk1nZEdobElHTnZiR3hsWTNScGIyNWNiaUFnSUNBZ0lDQWdiR1YwSUd4cGMzUnpJRDBnYldWdWRVbDBaVzF6TG5GMVpYSjVVMlZzWldOMGIzSkJiR3dvSjNWc0p5azdYRzRnSUNBZ0lDQWdJQzh2SUd0bFpYQWdiMjVzZVNCMGFHOXpaU0JsYkdWdFpXNTBjeUIzYVhSb0lHNXZJR05vYVd4a0xXVnNaVzFsYm5SelhHNGdJQ0FnSUNBZ0lHeGxkQ0JsYlhCMGVVeHBjM1FnUFNCYkxpNHViR2x6ZEhOZExtWnBiSFJsY2lobGJHVnRJRDArSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQmxiR1Z0TG1Ob2FXeGtjbVZ1TG14bGJtZDBhQ0E5UFQwZ01EdGNiaUFnSUNBZ0lDQWdmU2s3WEc1Y2JpQWdJQ0FnSUNBZ1ptOXlJQ2hzWlhRZ1pXMXdkSGtnYjJZZ1pXMXdkSGxNYVhOMEtWeHVJQ0FnSUNBZ0lDQWdJQ0FnWlcxd2RIa3VjbVZ0YjNabEtDazdYRzVjYmlBZ0lDQWdJQ0FnTHk5a2NtRm5UMkpxWldOMExtUmhkR0VnUFNCMGNtRnVjMlp2Y20xRVlYUmhLRzFsYm5WSmRHVnRjeTV4ZFdWeWVWTmxiR1ZqZEc5eUtGd2lMbTFsYm5VdGFYUmxiWE5jSWlrcE8xeHVJQ0FnSUNBZ0lDQmtjbUZuVDJKcVpXTjBMbVJoZEdFZ1BTQjBjbUZ1YzJadmNtMUVZWFJoS0cxbGJuVkpkR1Z0Y3lrN1hHNGdJQ0FnSUNBZ0lISmxiVzkyWlVWc1pXMWxiblJ6S0cxbGJuVkpkR1Z0Y3k1eGRXVnllVk5sYkdWamRHOXlRV3hzS0Z3aUxtUnliM0J3WVdKc1pUcHViM1FvTG1SbGJHVjBaUzFoY21WaEtWd2lLU2s3WEc1Y2JpQWdJQ0FnSUNBZ2JHVjBJR1JsYkdWMFpVRnlaV0VnUFNCa2IyTjFiV1Z1ZEM1eGRXVnllVk5sYkdWamRHOXlLRndpTG1SeWIzQndZV0pzWlM1a1pXeGxkR1V0WVhKbFlWd2lLVHRjYmlBZ0lDQWdJQ0FnYzJWMFZHbHRaVzkxZENobWRXNWpkR2x2YmlncElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaGtaV3hsZEdWQmNtVmhLVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1JsYkdWMFpVRnlaV0V1WTJ4aGMzTk1hWE4wTG5KbGJXOTJaU2duYzJodmR5Y3BPMXh1SUNBZ0lDQWdJQ0I5TENBMU1EQXBPMXh1WEc0Z0lDQWdJQ0FnSUdsbUlDZ2haSEp2Y0VWc1pXMHBYRzRnSUNBZ0lDQWdJQ0FnSUNCelpXeG1MbTl1UkhKaFowTmhibU5sYkNoa2NtRm5UMkpxWldOMEtUdGNiaUFnSUNBZ0lDQWdaV3h6WlZ4dUlDQWdJQ0FnSUNBZ0lDQWdjMlZzWmk1dmJrUnlZV2RGYm1Rb1pISmhaMDlpYW1WamRDd2daSEp2Y0VWc1pXMHBPMXh1SUNBZ0lIMWNiaUFnSUNCMllYSWdabWx1WkVSeWIzQndZV0pzWlNBOUlDaGxLU0E5UGlCN1hHNGdJQ0FnSUNBZ0lDOHZJTkdCMEwvUmdOR1AwWWZRdGRDOElOQy8wTFhSZ05DMTBMM1F2dEdCMExqUXZOR0wwTGtnMFkzUXU5QzEwTHpRdGRDOTBZSmNiaUFnSUNBZ0lDQWdaSEpoWjA5aWFtVmpkQzVoZG1GMFlYSXVhR2xrWkdWdUlEMGdkSEoxWlR0Y2JseHVJQ0FnSUNBZ0lDQnNaWFFnZEc5d0lEMGdaUzVqYkdsbGJuUlpJSHg4SUdVdVkyaGhibWRsWkZSdmRXTm9aWE5iTUYwdWNHRm5aVms3WEc0Z0lDQWdJQ0FnSUd4bGRDQnNaV1owSUQwZ1pTNWpiR2xsYm5SWUlIeDhJR1V1WTJoaGJtZGxaRlJ2ZFdOb1pYTmJNRjB1Y0dGblpWZzdYRzVjYmlBZ0lDQWdJQ0FnTHk4ZzBML1F2dEM3MFlQUmg5QzQwWUxSakNEUmdkQ3cwTHpSaTlDNUlOQ3kwTHZRdnRDMjBMWFF2ZEM5MFl2UXVTRFJqZEM3MExYUXZOQzEwTDNSZ2lEUXY5QyswTFFnMExyUmc5R0EwWUhRdnRHQTBMN1F2Q0RRdk5HTDBZalF1Rnh1SUNBZ0lDQWdJQ0JzWlhRZ1pXeGxiU0E5SUdSdlkzVnRaVzUwTG1Wc1pXMWxiblJHY205dFVHOXBiblFvYkdWbWRDd2dkRzl3S1R0Y2JseHVJQ0FnSUNBZ0lDQXZMeURRdjlDKzBMclFzTkMzMExEUmd0R01JTkMvMExYUmdOQzEwTDNRdnRHQjBMalF2TkdMMExrZzBZM1F1OUMxMEx6UXRkQzkwWUlnMEw3UXNkR0EwTERSZ3RDOTBMNWNiaUFnSUNBZ0lDQWdaSEpoWjA5aWFtVmpkQzVoZG1GMFlYSXVhR2xrWkdWdUlEMGdabUZzYzJVN1hHNWNiaUFnSUNBZ0lDQWdhV1lnS0dWc1pXMGdQVDBnYm5Wc2JDa2dMeThnMFlMUXNOQzYwTDdRdFNEUXN0QyswTGZRdk5DKzBMYlF2ZEMrTENEUXRkR0IwTHZRdUNEUXV0R0QwWURSZ2RDKzBZQWcwTHpSaTlHSTBMZ2dYQ0xRc3RHTDBMdlF0ZEdDMExYUXUxd2lJTkMzMExBZzBMUFJnTkN3MEwzUXVOR0cwWU1nMEw3UXV0QzkwTEJjYmlBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCdWRXeHNPMXh1WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUJsYkdWdExtTnNiM05sYzNRb0p5NWtjbTl3Y0dGaWJHVW5LVHRjYmlBZ0lDQjlYRzVjYmx4dUlDQWdJSFpoY2lCdmJrMXZkWE5sUkc5M2JpQTlJQ2hsS1NBOVBpQjdYRzVjYmlBZ0lDQWdJQ0FnYVdZZ0tHVXVkSGx3WlNBOVBUMGdYQ0p0YjNWelpXUnZkMjVjSWlBbUppQmxMbmRvYVdOb0lDRTlJREVwWEc0Z0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200N1hHNWNiaUFnSUNBZ0lDQWdkbUZ5SUdWc1pXMGdQU0JsTG5SaGNtZGxkQzVqYkc5elpYTjBLQ2N1WkhKaFoyZGhZbXhsSnlrN1hHNGdJQ0FnSUNBZ0lHbG1JQ2doWld4bGJTa2djbVYwZFhKdU8xeHVYRzRnSUNBZ0lDQWdJR1J5WVdkUFltcGxZM1F1Wld4bGJTQTlJR1ZzWlcwN1hHNWNiaUFnSUNBZ0lDQWdMeThnMExmUXNOQy8wTDdRdk5DOTBMalF2Q3dnMFlmUmd0QytJTkdOMEx2UXRkQzgwTFhRdmRHQ0lOQzkwTERRdHRDdzBZSWcwTDNRc0NEUmd0QzEwTHJSZzlHSjBMalJoU0RRdXRDKzBMN1JnTkMwMExqUXZkQ3cwWUxRc05HRklIQmhaMlZZTDNCaFoyVlpYRzRnSUNBZ0lDQWdJR1J5WVdkUFltcGxZM1F1Wkc5M2JsZ2dQU0JsTG5CaFoyVllJSHg4SUdVdWRHRnlaMlYwVkc5MVkyaGxjMXN3WFM1d1lXZGxXRHRjYmlBZ0lDQWdJQ0FnWkhKaFowOWlhbVZqZEM1a2IzZHVXU0E5SUdVdWNHRm5aVmtnZkh3Z1pTNTBZWEpuWlhSVWIzVmphR1Z6V3pCZExuQmhaMlZaTzF4dVhHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCbVlXeHpaVHRjYmlBZ0lDQjlYRzRnSUNBZ2RtRnlJRzl1VFc5MWMyVk5iM1psSUQwZ0tHVXBJRDArSUh0Y2JpQWdJQ0FnSUNBZ2FXWWdLQ0ZrY21GblQySnFaV04wTG1Wc1pXMHBJSEpsZEhWeWJqc2dMeThnMFkzUXU5QzEwTHpRdGRDOTBZSWcwTDNRdFNEUXQ5Q3cwTGJRc05HQ1hHNWNiaUFnSUNBZ0lDQWdhV1lnS0NGa2NtRm5UMkpxWldOMExtRjJZWFJoY2lrZ2V5QXZMeURRdGRHQjBMdlF1Q0RRdjlDMTBZRFF0ZEM5MEw3UmdTRFF2ZEMxSU5DOTBMRFJoOUN3MFlJdUxpNWNibHh1SUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRzF2ZG1WWUlEMGdNRHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0J0YjNabFdTQTlJREE3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaaUFvWlM1MGVYQmxJRDA5UFNCY0luUnZkV05vYlc5MlpWd2lLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYlc5MlpWZ2dQU0JsTG5SaGNtZGxkRlJ2ZFdOb1pYTmJNRjB1Y0dGblpWZ2dMU0JrY21GblQySnFaV04wTG1SdmQyNVlPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzF2ZG1WWklEMGdaUzUwWVhKblpYUlViM1ZqYUdWeld6QmRMbkJoWjJWWklDMGdaSEpoWjA5aWFtVmpkQzVrYjNkdVdUdGNiaUFnSUNBZ0lDQWdJQ0FnSUgwZ1pXeHpaU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYlc5MlpWZ2dQU0JsTG5CaFoyVllJQzBnWkhKaFowOWlhbVZqZEM1a2IzZHVXRHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J0YjNabFdTQTlJR1V1Y0dGblpWa2dMU0JrY21GblQySnFaV04wTG1SdmQyNVpPMXh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVYRzRnSUNBZ0lDQWdJQ0FnSUNBdkx5RFF0ZEdCMEx2UXVDRFF2TkdMMFlqUmpDRFF2OUMxMFlEUXRkQzAwTExRdU5DOTBZUFF1OUN3MFlIUmpDRFFzaURRdmRDdzBMYlFzTkdDMEw3UXZDRFJnZEMrMFlIUmd0QyswWS9RdmRDNDBMZ2cwTDNRdGRDMDBMN1JnZEdDMExEUmd0QyswWWZRdmRDK0lOQzAwTERRdTlDMTBMclF2bHh1SUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLRTFoZEdndVlXSnpLRzF2ZG1WWUtTQThJRFVnSmlZZ1RXRjBhQzVoWW5Nb2JXOTJaVmtwSUR3Z05TbGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200N1hHNWNiaUFnSUNBZ0lDQWdJQ0FnSUM4dklOQzkwTERSaDlDNDBMM1FzTkMxMEx3ZzBML1F0ZEdBMExYUXZkQyswWUZjYmlBZ0lDQWdJQ0FnSUNBZ0lHUnlZV2RQWW1wbFkzUXVZWFpoZEdGeUlEMGdZM0psWVhSbFFYWmhkR0Z5S0dVcE95QXZMeURSZ2RDKzBMZlF0TkN3MFlMUmpDRFFzTkN5MExEUmd0Q3cwWUJjYmlBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2doWkhKaFowOWlhbVZqZEM1aGRtRjBZWElwSUhzZ0x5OGcwTDdSZ3RDODBMWFF2ZEN3SU5DLzBMWFJnTkMxMEwzUXZ0R0IwTEFzSU5DOTBMWFF1OUdNMExmUmp5QmNJdEMzMExEUmhkQ3kwTERSZ3RDNDBZTFJqRndpSU5DMzBMQWcwWTNSZ3RHRElOR0gwTERSZ2RHQzBZd2cwWTNRdTlDMTBMelF0ZEM5MFlMUXNGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHUnlZV2RQWW1wbFkzUWdQU0I3ZlR0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTQ3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJQ0FnSUNBZ0lDOHZJTkN3MExMUXNOR0MwTERSZ0NEUmdkQyswTGZRdE5DdzBMMGcwWVBSZ2RDLzBMWFJpTkM5MEw1Y2JpQWdJQ0FnSUNBZ0lDQWdJQzh2SU5HQjBMN1F0OUMwMExEUmd0R01JTkN5MFlIUXY5QyswTHpRdnRDejBMRFJndEMxMEx2UmpOQzkwWXZRdFNEUmdkQ3kwTDdRdWRHQjBZTFFzdEN3SUhOb2FXWjBXQzl6YUdsbWRGbGNiaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQmpiMjl5WkhNZ1BTQm5aWFJEYjI5eVpITW9aSEpoWjA5aWFtVmpkQzVoZG1GMFlYSXBPMXh1SUNBZ0lDQWdJQ0FnSUNBZ1pISmhaMDlpYW1WamRDNXphR2xtZEZnZ1BTQmtjbUZuVDJKcVpXTjBMbVJ2ZDI1WUlDMGdZMjl2Y21SekxteGxablE3WEc0Z0lDQWdJQ0FnSUNBZ0lDQmtjbUZuVDJKcVpXTjBMbk5vYVdaMFdTQTlJR1J5WVdkUFltcGxZM1F1Wkc5M2Jsa2dMU0JqYjI5eVpITXVkRzl3TzF4dVhHNGdJQ0FnSUNBZ0lDQWdJQ0J6ZEdGeWRFUnlZV2NvWlNrN0lDOHZJTkMrMFlMUXZ0Q3gwWURRc05DMzBMalJndEdNSU5DOTBMRFJoOUN3MEx2UXZpRFF2OUMxMFlEUXRkQzkwTDdSZ2RDd1hHNGdJQ0FnSUNBZ0lIMWNibHh1SUNBZ0lDQWdJQ0F2THlEUXZ0R0MwTDdRc2RHQTBMRFF0OUM0MFlMUmpDRFF2OUMxMFlEUXRkQzkwTDdSZ1NEUXZ0Q3gwWXJRdGRDNjBZTFFzQ0RRdjlHQTBMZ2cwTHJRc05DMjBMVFF2dEM4SU5DMDBMTFF1TkMyMExYUXZkQzQwTGdnMEx6Umk5R0kwTGhjYmlBZ0lDQWdJQ0FnYVdZZ0tHVXVkSGx3WlNBOVBUMGdYQ0owYjNWamFHMXZkbVZjSWlrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnWkhKaFowOWlhbVZqZEM1aGRtRjBZWEl1YzNSNWJHVXViR1ZtZENBOUlDaGxMbU5vWVc1blpXUlViM1ZqYUdWeld6QmRMbkJoWjJWWUlDMGdaSEpoWjA5aWFtVmpkQzV6YUdsbWRGZ3BJQ3NnSjNCNEp6dGNiaUFnSUNBZ0lDQWdJQ0FnSUdSeVlXZFBZbXBsWTNRdVlYWmhkR0Z5TG5OMGVXeGxMblJ2Y0NBOUlDaGxMbU5vWVc1blpXUlViM1ZqYUdWeld6QmRMbkJoWjJWWklDMGdaSEpoWjA5aWFtVmpkQzV6YUdsbWRGa3BJQ3NnSjNCNEp6dGNiaUFnSUNBZ0lDQWdmU0JsYkhObElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUdSeVlXZFBZbXBsWTNRdVlYWmhkR0Z5TG5OMGVXeGxMbXhsWm5RZ1BTQW9aUzV3WVdkbFdDQXRJR1J5WVdkUFltcGxZM1F1YzJocFpuUllLU0FySUNkd2VDYzdYRzRnSUNBZ0lDQWdJQ0FnSUNCa2NtRm5UMkpxWldOMExtRjJZWFJoY2k1emRIbHNaUzUwYjNBZ1BTQW9aUzV3WVdkbFdTQXRJR1J5WVdkUFltcGxZM1F1YzJocFpuUlpLU0FySUNkd2VDYzdYRzRnSUNBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnSUNCamNtVmhkR1ZFY205d2NHRmliR1VvWlNrN1hHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCbVlXeHpaVHRjYmlBZ0lDQjlYRzRnSUNBZ2RtRnlJRzl1VFc5MWMyVlZjQ0E5SUNobEtTQTlQaUI3WEc0Z0lDQWdJQ0FnSUdsbUlDaGtjbUZuVDJKcVpXTjBMbUYyWVhSaGNpa2dMeThnMExYUmdkQzcwTGdnMEwvUXRkR0EwTFhRdmRDKzBZRWcwTGpRdE5DMTBZSmNiaUFnSUNBZ0lDQWdJQ0FnSUdacGJtbHphRVJ5WVdjb1pTazdYRzVjYmlBZ0lDQWdJQ0FnTHk4ZzBML1F0ZEdBMExYUXZkQyswWUVnMEx2UXVOQ3gwTDRnMEwzUXRTRFF2ZEN3MFlmUXVOQzkwTERRdTlHQjBZOHNJTkM3MExqUXNkQytJTkMzMExEUXN0QzEwWURSaU5DNDBMdlJnZEdQWEc0Z0lDQWdJQ0FnSUM4dklOQ3lJTkM3MFk3UXNkQyswTHdnMFlIUXU5R0QwWWZRc05DMUlOQyswWWZRdU5HQjBZTFF1TkM4SUZ3aTBZSFF2dEdCMFlMUXZ0R1AwTDNRdU5DMUlOQy8wTFhSZ05DMTBMM1F2dEdCMExCY0lpQmtjbUZuVDJKcVpXTjBYRzRnSUNBZ0lDQWdJR1J5WVdkUFltcGxZM1FnUFNCN2ZUdGNiaUFnSUNCOVhHNWNiaUFnSUNCMGFHbHpMbWRsZEVsMFpXMXpSR0YwWVNBOUlHWjFibU4wYVc5dUtDa2dlMXh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdkSEpoYm5ObWIzSnRSR0YwWVNodFpXNTFTWFJsYlhNcE8xeHVJQ0FnSUgwN1hHNWNiaUFnSUNCMGFHbHpMbUoxYVd4a1RXVnVkVWwwWlcxeklEMGdablZ1WTNScGIyNG9aR0YwWVNrZ2UxeHVJQ0FnSUNBZ0lDQnNaWFFnYVhSbGJYTWdQU0JiTGk0dVpHRjBZVjB1Wm1sc2RHVnlLR2wwWlcwZ1BUNGdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLSFI1Y0dWdlppQnBkR1Z0SUQwOUlGd2liMkpxWldOMFhDSXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqYjI1emIyeGxMbXh2WnlocGRHVnRLVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2NHRnlaVzUwWDJsa0lEMGdhWFJsYlM1d1lYSmxiblJmYVdSY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaFpHUk5aVzUxU1hSbGJTaHBkR1Z0TENCd1lYSmxiblJmYVdRcE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNCOUtUdGNiaUFnSUNCOU8xeHVYRzRnSUNBZ2RHaHBjeTV2YmtsdWFYUWdQU0JtZFc1amRHbHZiaWh0Wlc1MVNYUmxiWE1wSUhzZ2ZUdGNiaUFnSUNCMGFHbHpMbTl1UkhKaFowVnVaQ0E5SUdaMWJtTjBhVzl1S0dSeVlXZFBZbXBsWTNRc0lHUnliM0JGYkdWdEtTQjdmVHRjYmlBZ0lDQjBhR2x6TG05dVJISmhaME5oYm1ObGJDQTlJR1oxYm1OMGFXOXVLR1J5WVdkUFltcGxZM1FwSUh0OU8xeHVYRzRnSUNBZ2RHaHBjeTV2YmtGa1pGTjFZMk5sYzNNZ1BTQm1kVzVqZEdsdmJpaGtjbUZuVDJKcVpXTjBMQ0J0Wlc1MVNYUmxiWE1wSUh0OU8xeHVJQ0FnSUhSb2FYTXViMjVCWkdSR1lXbHNkSFZ5WlNBOUlHWjFibU4wYVc5dUtHUnlZV2RQWW1wbFkzUXNJRzFsYm5WSmRHVnRjeWtnZTMwN1hHNWNiaUFnSUNCa2IyTjFiV1Z1ZEM1aFpHUkZkbVZ1ZEV4cGMzUmxibVZ5S0Z3aVJFOU5RMjl1ZEdWdWRFeHZZV1JsWkZ3aUxDQm1kVzVqZEdsdmJpaGxkbVZ1ZENrZ2UxeHVJQ0FnSUNBZ0lDQnBaaUFvWkhKaFowMWxiblVnSmlZZ2JXVnVkVWwwWlcxektTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCamIyNXpiMnhsTG14dlp5Z25aSEpoWjAxbGJuVXViMjVzYjJGa0p5azdYRzRnSUNBZ0lDQWdJQ0FnSUNCa2NtRm5UV1Z1ZFM1dmJtMXZkWE5sWkc5M2JpQTlJRzl1VFc5MWMyVkViM2R1TzF4dUlDQWdJQ0FnSUNBZ0lDQWdaSEpoWjAxbGJuVXViMjUwYjNWamFITjBZWEowSUQwZ2IyNU5iM1Z6WlVSdmQyNDdYRzRnSUNBZ0lDQWdJQ0FnSUNCa2NtRm5UV1Z1ZFM1dmJtMXZkWE5sYlc5MlpTQTlJRzl1VFc5MWMyVk5iM1psTzF4dUlDQWdJQ0FnSUNBZ0lDQWdaSEpoWjAxbGJuVXViMjUwYjNWamFHMXZkbVVnUFNCdmJrMXZkWE5sVFc5MlpUdGNiaUFnSUNBZ0lDQWdJQ0FnSUdSeVlXZE5aVzUxTG05dWJXOTFjMlYxY0NBOUlHOXVUVzkxYzJWVmNEdGNiaUFnSUNBZ0lDQWdJQ0FnSUdSeVlXZE5aVzUxTG05dWRHOTFZMmhsYm1RZ1BTQnZiazF2ZFhObFZYQTdYRzRnSUNBZ0lDQWdJQ0FnSUNCelpXeG1MbTl1U1c1cGRDZ3BPMXh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdmU2s3WEc1OVhHNWNia1J5WVdkTlpXNTFMbTl1UkhKaFowTmhibU5sYkNBOUlHWjFibU4wYVc5dUlDaGtjbUZuVDJKcVpXTjBLU0I3WEc0Z0lDQWdhV1lnS0dSeVlXZFBZbXBsWTNRdVpHRjBZU2tnZTF4dUlDQWdJQ0FnSUNCc1pYUWdabTl5YlNBOUlHUnZZM1Z0Wlc1MExtZGxkRVZzWlcxbGJuUkNlVWxrS0NkaFpHUk5aVzUxUm05eWJTY3BPMXh1SUNBZ0lDQWdJQ0JtYjNKdExuRjFaWEo1VTJWc1pXTjBiM0lvSjJsdWNIVjBJMjFsYm5VdGFYUmxiWE1uS1M1MllXeDFaU0E5SUdSeVlXZFBZbXBsWTNRdVpHRjBZVHRjYmlBZ0lDQjlYRzU5TzF4dVhHNUVjbUZuVFdWdWRTNXZia1J5WVdkRmJtUWdQU0JtZFc1amRHbHZiaUFvWkhKaFowOWlhbVZqZEN3Z1pISnZjRVZzWlcwcElIdGNiaUFnSUNCcFppQW9aSEpoWjA5aWFtVmpkQzVrWVhSaEtTQjdYRzRnSUNBZ0lDQWdJR3hsZENCbWIzSnRJRDBnWkc5amRXMWxiblF1WjJWMFJXeGxiV1Z1ZEVKNVNXUW9KMkZrWkUxbGJuVkdiM0p0SnlrN1hHNGdJQ0FnSUNBZ0lHWnZjbTB1Y1hWbGNubFRaV3hsWTNSdmNpZ25hVzV3ZFhRamJXVnVkUzFwZEdWdGN5Y3BMblpoYkhWbElEMGdaSEpoWjA5aWFtVmpkQzVrWVhSaE8xeHVJQ0FnSUgxY2JuMDdYRzVjYmtSeVlXZE5aVzUxTG05dVFXUmtVM1ZqWTJWemN5QTlJR1oxYm1OMGFXOXVJQ2hrY21GblQySnFaV04wTENCdFpXNTFTWFJsYlhNcElIdGNiaUFnSUNCc1pYUWdabTl5YlNBOUlHUnZZM1Z0Wlc1MExtZGxkRVZzWlcxbGJuUkNlVWxrS0NkaFpHUk5aVzUxUm05eWJTY3BPMXh1SUNBZ0lHWnZjbTB1Y1hWbGNubFRaV3hsWTNSdmNpZ25hVzV3ZFhRamJXVnVkUzFwZEdWdGN5Y3BMblpoYkhWbElEMGdkR2hwY3k1blpYUkpkR1Z0YzBSaGRHRW9LVHRjYm4wN1hHNWNia1J5WVdkTlpXNTFMbTl1U1c1cGRDQTlJR1oxYm1OMGFXOXVJQ2dwSUh0Y2JpQWdJQ0JzWlhRZ1ptOXliU0E5SUdSdlkzVnRaVzUwTG1kbGRFVnNaVzFsYm5SQ2VVbGtLQ2RoWkdSTlpXNTFSbTl5YlNjcE8xeHVJQ0FnSUd4bGRDQmtZWFJoSUQwZ1NsTlBUaTV3WVhKelpTaG1iM0p0TG5GMVpYSjVVMlZzWldOMGIzSW9KMmx1Y0hWMEkyMWxiblV0YVhSbGJYTW5LUzUyWVd4MVpTazdYRzRnSUNBZ2RHaHBjeTVpZFdsc1pFMWxiblZKZEdWdGN5aGtZWFJoS1R0Y2JuMDdJbDE5XG4iXX0=
