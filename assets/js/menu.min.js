var DragMenu=new function(){[...document.getElementById("menuSources").querySelectorAll(".panel .panel-body")].filter((e=>{if(e.children.length){let t=e.querySelectorAll('.source-list input[type="checkbox"]'),n=e.querySelector('button[data-rel="add"]');n&&t&&(n.onclick=e=>{e.preventDefault();[...t].filter((e=>{e.checked&&r(e)}));t.forEach((e=>{e.checked=!1}))});let c=e.querySelector('input[type="checkbox"][name="select-all"]');c&&t&&(c.onchange=e=>{e.preventDefault(),e.target.checked?t.forEach((e=>{e.checked=!0})):t.forEach((e=>{e.checked=!1}))})}}));var e=(e,t)=>{do{var n=e,c=(e=e.replace(/{{\s*([^}\s]+)\s*}}/g,(function(e,n){var c=t[$.trim(n)];return void 0===c?e:c})))!==n}while(c);return e},t=document.getElementById("menuItems"),n=document.getElementById("itemFormTemplate"),c=document.getElementById("menuItemTemplate"),r=r=>{if(t&&c&&"content"in document.createElement("template")){t.classList.contains("no-items")&&(t.classList.remove("no-items"),t.innerHTML="");let o=r.dataset;o.form=e(n.innerHTML,o);let m=e(c.innerHTML,o);t.append((l=m,a=document.createElement("template"),l=l.trim(),a.innerHTML=l,a.content.firstChild))}var l,a}};
//# sourceMappingURL=data:application/json;charset=utf8;base64,
