var DragMenu=new function(){var e=this,t={},a=document.getElementById("dragMenu"),n=document.getElementById("menuItems"),l=document.getElementById("menuSources"),r=l.querySelectorAll(".panel"),o=document.getElementById("itemFormTemplate"),u=document.getElementById("menuItemTemplate"),i=document.getElementById("addMenuItemForm");const s=e=>e.forEach((e=>e.remove())),c=(e,t=!0)=>{let a=[];function n(e,t,a="UL"){let l=e.querySelector("form[data-key]"),r={id:l.getAttribute("data-key")||null,type:l.getAttribute("data-type")||null,name:l.querySelector('input[name="MenuItems[name]"]').value||null,title:l.querySelector('input[name="MenuItems[title]"]').value||null,url:l.querySelector('input[name="MenuItems[url]"]').value||null,auth:l.querySelector('input[name="MenuItems[only_auth]"]').value||null,target:l.querySelector('input[name="MenuItems[target_blank]"]').value||null};e.childElementCount&&(r.children=[],Array.from(e.children).forEach((e=>{e.nodeName===a.toUpperCase()&&Array.from(e.children).forEach((e=>{n(e,r.children)}))}))),t.push(r)}return Array.from(e.children).forEach((e=>{n(e,a,"UL")})),t?JSON.stringify(a):a},d=(e,t)=>{do{var a=e,n=(e=e.replace(/{{\s*([^}\s]+)\s*}}/g,(function(e,a){var n=t[$.trim(a)];return void 0===n?e:n})))!==a}while(n);return e};var m=a=>{if(n&&u&&"content"in document.createElement("template")){n.classList.contains("no-items")&&(n.classList.remove("no-items"),n.innerHTML="");let i=a;i.form=d(o.innerHTML,i);let s=d(u.innerHTML,i);return n.append((l=s,r=document.createElement("template"),l=l.trim(),r.innerHTML=l,r.content.firstChild)),e.onAddSuccess(t,n)}var l,r;return e.onAddFailture(t,n)};if(i.length){i.querySelector('button[data-rel="add"]').addEventListener("click",(e=>{let t=l.querySelector('#source-link a[data-toggle="collapse"]');console.log(t);let a={id:null,source:t.dataset.type||null,source_name:t.dataset.name||null,name:i.querySelector('input[name="MenuItems[name]"]').value||!1,title:i.querySelector('input[name="MenuItems[title]"]').value||!1,url:i.querySelector('input[name="MenuItems[url]"]').value||!1,only_auth:i.querySelector('input[name="MenuItems[only_auth]"]').value||!1,target_blank:i.querySelector('input[name="MenuItems[target_blank]"]').value||!1};m(a)&&i.reset()}))}[...r].filter((e=>{if(e.children.length){let t=e.querySelector('button[data-rel="add"]'),a=e.querySelector('input[type="checkbox"][name="select-all"]'),n=e.querySelectorAll('.source-list input[type="checkbox"]');t&&n&&(n.forEach((a=>{a.onchange=a=>{a.preventDefault(),e.querySelectorAll('input[type="checkbox"]:checked:not([name="select-all"])').length?t.removeAttribute("disabled"):t.setAttribute("disabled",!0)}})),t.onclick=e=>{e.preventDefault();[...n].filter((e=>{e.checked&&m(e.dataset)}));n.forEach((e=>{e.checked=!1}))}),a&&n&&(a.onchange=e=>{e.preventDefault();let t=e.target.checked;n.forEach((a=>{a.checked=!!t,a.onchange(e)}))})}}));var p=e=>{t.avatar.hidden=!0;let a=e.clientY||e.changedTouches[0].pageY,n=e.clientX||e.changedTouches[0].pageX,l=document.elementFromPoint(n,a);return t.avatar.hidden=!1,null==l?null:l.closest(".droppable")},g=e=>{if("mousedown"!==e.type||1==e.which){var a=e.target.closest(".draggable");if(a)return t.elem=a,t.downX=e.pageX||e.targetTouches[0].pageX,t.downY=e.pageY||e.targetTouches[0].pageY,!1}},h=e=>{if(t.elem){if(!t.avatar){let n=0,r=0;if("touchmove"===e.type?(n=e.targetTouches[0].pageX-t.downX,r=e.targetTouches[0].pageY-t.downY):(n=e.pageX-t.downX,r=e.pageY-t.downY),Math.abs(n)<5&&Math.abs(r)<5)return;if(t.avatar=(a=t.elem,l={parent:a.parentNode,nextSibling:a.nextSibling,position:a.position||"",left:a.left||"",top:a.top||"",zIndex:a.zIndex||""},a.rollback=()=>{l.parent.insertBefore(a,l.nextSibling),a.style.position=l.position,a.style.left=l.left,a.style.top=l.top,a.style.zIndex=l.zIndex},a),!t.avatar)return void(t={});let o=(e=>{let t=e.getBoundingClientRect();return{top:t.top+pageYOffset,left:t.left+pageXOffset}})(t.avatar);t.shiftX=t.downX-o.left,t.shiftY=t.downY-o.top,(e=>{let a=t.avatar;a.style.width=t.avatar.offsetWidth+"px",a.style.height=t.avatar.offsetHeight+"px",a.classList.add("drag-in"),document.body.appendChild(a);let n=document.querySelector(".droppable.delete-area");n&&n.classList.add("show")})()}var a,l;return"touchmove"===e.type?(t.avatar.style.left=e.changedTouches[0].pageX-t.shiftX+"px",t.avatar.style.top=e.changedTouches[0].pageY-t.shiftY+"px"):(t.avatar.style.left=e.pageX-t.shiftX+"px",t.avatar.style.top=e.pageY-t.shiftY+"px"),(e=>{let a=e.clientY||e.targetTouches[0].pageY,l=e.clientX||e.targetTouches[0].pageX,r=document.elementFromPoint(l,a),o=document.createElement("div");o.classList.add("droppable"),t.avatar.getBoundingClientRect().left-r.getBoundingClientRect().left>=.1*t.avatar.offsetWidth?o.classList.add("sub-item"):o.classList.remove("sub-item");let u=t.avatar.querySelector('.panel-title a[data-toggle="collapse"]').dataset.name,i=document.createTextNode(u.trim());o.appendChild(i),o.style.width=t.avatar.offsetWidth+"px",o.style.height=t.avatar.offsetHeight+"px",o.isEqualNode(t.droppable)||(s(n.querySelectorAll(".droppable:not(.delete-area)")),t.droppable=null),t.droppable=o;let c=r.closest(".draggable");if(c&&void 0!==c){s(n.querySelectorAll(".droppable:not(.delete-area)"));let a=e.clientY||e.targetTouches[0].pageY;if(e.clientX||e.targetTouches[0].pageX,a>=c.getBoundingClientRect().top+c.offsetHeight/1.5)t.avatar.getBoundingClientRect().left-r.getBoundingClientRect().left>=.1*t.avatar.offsetWidth?c.querySelector(".collapse").after(o):c.after(o),c.classList.contains("sub-item")&&o.classList.add("sub-item");else if(a<c.getBoundingClientRect().top+c.offsetHeight/1.5&&(t.avatar.getBoundingClientRect().left-r.getBoundingClientRect().left>=.1*t.avatar.offsetWidth?c.querySelector(".collapse").after(o):c.before(o),document.getElementById("menuItems").firstChild.isEqualNode(o)&&o.classList.remove("sub-item"),c.classList.contains("sub-item")))return o.remove(),!1;t.avatar.style.width=o.offsetWidth+"px",t.avatar.style.height=o.offsetHeight+"px"}})(e),!1}},f=l=>{t.avatar&&(l=>{let r=t.avatar,o=p(l);o||r.rollback(),r.style="",r.classList.remove("drag-in");let u=a.querySelector(".droppable");if(u.classList.contains("delete-area"))t={},r.remove();else if(u.classList.contains("sub-item")){let e=u.parentNode.querySelector("ul");e||(e=document.createElement("ul"),e.classList.add("menu-items"),e.setAttribute("role","tablist"),u.parentNode.appendChild(e)),r.classList.add("sub-item"),u.replaceWith(r),e.appendChild(r)}else r.classList.remove("sub-item"),u.replaceWith(r);let i=[...n.querySelectorAll("ul")].filter((e=>0===e.children.length));for(let e of i)e.remove();t.data=c(n),s(n.querySelectorAll(".droppable:not(.delete-area)"));let d=document.querySelector(".droppable.delete-area");setTimeout((function(){d&&d.classList.remove("show")}),500),o?e.onDragEnd(t,o):e.onDragCancel(t)})(l),t={}};a.onmousedown=g,a.ontouchstart=g,a.onmousemove=h,a.ontouchmove=h,a.onmouseup=f,a.ontouchend=f,this.getItemsData=function(){return c(n)},this.onDragEnd=function(e,t){},this.onDragCancel=function(e){},this.onAddSuccess=function(e,t){},this.onAddFailture=function(e,t){}};DragMenu.onDragCancel=function(e){if(e.data){document.getElementById("addMenuForm").querySelector("input#menu-items").value=e.data}},DragMenu.onDragEnd=function(e,t){if(e.data){document.getElementById("addMenuForm").querySelector("input#menu-items").value=e.data}},DragMenu.onAddSuccess=function(e,t){document.getElementById("addMenuForm").querySelector("input#menu-items").value=this.getItemsData()};
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1lbnUuanMiXSwibmFtZXMiOlsiRHJhZ01lbnUiLCJzZWxmIiwidGhpcyIsImRyYWdPYmplY3QiLCJkcmFnTWVudSIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJtZW51SXRlbXNMaXN0IiwibWVudVNvdXJjZXMiLCJwYW5lbHMiLCJxdWVyeVNlbGVjdG9yQWxsIiwiZm9ybVRlbXBsYXRlIiwiaXRlbVRlbXBsYXRlIiwiYWRkTWVudUl0ZW1Gb3JtIiwicmVtb3ZlRWxlbWVudHMiLCJlbG1zIiwiZm9yRWFjaCIsImVsZW0iLCJyZW1vdmUiLCJ0cmFuc2Zvcm1EYXRhIiwibGlzdCIsImpzb24iLCJ0cmVlIiwicHVzaCIsImUiLCJyZWYiLCJub2RlIiwiaXRlbUZvcm0iLCJxdWVyeVNlbGVjdG9yIiwicG9pbnRlciIsImlkIiwiZ2V0QXR0cmlidXRlIiwidHlwZSIsIm5hbWUiLCJ2YWx1ZSIsInRpdGxlIiwidXJsIiwiYXV0aCIsInRhcmdldCIsImNoaWxkRWxlbWVudENvdW50IiwiY2hpbGRyZW4iLCJBcnJheSIsImZyb20iLCJpIiwibm9kZU5hbWUiLCJ0b1VwcGVyQ2FzZSIsIkpTT04iLCJzdHJpbmdpZnkiLCJmaWxsVGVtcGxhdGUiLCJzdHIiLCJvYmoiLCJiZWZvcmVSZXBsYWNlIiwiYWZ0ZXJSZXBsYWNlIiwicmVwbGFjZSIsIndob2xlTWF0Y2giLCJrZXkiLCJzdWJzdGl0dXRpb24iLCIkIiwidHJpbSIsInVuZGVmaW5lZCIsImFkZE1lbnVJdGVtIiwiaXRlbSIsImNyZWF0ZUVsZW1lbnQiLCJjbGFzc0xpc3QiLCJjb250YWlucyIsImlubmVySFRNTCIsImRhdGEiLCJmb3JtIiwiY29udGVudCIsImFwcGVuZCIsImh0bWwiLCJ0ZW1wbGF0ZSIsImZpcnN0Q2hpbGQiLCJvbkFkZFN1Y2Nlc3MiLCJvbkFkZEZhaWx0dXJlIiwibGVuZ3RoIiwiYWRkRXZlbnRMaXN0ZW5lciIsImV2ZW50IiwiY29sbGFwc2VUb2dnbGVyIiwiY29uc29sZSIsImxvZyIsInNvdXJjZSIsImRhdGFzZXQiLCJzb3VyY2VfbmFtZSIsIm9ubHlfYXV0aCIsInRhcmdldF9ibGFuayIsInJlc2V0IiwiZmlsdGVyIiwicGFuZWwiLCJhZGRCdXR0b24iLCJzZWxlY3RBbGwiLCJpdGVtcyIsIm9uY2hhbmdlIiwicHJldmVudERlZmF1bHQiLCJyZW1vdmVBdHRyaWJ1dGUiLCJzZXRBdHRyaWJ1dGUiLCJvbmNsaWNrIiwiY2hlY2tlZCIsImNoZWNrYm94IiwiZmluZERyb3BwYWJsZSIsImF2YXRhciIsImhpZGRlbiIsInRvcCIsImNsaWVudFkiLCJjaGFuZ2VkVG91Y2hlcyIsInBhZ2VZIiwibGVmdCIsImNsaWVudFgiLCJwYWdlWCIsImVsZW1lbnRGcm9tUG9pbnQiLCJjbG9zZXN0Iiwib25Nb3VzZURvd24iLCJ3aGljaCIsImRvd25YIiwidGFyZ2V0VG91Y2hlcyIsImRvd25ZIiwib25Nb3VzZU1vdmUiLCJtb3ZlWCIsIm1vdmVZIiwiTWF0aCIsImFicyIsIm9sZCIsInBhcmVudCIsInBhcmVudE5vZGUiLCJuZXh0U2libGluZyIsInBvc2l0aW9uIiwiekluZGV4Iiwicm9sbGJhY2siLCJpbnNlcnRCZWZvcmUiLCJzdHlsZSIsImNvb3JkcyIsImJveCIsImdldEJvdW5kaW5nQ2xpZW50UmVjdCIsInBhZ2VZT2Zmc2V0IiwicGFnZVhPZmZzZXQiLCJnZXRDb29yZHMiLCJzaGlmdFgiLCJzaGlmdFkiLCJ3aWR0aCIsIm9mZnNldFdpZHRoIiwiaGVpZ2h0Iiwib2Zmc2V0SGVpZ2h0IiwiYWRkIiwiYm9keSIsImFwcGVuZENoaWxkIiwiZGVsZXRlQXJlYSIsInN0YXJ0RHJhZyIsImRyb3BwYWJsZSIsIml0ZW1UZXh0IiwiZHJvcHBhYmxlVGV4dCIsImNyZWF0ZVRleHROb2RlIiwiaXNFcXVhbE5vZGUiLCJhZnRlciIsImJlZm9yZSIsImNyZWF0ZURyb3BwYWJsZSIsIm9uTW91c2VVcCIsImRyb3BFbGVtIiwicmVwbGFjZVdpdGgiLCJlbXB0eUxpc3QiLCJlbXB0eSIsInNldFRpbWVvdXQiLCJvbkRyYWdFbmQiLCJvbkRyYWdDYW5jZWwiLCJmaW5pc2hEcmFnIiwib25tb3VzZWRvd24iLCJvbnRvdWNoc3RhcnQiLCJvbm1vdXNlbW92ZSIsIm9udG91Y2htb3ZlIiwib25tb3VzZXVwIiwib250b3VjaGVuZCIsImdldEl0ZW1zRGF0YSJdLCJtYXBwaW5ncyI6IkFBQUEsSUFBSUEsU0FBVyxJQUFJLFdBRWYsSUFBSUMsRUFBT0MsS0FDUEMsRUFBYSxHQUNiQyxFQUFXQyxTQUFTQyxlQUFlLFlBQ25DQyxFQUFnQkYsU0FBU0MsZUFBZSxhQUN4Q0UsRUFBY0gsU0FBU0MsZUFBZSxlQUN0Q0csRUFBU0QsRUFBWUUsaUJBQWlCLFVBQ3RDQyxFQUFlTixTQUFTQyxlQUFlLG9CQUN2Q00sRUFBZVAsU0FBU0MsZUFBZSxvQkFDdkNPLEVBQWtCUixTQUFTQyxlQUFlLG1CQUU5QyxNQUFNUSxFQUFrQkMsR0FBU0EsRUFBS0MsU0FBUUMsR0FBUUEsRUFBS0MsV0FFckRDLEVBQWdCLENBQUNDLEVBQU1DLEdBQU8sS0FDaEMsSUFBSUMsRUFBTyxHQVFYLFNBQVNDLEVBQUtDLEVBQUdDLEVBQUtDLEVBQU8sTUFFekIsSUFBSUMsRUFBV0gsRUFBRUksY0FBYyxrQkFDM0JDLEVBQVUsQ0FDVkMsR0FBSUgsRUFBU0ksYUFBYSxhQUFlLEtBQ3pDQyxLQUFNTCxFQUFTSSxhQUFhLGNBQWdCLEtBQzVDRSxLQUFNTixFQUFTQyxjQUFjLGlDQUFpQ00sT0FBUyxLQUN2RUMsTUFBT1IsRUFBU0MsY0FBYyxrQ0FBa0NNLE9BQVMsS0FDekVFLElBQUtULEVBQVNDLGNBQWMsZ0NBQWdDTSxPQUFTLEtBQ3JFRyxLQUFNVixFQUFTQyxjQUFjLHNDQUFzQ00sT0FBUyxLQUM1RUksT0FBUVgsRUFBU0MsY0FBYyx5Q0FBeUNNLE9BQVMsTUFHakZWLEVBQUVlLG9CQUNGVixFQUFRVyxTQUFXLEdBQ25CQyxNQUFNQyxLQUFLbEIsRUFBRWdCLFVBQVV4QixTQUFRMkIsSUFDdkJBLEVBQUVDLFdBQWFsQixFQUFLbUIsZUFDcEJKLE1B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Q3JCdkosRUFBU3FLLFdBQWFkLEVBRXRCekosS0FBS3dLLGFBQWUsV0FDaEIsT0FBT3ZKLEVBQWNaLElBR3pCTCxLQUFLK0osVUFBWSxTQUFTOUosRUFBWXlKLEtBQ3RDMUosS0FBS2dLLGFBQWUsU0FBUy9KLEtBRTdCRCxLQUFLdUUsYUFBZSxTQUFTdEUsRUFBWUksS0FDekNMLEtBQUt3RSxjQUFnQixTQUFTdkUsRUFBWUksTUFJOUNQLFNBQVNrSyxhQUFlLFNBQVUvSixHQUM5QixHQUFJQSxFQUFXK0QsS0FBTSxDQUNON0QsU0FBU0MsZUFBZSxlQUM5QnNCLGNBQWMsb0JBQW9CTSxNQUFRL0IsRUFBVytELE9BSWxFbEUsU0FBU2lLLFVBQVksU0FBVTlKLEVBQVl5SixHQUN2QyxHQUFJekosRUFBVytELEtBQU0sQ0FDTjdELFNBQVNDLGVBQWUsZUFDOUJzQixjQUFjLG9CQUFvQk0sTUFBUS9CLEVBQVcrRCxPQUlsRWxFLFNBQVN5RSxhQUFlLFNBQVV0RSxFQUFZSSxHQUMvQkYsU0FBU0MsZUFBZSxlQUM5QnNCLGNBQWMsb0JBQW9CTSxNQUFRaEMsS0FBS3dLIiwiZmlsZSI6Im1lbnUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgRHJhZ01lbnUgPSBuZXcgZnVuY3Rpb24oKSB7XG5cbiAgICB2YXIgc2VsZiA9IHRoaXM7XG4gICAgdmFyIGRyYWdPYmplY3QgPSB7fTtcbiAgICB2YXIgZHJhZ01lbnUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZHJhZ01lbnUnKTtcbiAgICB2YXIgbWVudUl0ZW1zTGlzdCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdtZW51SXRlbXMnKTtcbiAgICB2YXIgbWVudVNvdXJjZXMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbWVudVNvdXJjZXMnKTtcbiAgICB2YXIgcGFuZWxzID0gbWVudVNvdXJjZXMucXVlcnlTZWxlY3RvckFsbChcIi5wYW5lbFwiKTtcbiAgICB2YXIgZm9ybVRlbXBsYXRlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2l0ZW1Gb3JtVGVtcGxhdGUnKTtcbiAgICB2YXIgaXRlbVRlbXBsYXRlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ21lbnVJdGVtVGVtcGxhdGUnKTtcbiAgICB2YXIgYWRkTWVudUl0ZW1Gb3JtID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2FkZE1lbnVJdGVtRm9ybScpO1xuXG4gICAgY29uc3QgcmVtb3ZlRWxlbWVudHMgPSAoZWxtcykgPT4gZWxtcy5mb3JFYWNoKGVsZW0gPT4gZWxlbS5yZW1vdmUoKSk7XG5cbiAgICBjb25zdCB0cmFuc2Zvcm1EYXRhID0gKGxpc3QsIGpzb24gPSB0cnVlKSA9PiB7XG4gICAgICAgIGxldCB0cmVlID0gW107XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqINCd0LDQv9C+0LvQvdC10L3QuNC1INC00LXRgNC10LLQsCDQt9C90LDRh9C10L3QuNGP0LzQuFxuICAgICAgICAgKlxuICAgICAgICAgKiBAcGFyYW0ge0hUTUxMSUVsZW1lbnR9IGUgICBMSS3RjdC70LXQvNC10L3RgiDRgSBkYXRhLWlkXG4gICAgICAgICAqIEBwYXJhbSB7QXJyYXl9ICAgICAgICAgcmVmINCh0YHRi9C70LrQsCDQvdCwINC00LXRgNC10LLQviwg0LrRg9C00LAg0LTQvtCx0LDQstC70Y/RgtGMINGB0LLQvtC50YHRgtCy0LBcbiAgICAgICAgICovXG4gICAgICAgIGZ1bmN0aW9uIHB1c2goZSwgcmVmLCBub2RlID0gJ1VMJykge1xuXG4gICAgICAgICAgICBsZXQgaXRlbUZvcm0gPSBlLnF1ZXJ5U2VsZWN0b3IoJ2Zvcm1bZGF0YS1rZXldJyk7XG4gICAgICAgICAgICBsZXQgcG9pbnRlciA9IHsgLy8g0JHQtdGA0ZHQvCDQsNGC0YDQuNCx0YPRgiBpZCDRjdC70LXQvNC10L3RgtCwXG4gICAgICAgICAgICAgICAgaWQ6IGl0ZW1Gb3JtLmdldEF0dHJpYnV0ZSgnZGF0YS1rZXknKSB8fCBudWxsLFxuICAgICAgICAgICAgICAgIHR5cGU6IGl0ZW1Gb3JtLmdldEF0dHJpYnV0ZSgnZGF0YS10eXBlJykgfHwgbnVsbCxcbiAgICAgICAgICAgICAgICBuYW1lOiBpdGVtRm9ybS5xdWVyeVNlbGVjdG9yKCdpbnB1dFtuYW1lPVwiTWVudUl0ZW1zW25hbWVdXCJdJykudmFsdWUgfHwgbnVsbCxcbiAgICAgICAgICAgICAgICB0aXRsZTogaXRlbUZvcm0ucXVlcnlTZWxlY3RvcignaW5wdXRbbmFtZT1cIk1lbnVJdGVtc1t0aXRsZV1cIl0nKS52YWx1ZSB8fCBudWxsLFxuICAgICAgICAgICAgICAgIHVybDogaXRlbUZvcm0ucXVlcnlTZWxlY3RvcignaW5wdXRbbmFtZT1cIk1lbnVJdGVtc1t1cmxdXCJdJykudmFsdWUgfHwgbnVsbCxcbiAgICAgICAgICAgICAgICBhdXRoOiBpdGVtRm9ybS5xdWVyeVNlbGVjdG9yKCdpbnB1dFtuYW1lPVwiTWVudUl0ZW1zW29ubHlfYXV0aF1cIl0nKS52YWx1ZSB8fCBudWxsLFxuICAgICAgICAgICAgICAgIHRhcmdldDogaXRlbUZvcm0ucXVlcnlTZWxlY3RvcignaW5wdXRbbmFtZT1cIk1lbnVJdGVtc1t0YXJnZXRfYmxhbmtdXCJdJykudmFsdWUgfHwgbnVsbCxcbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIGlmIChlLmNoaWxkRWxlbWVudENvdW50KSB7IC8vINCV0YHQu9C4INC10YHRgtGMINC/0L7RgtC+0LzQutC4XG4gICAgICAgICAgICAgICAgcG9pbnRlci5jaGlsZHJlbiA9IFtdOyAvLyDQodC+0LfQtNCw0ZHQvCDRgdCy0L7QudGB0YLQstC+INC00LvRjyDQvdC40YVcbiAgICAgICAgICAgICAgICBBcnJheS5mcm9tKGUuY2hpbGRyZW4pLmZvckVhY2goaSA9PiB7IC8vINCf0LXRgNC10LHQuNGA0LDQtdC8Li4uINGF0LwuLi4g0LTQtdGC0LXQuSAo0L/QviDQutC+0YHRgtC+0YfQutCw0LwhKVxuICAgICAgICAgICAgICAgICAgICBpZiAoaS5ub2RlTmFtZSA9PT0gbm9kZS50b1VwcGVyQ2FzZSgpKSB7IC8vINCV0YHQu9C4INC10YHRgtGMINC10YnRkSDQvtC00LjQvSDQutC+0L3RgtC10LnQvdC10YAgVUwsINC/0LXRgNC10LHQuNGA0LDQtdC8INC10LPQvlxuICAgICAgICAgICAgICAgICAgICAgICAgQXJyYXkuZnJvbShpLmNoaWxkcmVuKS5mb3JFYWNoKGUgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHB1c2goZSwgcG9pbnRlci5jaGlsZHJlbik7IC8vINCS0YvQt9GL0LLQsNC10LwgcHVzaCDQvdCwINC90L7QstGL0YUgbGksINC90L4g0YHRgdGL0LvQutCwINC90LAg0LTRgNC10LLQviDRgtC10L/QtdGA0YwgLSDRjdGC0L4g0LzQsNGB0YHQuNCyIGNoaWxkcmVuINGD0LrQsNC30LDRgtC10LvRj1xuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmVmLnB1c2gocG9pbnRlcik7XG4gICAgICAgIH1cblxuICAgICAgICAvLyDQn9GA0L7RhdC+0LTQuNC80YHRjyDQv9C+INCy0YHQtdC8IGxpINC/0LXRgNC10LTQsNC90L3QvtCz0L4gdWxcbiAgICAgICAgQXJyYXkuZnJvbShsaXN0LmNoaWxkcmVuKS5mb3JFYWNoKGUgPT4ge1xuICAgICAgICAgICAgcHVzaChlLCB0cmVlLCAnVUwnKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgcmV0dXJuIGpzb24gPyBKU09OLnN0cmluZ2lmeSh0cmVlKSA6IHRyZWU7XG4gICAgfVxuXG4gICAgY29uc3QgdG9XcmFwID0gKGVsZW0sIHdyYXBwZXIpID0+IHtcbiAgICAgICAgd3JhcHBlciA9IHdyYXBwZXIgfHwgZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgIGVsZW0ucGFyZW50Tm9kZS5hcHBlbmRDaGlsZCh3cmFwcGVyKTtcbiAgICAgICAgcmV0dXJuIHdyYXBwZXIuYXBwZW5kQ2hpbGQoZWxlbSk7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIEBwYXJhbSB7U3RyaW5nfSBIVE1MIHJlcHJlc2VudGluZyBhIHNpbmdsZSBlbGVtZW50XG4gICAgICogQHJldHVybiB7RWxlbWVudH1cbiAgICAgKi9cbiAgICBjb25zdCBodG1sVG9FbGVtZW50ID0gKGh0bWwpID0+IHtcbiAgICAgICAgdmFyIHRlbXBsYXRlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndGVtcGxhdGUnKTtcbiAgICAgICAgaHRtbCA9IGh0bWwudHJpbSgpOyAvLyBOZXZlciByZXR1cm4gYSB0ZXh0IG5vZGUgb2Ygd2hpdGVzcGFjZSBhcyB0aGUgcmVzdWx0XG4gICAgICAgIHRlbXBsYXRlLmlubmVySFRNTCA9IGh0bWw7XG4gICAgICAgIHJldHVybiB0ZW1wbGF0ZS5jb250ZW50LmZpcnN0Q2hpbGQ7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQHBhcmFtIHtTdHJpbmd9IEhUTUwgcmVwcmVzZW50aW5nIGFueSBudW1iZXIgb2Ygc2libGluZyBlbGVtZW50c1xuICAgICAqIEByZXR1cm4ge05vZGVMaXN0fVxuICAgICAqL1xuICAgIGNvbnN0IGh0bWxUb0VsZW1lbnRzID0gKGh0bWwpID0+IHtcbiAgICAgICAgdmFyIHRlbXBsYXRlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndGVtcGxhdGUnKTtcbiAgICAgICAgdGVtcGxhdGUuaW5uZXJIVE1MID0gaHRtbDtcbiAgICAgICAgcmV0dXJuIHRlbXBsYXRlLmNvbnRlbnQuY2hpbGROb2RlcztcbiAgICB9XG5cbiAgICBjb25zdCBmaWxsVGVtcGxhdGUgPSAoc3RyLCBvYmopID0+IHtcbiAgICAgICAgZG8ge1xuICAgICAgICAgICAgdmFyIGJlZm9yZVJlcGxhY2UgPSBzdHI7XG4gICAgICAgICAgICBzdHIgPSBzdHIucmVwbGFjZSgve3tcXHMqKFtefVxcc10rKVxccyp9fS9nLCBmdW5jdGlvbih3aG9sZU1hdGNoLCBrZXkpIHtcbiAgICAgICAgICAgICAgICB2YXIgc3Vic3RpdHV0aW9uID0gb2JqWyQudHJpbShrZXkpXTtcbiAgICAgICAgICAgICAgICByZXR1cm4gKHN1YnN0aXR1dGlvbiA9PT0gdW5kZWZpbmVkID8gd2hvbGVNYXRjaCA6IHN1YnN0aXR1dGlvbik7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHZhciBhZnRlclJlcGxhY2UgPSBzdHIgIT09IGJlZm9yZVJlcGxhY2U7XG4gICAgICAgIH0gd2hpbGUgKGFmdGVyUmVwbGFjZSk7XG5cbiAgICAgICAgcmV0dXJuIHN0cjtcbiAgICB9O1xuXG4gICAgY29uc3QgZ2V0Q29vcmRzID0gKGVsZW0pID0+IHtcbiAgICAgICAgbGV0IGJveCA9IGVsZW0uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICB0b3A6IGJveC50b3AgKyBwYWdlWU9mZnNldCxcbiAgICAgICAgICAgIGxlZnQ6IGJveC5sZWZ0ICsgcGFnZVhPZmZzZXRcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICB2YXIgYWRkTWVudUl0ZW0gPSAoaXRlbSkgPT4ge1xuICAgICAgICBpZiAobWVudUl0ZW1zTGlzdCAmJiBpdGVtVGVtcGxhdGUgJiYgJ2NvbnRlbnQnIGluIGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3RlbXBsYXRlJykpIHtcblxuICAgICAgICAgICAgaWYgKG1lbnVJdGVtc0xpc3QuY2xhc3NMaXN0LmNvbnRhaW5zKCduby1pdGVtcycpKSB7XG4gICAgICAgICAgICAgICAgbWVudUl0ZW1zTGlzdC5jbGFzc0xpc3QucmVtb3ZlKCduby1pdGVtcycpO1xuICAgICAgICAgICAgICAgIG1lbnVJdGVtc0xpc3QuaW5uZXJIVE1MID0gXCJcIjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgbGV0IGRhdGEgPSBpdGVtO1xuICAgICAgICAgICAgZGF0YS5mb3JtID0gZmlsbFRlbXBsYXRlKGZvcm1UZW1wbGF0ZS5pbm5lckhUTUwsIGRhdGEpO1xuXG4gICAgICAgICAgICBsZXQgY29udGVudCA9IGZpbGxUZW1wbGF0ZShpdGVtVGVtcGxhdGUuaW5uZXJIVE1MLCBkYXRhKTtcblxuICAgICAgICAgICAgbWVudUl0ZW1zTGlzdC5hcHBlbmQoaHRtbFRvRWxlbWVudChjb250ZW50KSk7XG4gICAgICAgICAgICByZXR1cm4gc2VsZi5vbkFkZFN1Y2Nlc3MoZHJhZ09iamVjdCwgbWVudUl0ZW1zTGlzdCk7XG5cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gc2VsZi5vbkFkZEZhaWx0dXJlKGRyYWdPYmplY3QsIG1lbnVJdGVtc0xpc3QpO1xuICAgIH07XG5cbiAgICBpZiAoYWRkTWVudUl0ZW1Gb3JtLmxlbmd0aCkge1xuICAgICAgICBsZXQgYWRkQnV0dG9uID0gYWRkTWVudUl0ZW1Gb3JtLnF1ZXJ5U2VsZWN0b3IoJ2J1dHRvbltkYXRhLXJlbD1cImFkZFwiXScpO1xuICAgICAgICBhZGRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChldmVudCkgPT4ge1xuXG4gICAgICAgICAgICBsZXQgY29sbGFwc2VUb2dnbGVyID0gbWVudVNvdXJjZXMucXVlcnlTZWxlY3RvcignI3NvdXJjZS1saW5rIGFbZGF0YS10b2dnbGU9XCJjb2xsYXBzZVwiXScpO1xuXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhjb2xsYXBzZVRvZ2dsZXIpO1xuXG4gICAgICAgICAgICBsZXQgaXRlbSA9IHtcbiAgICAgICAgICAgICAgICAnaWQnOiBudWxsLFxuICAgICAgICAgICAgICAgICdzb3VyY2UnOiBjb2xsYXBzZVRvZ2dsZXIuZGF0YXNldC50eXBlIHx8IG51bGwsXG4gICAgICAgICAgICAgICAgJ3NvdXJjZV9uYW1lJzogY29sbGFwc2VUb2dnbGVyLmRhdGFzZXQubmFtZSB8fCBudWxsLFxuICAgICAgICAgICAgICAgICduYW1lJzogYWRkTWVudUl0ZW1Gb3JtLnF1ZXJ5U2VsZWN0b3IoJ2lucHV0W25hbWU9XCJNZW51SXRlbXNbbmFtZV1cIl0nKS52YWx1ZSB8fCBmYWxzZSxcbiAgICAgICAgICAgICAgICAndGl0bGUnOiBhZGRNZW51SXRlbUZvcm0ucXVlcnlTZWxlY3RvcignaW5wdXRbbmFtZT1cIk1lbnVJdGVtc1t0aXRsZV1cIl0nKS52YWx1ZSB8fCBmYWxzZSxcbiAgICAgICAgICAgICAgICAndXJsJzogYWRkTWVudUl0ZW1Gb3JtLnF1ZXJ5U2VsZWN0b3IoJ2lucHV0W25hbWU9XCJNZW51SXRlbXNbdXJsXVwiXScpLnZhbHVlIHx8IGZhbHNlLFxuICAgICAgICAgICAgICAgICdvbmx5X2F1dGgnOiBhZGRNZW51SXRlbUZvcm0ucXVlcnlTZWxlY3RvcignaW5wdXRbbmFtZT1cIk1lbnVJdGVtc1tvbmx5X2F1dGhdXCJdJykudmFsdWUgfHwgZmFsc2UsXG4gICAgICAgICAgICAgICAgJ3RhcmdldF9ibGFuayc6IGFkZE1lbnVJdGVtRm9ybS5xdWVyeVNlbGVjdG9yKCdpbnB1dFtuYW1lPVwiTWVudUl0ZW1zW3RhcmdldF9ibGFua11cIl0nKS52YWx1ZSB8fCBmYWxzZSxcbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIGlmIChhZGRNZW51SXRlbShpdGVtKSlcbiAgICAgICAgICAgICAgICBhZGRNZW51SXRlbUZvcm0ucmVzZXQoKTtcblxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICB2YXIgc291cmNlc0xpc3QgPSBbLi4ucGFuZWxzXS5maWx0ZXIocGFuZWwgPT4ge1xuICAgICAgICBpZiAocGFuZWwuY2hpbGRyZW4ubGVuZ3RoKSB7XG5cbiAgICAgICAgICAgIGxldCBhZGRCdXR0b24gPSBwYW5lbC5xdWVyeVNlbGVjdG9yKCdidXR0b25bZGF0YS1yZWw9XCJhZGRcIl0nKTtcbiAgICAgICAgICAgIGxldCBzZWxlY3RBbGwgPSBwYW5lbC5xdWVyeVNlbGVjdG9yKCdpbnB1dFt0eXBlPVwiY2hlY2tib3hcIl1bbmFtZT1cInNlbGVjdC1hbGxcIl0nKTtcbiAgICAgICAgICAgIGxldCBpdGVtcyA9IHBhbmVsLnF1ZXJ5U2VsZWN0b3JBbGwoJy5zb3VyY2UtbGlzdCBpbnB1dFt0eXBlPVwiY2hlY2tib3hcIl0nKTtcblxuXG4gICAgICAgICAgICBpZiAoYWRkQnV0dG9uICYmIGl0ZW1zKSB7XG5cbiAgICAgICAgICAgICAgICBpdGVtcy5mb3JFYWNoKGl0ZW0gPT4ge1xuICAgICAgICAgICAgICAgICAgICBpdGVtLm9uY2hhbmdlID0gKGV2ZW50KSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHBhbmVsLnF1ZXJ5U2VsZWN0b3JBbGwoJ2lucHV0W3R5cGU9XCJjaGVja2JveFwiXTpjaGVja2VkOm5vdChbbmFtZT1cInNlbGVjdC1hbGxcIl0pJykubGVuZ3RoKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFkZEJ1dHRvbi5yZW1vdmVBdHRyaWJ1dGUoJ2Rpc2FibGVkJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBlbHNlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYWRkQnV0dG9uLnNldEF0dHJpYnV0ZSgnZGlzYWJsZWQnLCB0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgYWRkQnV0dG9uLm9uY2xpY2sgPSAoZXZlbnQpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgICAgICAgbGV0IHNvdXJjZXNJdGVtcyA9IFsuLi5pdGVtc10uZmlsdGVyKGl0ZW0gPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGl0ZW0uY2hlY2tlZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFkZE1lbnVJdGVtKGl0ZW0uZGF0YXNldCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgICAgIGl0ZW1zLmZvckVhY2goY2hlY2tib3ggPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgY2hlY2tib3guY2hlY2tlZCA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChzZWxlY3RBbGwgJiYgaXRlbXMpIHtcbiAgICAgICAgICAgICAgICBzZWxlY3RBbGwub25jaGFuZ2UgPSAoZXZlbnQpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgICAgICAgbGV0IHRhcmdldCA9IGV2ZW50LnRhcmdldC5jaGVja2VkO1xuICAgICAgICAgICAgICAgICAgICBpdGVtcy5mb3JFYWNoKGNoZWNrYm94ID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0YXJnZXQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGVja2JveC5jaGVja2VkID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hlY2tib3guY2hlY2tlZCA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgY2hlY2tib3gub25jaGFuZ2UoZXZlbnQpO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9KTtcblxuXG4gICAgdmFyIGNyZWF0ZURyb3BwYWJsZSA9IChlKSA9PiB7XG4gICAgICAgIGxldCB0b3AgPSBlLmNsaWVudFkgfHwgZS50YXJnZXRUb3VjaGVzWzBdLnBhZ2VZO1xuICAgICAgICBsZXQgbGVmdCA9IGUuY2xpZW50WCB8fCBlLnRhcmdldFRvdWNoZXNbMF0ucGFnZVg7XG4gICAgICAgIGxldCBlbGVtID0gZG9jdW1lbnQuZWxlbWVudEZyb21Qb2ludChsZWZ0LCB0b3ApO1xuICAgICAgICBsZXQgZHJvcHBhYmxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgIGRyb3BwYWJsZS5jbGFzc0xpc3QuYWRkKCdkcm9wcGFibGUnKTtcblxuICAgICAgICBpZiAoKGRyYWdPYmplY3QuYXZhdGFyLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLmxlZnQgLSBlbGVtLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLmxlZnQpID49IChkcmFnT2JqZWN0LmF2YXRhci5vZmZzZXRXaWR0aCowLjEpKVxuICAgICAgICAgICAgZHJvcHBhYmxlLmNsYXNzTGlzdC5hZGQoJ3N1Yi1pdGVtJyk7XG4gICAgICAgIGVsc2VcbiAgICAgICAgICAgIGRyb3BwYWJsZS5jbGFzc0xpc3QucmVtb3ZlKCdzdWItaXRlbScpO1xuXG4gICAgICAgIGxldCBpdGVtVGV4dCA9IGRyYWdPYmplY3QuYXZhdGFyLnF1ZXJ5U2VsZWN0b3IoJy5wYW5lbC10aXRsZSBhW2RhdGEtdG9nZ2xlPVwiY29sbGFwc2VcIl0nKS5kYXRhc2V0WyduYW1lJ107XG4gICAgICAgIGxldCBkcm9wcGFibGVUZXh0ID0gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoaXRlbVRleHQudHJpbSgpKTtcbiAgICAgICAgZHJvcHBhYmxlLmFwcGVuZENoaWxkKGRyb3BwYWJsZVRleHQpO1xuXG4gICAgICAgIGRyb3BwYWJsZS5zdHlsZS53aWR0aCA9IGRyYWdPYmplY3QuYXZhdGFyLm9mZnNldFdpZHRoICsgJ3B4JztcbiAgICAgICAgZHJvcHBhYmxlLnN0eWxlLmhlaWdodCA9IGRyYWdPYmplY3QuYXZhdGFyLm9mZnNldEhlaWdodCArICdweCc7XG5cbiAgICAgICAgaWYgKCFkcm9wcGFibGUuaXNFcXVhbE5vZGUoZHJhZ09iamVjdC5kcm9wcGFibGUpKSB7XG4gICAgICAgICAgICByZW1vdmVFbGVtZW50cyhtZW51SXRlbXNMaXN0LnF1ZXJ5U2VsZWN0b3JBbGwoXCIuZHJvcHBhYmxlOm5vdCguZGVsZXRlLWFyZWEpXCIpKTtcbiAgICAgICAgICAgIGRyYWdPYmplY3QuZHJvcHBhYmxlID0gbnVsbDtcbiAgICAgICAgfVxuICAgICAgICBkcmFnT2JqZWN0LmRyb3BwYWJsZSA9IGRyb3BwYWJsZTtcblxuICAgICAgICBsZXQgdGFyZ2V0ID0gZWxlbS5jbG9zZXN0KCcuZHJhZ2dhYmxlJyk7XG5cbiAgICAgICAgaWYgKHRhcmdldCAmJiB0eXBlb2YgdGFyZ2V0ICE9PSBcInVuZGVmaW5lZFwiKSB7XG5cbiAgICAgICAgICAgIC8vY29uc29sZS5sb2coJ3RhcmdldCcsIHRhcmdldCk7XG5cbiAgICAgICAgICAgIHJlbW92ZUVsZW1lbnRzKG1lbnVJdGVtc0xpc3QucXVlcnlTZWxlY3RvckFsbChcIi5kcm9wcGFibGU6bm90KC5kZWxldGUtYXJlYSlcIikpO1xuXG4gICAgICAgICAgICBsZXQgdG9wID0gZS5jbGllbnRZIHx8IGUudGFyZ2V0VG91Y2hlc1swXS5wYWdlWTtcbiAgICAgICAgICAgIGxldCBsZWZ0ID0gZS5jbGllbnRYIHx8IGUudGFyZ2V0VG91Y2hlc1swXS5wYWdlWDtcbiAgICAgICAgICAgIGlmICh0b3AgPj0gKHRhcmdldC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS50b3AgKyAodGFyZ2V0Lm9mZnNldEhlaWdodC8xLjUpKSkge1xuXG5cbiAgICAgICAgICAgICAgICBpZiAoKGRyYWdPYmplY3QuYXZhdGFyLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLmxlZnQgLSBlbGVtLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLmxlZnQpID49IChkcmFnT2JqZWN0LmF2YXRhci5vZmZzZXRXaWR0aCowLjEpKVxuICAgICAgICAgICAgICAgICAgICB0YXJnZXQucXVlcnlTZWxlY3RvcignLmNvbGxhcHNlJykuYWZ0ZXIoZHJvcHBhYmxlKTtcbiAgICAgICAgICAgICAgICBlbHNlXG4gICAgICAgICAgICAgICAgICAgIHRhcmdldC5hZnRlcihkcm9wcGFibGUpO1xuXG4gICAgICAgICAgICAgICAgaWYgKHRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoJ3N1Yi1pdGVtJykpXG4gICAgICAgICAgICAgICAgICAgIGRyb3BwYWJsZS5jbGFzc0xpc3QuYWRkKCdzdWItaXRlbScpO1xuXG4gICAgICAgICAgICAgICAgLy9jb25zb2xlLmxvZygnYWZ0ZXInKTtcblxuICAgICAgICAgICAgfSBlbHNlIGlmICh0b3AgPCAodGFyZ2V0LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLnRvcCArICh0YXJnZXQub2Zmc2V0SGVpZ2h0LzEuNSkpKSB7XG5cbiAgICAgICAgICAgICAgICBpZiAoKGRyYWdPYmplY3QuYXZhdGFyLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLmxlZnQgLSBlbGVtLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLmxlZnQpID49IChkcmFnT2JqZWN0LmF2YXRhci5vZmZzZXRXaWR0aCowLjEpKVxuICAgICAgICAgICAgICAgICAgICB0YXJnZXQucXVlcnlTZWxlY3RvcignLmNvbGxhcHNlJykuYWZ0ZXIoZHJvcHBhYmxlKTtcbiAgICAgICAgICAgICAgICBlbHNlXG4gICAgICAgICAgICAgICAgICAgIHRhcmdldC5iZWZvcmUoZHJvcHBhYmxlKTtcblxuICAgICAgICAgICAgICAgIGlmIChkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbWVudUl0ZW1zJykuZmlyc3RDaGlsZC5pc0VxdWFsTm9kZShkcm9wcGFibGUpKVxuICAgICAgICAgICAgICAgICAgICBkcm9wcGFibGUuY2xhc3NMaXN0LnJlbW92ZSgnc3ViLWl0ZW0nKTtcblxuICAgICAgICAgICAgICAgIGlmICh0YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKCdzdWItaXRlbScpKSB7XG4gICAgICAgICAgICAgICAgICAgIGRyb3BwYWJsZS5yZW1vdmUoKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIC8vY29uc29sZS5sb2coJ2JlZm9yZScpO1xuXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGRyYWdPYmplY3QuYXZhdGFyLnN0eWxlLndpZHRoID0gZHJvcHBhYmxlLm9mZnNldFdpZHRoICsgJ3B4JztcbiAgICAgICAgICAgIGRyYWdPYmplY3QuYXZhdGFyLnN0eWxlLmhlaWdodCA9IGRyb3BwYWJsZS5vZmZzZXRIZWlnaHQgKyAncHgnO1xuICAgICAgICB9XG4gICAgfVxuICAgIHZhciBjcmVhdGVBdmF0YXIgPSAoZSkgPT4ge1xuXG4gICAgICAgIC8vINC30LDQv9C+0LzQvdC40YLRjCDRgdGC0LDRgNGL0LUg0YHQstC+0LnRgdGC0LLQsCwg0YfRgtC+0LHRiyDQstC10YDQvdGD0YLRjNGB0Y8g0Log0L3QuNC8INC/0YDQuCDQvtGC0LzQtdC90LUg0L/QtdGA0LXQvdC+0YHQsFxuICAgICAgICB2YXIgYXZhdGFyID0gZHJhZ09iamVjdC5lbGVtO1xuICAgICAgICB2YXIgb2xkID0ge1xuICAgICAgICAgICAgcGFyZW50OiBhdmF0YXIucGFyZW50Tm9kZSxcbiAgICAgICAgICAgIG5leHRTaWJsaW5nOiBhdmF0YXIubmV4dFNpYmxpbmcsXG4gICAgICAgICAgICBwb3NpdGlvbjogYXZhdGFyLnBvc2l0aW9uIHx8ICcnLFxuICAgICAgICAgICAgbGVmdDogYXZhdGFyLmxlZnQgfHwgJycsXG4gICAgICAgICAgICB0b3A6IGF2YXRhci50b3AgfHwgJycsXG4gICAgICAgICAgICB6SW5kZXg6IGF2YXRhci56SW5kZXggfHwgJydcbiAgICAgICAgfTtcblxuICAgICAgICAvLyDRhNGD0L3QutGG0LjRjyDQtNC70Y8g0L7RgtC80LXQvdGLINC/0LXRgNC10L3QvtGB0LBcbiAgICAgICAgYXZhdGFyLnJvbGxiYWNrID0gKCkgPT4ge1xuICAgICAgICAgICAgb2xkLnBhcmVudC5pbnNlcnRCZWZvcmUoYXZhdGFyLCBvbGQubmV4dFNpYmxpbmcpO1xuICAgICAgICAgICAgYXZhdGFyLnN0eWxlLnBvc2l0aW9uID0gb2xkLnBvc2l0aW9uO1xuICAgICAgICAgICAgYXZhdGFyLnN0eWxlLmxlZnQgPSBvbGQubGVmdDtcbiAgICAgICAgICAgIGF2YXRhci5zdHlsZS50b3AgPSBvbGQudG9wO1xuICAgICAgICAgICAgYXZhdGFyLnN0eWxlLnpJbmRleCA9IG9sZC56SW5kZXg7XG4gICAgICAgICAgICAvL2NvbnNvbGUubG9nKCdEcmFnIGNhbmNlbCwgcm9sbGJhY2snKTtcbiAgICAgICAgICAgIC8qc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuZHJvcHBhYmxlLmRlbGV0ZS1hcmVhJykuY2xhc3NMaXN0LnJlbW92ZSgnc2hvdycpO1xuICAgICAgICAgICAgfSwgNTAwKTsqL1xuICAgICAgICB9O1xuXG4gICAgICAgIHJldHVybiBhdmF0YXI7XG4gICAgfVxuICAgIHZhciBzdGFydERyYWcgPSAoZSkgPT4ge1xuICAgICAgICAvL2NvbnNvbGUubG9nKCdzdGFydERyYWcnKTtcblxuICAgICAgICBsZXQgYXZhdGFyID0gZHJhZ09iamVjdC5hdmF0YXI7XG4gICAgICAgIGF2YXRhci5zdHlsZS53aWR0aCA9IGRyYWdPYmplY3QuYXZhdGFyLm9mZnNldFdpZHRoICsgJ3B4JztcbiAgICAgICAgYXZhdGFyLnN0eWxlLmhlaWdodCA9IGRyYWdPYmplY3QuYXZhdGFyLm9mZnNldEhlaWdodCArICdweCc7XG5cbiAgICAgICAgLy8g0LjQvdC40YbQuNC40YDQvtCy0LDRgtGMINC90LDRh9Cw0LvQviDQv9C10YDQtdC90L7RgdCwXG4gICAgICAgIGF2YXRhci5jbGFzc0xpc3QuYWRkKCdkcmFnLWluJyk7XG4gICAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoYXZhdGFyKTtcblxuICAgICAgICBsZXQgZGVsZXRlQXJlYSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZHJvcHBhYmxlLmRlbGV0ZS1hcmVhXCIpO1xuICAgICAgICBpZiAoZGVsZXRlQXJlYSlcbiAgICAgICAgICAgIGRlbGV0ZUFyZWEuY2xhc3NMaXN0LmFkZCgnc2hvdycpO1xuXG4gICAgfVxuICAgIHZhciBmaW5pc2hEcmFnID0gKGUpID0+IHtcbiAgICAgICAgLy9jb25zb2xlLmxvZygnZmluaXNoRHJhZycpO1xuXG4gICAgICAgIGxldCBhdmF0YXIgPSBkcmFnT2JqZWN0LmF2YXRhcjtcbiAgICAgICAgbGV0IGRyb3BFbGVtID0gZmluZERyb3BwYWJsZShlKTtcblxuICAgICAgICBpZiAoIWRyb3BFbGVtKVxuICAgICAgICAgICAgYXZhdGFyLnJvbGxiYWNrKCk7XG5cbiAgICAgICAgYXZhdGFyLnN0eWxlID0gJyc7XG4gICAgICAgIGF2YXRhci5jbGFzc0xpc3QucmVtb3ZlKCdkcmFnLWluJyk7XG5cbiAgICAgICAgbGV0IGRyb3BwYWJsZSA9IGRyYWdNZW51LnF1ZXJ5U2VsZWN0b3IoXCIuZHJvcHBhYmxlXCIpO1xuICAgICAgICBpZiAoZHJvcHBhYmxlLmNsYXNzTGlzdC5jb250YWlucygnZGVsZXRlLWFyZWEnKSkge1xuICAgICAgICAgICAgZHJhZ09iamVjdCA9IHt9O1xuICAgICAgICAgICAgYXZhdGFyLnJlbW92ZSgpO1xuICAgICAgICB9IGVsc2UgaWYgKGRyb3BwYWJsZS5jbGFzc0xpc3QuY29udGFpbnMoJ3N1Yi1pdGVtJykpIHtcblxuICAgICAgICAgICAgbGV0IGxpc3QgPSBkcm9wcGFibGUucGFyZW50Tm9kZS5xdWVyeVNlbGVjdG9yKFwidWxcIik7XG4gICAgICAgICAgICBpZiAoIWxpc3QpIHtcbiAgICAgICAgICAgICAgICBsaXN0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndWwnKTtcbiAgICAgICAgICAgICAgICBsaXN0LmNsYXNzTGlzdC5hZGQoJ21lbnUtaXRlbXMnKTtcbiAgICAgICAgICAgICAgICBsaXN0LnNldEF0dHJpYnV0ZSgncm9sZScsIFwidGFibGlzdFwiKTtcbiAgICAgICAgICAgICAgICBkcm9wcGFibGUucGFyZW50Tm9kZS5hcHBlbmRDaGlsZChsaXN0KTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgYXZhdGFyLmNsYXNzTGlzdC5hZGQoJ3N1Yi1pdGVtJyk7XG4gICAgICAgICAgICBkcm9wcGFibGUucmVwbGFjZVdpdGgoYXZhdGFyKTtcbiAgICAgICAgICAgIGxpc3QuYXBwZW5kQ2hpbGQoYXZhdGFyKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGF2YXRhci5jbGFzc0xpc3QucmVtb3ZlKCdzdWItaXRlbScpO1xuICAgICAgICAgICAgZHJvcHBhYmxlLnJlcGxhY2VXaXRoKGF2YXRhcik7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBzZWxlY3RzIGFsbCA8dWw+IGVsZW1lbnRzLCB0aGVuIGZpbHRlcnMgdGhlIGNvbGxlY3Rpb25cbiAgICAgICAgbGV0IGxpc3RzID0gbWVudUl0ZW1zTGlzdC5xdWVyeVNlbGVjdG9yQWxsKCd1bCcpO1xuICAgICAgICAvLyBrZWVwIG9ubHkgdGhvc2UgZWxlbWVudHMgd2l0aCBubyBjaGlsZC1lbGVtZW50c1xuICAgICAgICBsZXQgZW1wdHlMaXN0ID0gWy4uLmxpc3RzXS5maWx0ZXIoZWxlbSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gZWxlbS5jaGlsZHJlbi5sZW5ndGggPT09IDA7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIGZvciAobGV0IGVtcHR5IG9mIGVtcHR5TGlzdClcbiAgICAgICAgICAgIGVtcHR5LnJlbW92ZSgpO1xuXG4gICAgICAgIC8vZHJhZ09iamVjdC5kYXRhID0gdHJhbnNmb3JtRGF0YShtZW51SXRlbXNMaXN0LnF1ZXJ5U2VsZWN0b3IoXCIubWVudS1pdGVtc1wiKSk7XG4gICAgICAgIGRyYWdPYmplY3QuZGF0YSA9IHRyYW5zZm9ybURhdGEobWVudUl0ZW1zTGlzdCk7XG4gICAgICAgIHJlbW92ZUVsZW1lbnRzKG1lbnVJdGVtc0xpc3QucXVlcnlTZWxlY3RvckFsbChcIi5kcm9wcGFibGU6bm90KC5kZWxldGUtYXJlYSlcIikpO1xuXG4gICAgICAgIGxldCBkZWxldGVBcmVhID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5kcm9wcGFibGUuZGVsZXRlLWFyZWFcIik7XG4gICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICBpZiAoZGVsZXRlQXJlYSlcbiAgICAgICAgICAgICAgICBkZWxldGVBcmVhLmNsYXNzTGlzdC5yZW1vdmUoJ3Nob3cnKTtcbiAgICAgICAgfSwgNTAwKTtcblxuICAgICAgICBpZiAoIWRyb3BFbGVtKVxuICAgICAgICAgICAgc2VsZi5vbkRyYWdDYW5jZWwoZHJhZ09iamVjdCk7XG4gICAgICAgIGVsc2VcbiAgICAgICAgICAgIHNlbGYub25EcmFnRW5kKGRyYWdPYmplY3QsIGRyb3BFbGVtKTtcbiAgICB9XG4gICAgdmFyIGZpbmREcm9wcGFibGUgPSAoZSkgPT4ge1xuICAgICAgICAvLyDRgdC/0YDRj9GH0LXQvCDQv9C10YDQtdC90L7RgdC40LzRi9C5INGN0LvQtdC80LXQvdGCXG4gICAgICAgIGRyYWdPYmplY3QuYXZhdGFyLmhpZGRlbiA9IHRydWU7XG5cbiAgICAgICAgbGV0IHRvcCA9IGUuY2xpZW50WSB8fCBlLmNoYW5nZWRUb3VjaGVzWzBdLnBhZ2VZO1xuICAgICAgICBsZXQgbGVmdCA9IGUuY2xpZW50WCB8fCBlLmNoYW5nZWRUb3VjaGVzWzBdLnBhZ2VYO1xuXG4gICAgICAgIC8vINC/0L7Qu9GD0YfQuNGC0Ywg0YHQsNC80YvQuSDQstC70L7QttC10L3QvdGL0Lkg0Y3Qu9C10LzQtdC90YIg0L/QvtC0INC60YPRgNGB0L7RgNC+0Lwg0LzRi9GI0LhcbiAgICAgICAgbGV0IGVsZW0gPSBkb2N1bWVudC5lbGVtZW50RnJvbVBvaW50KGxlZnQsIHRvcCk7XG5cbiAgICAgICAgLy8g0L/QvtC60LDQt9Cw0YLRjCDQv9C10YDQtdC90L7RgdC40LzRi9C5INGN0LvQtdC80LXQvdGCINC+0LHRgNCw0YLQvdC+XG4gICAgICAgIGRyYWdPYmplY3QuYXZhdGFyLmhpZGRlbiA9IGZhbHNlO1xuXG4gICAgICAgIGlmIChlbGVtID09IG51bGwpIC8vINGC0LDQutC+0LUg0LLQvtC30LzQvtC20L3Qviwg0LXRgdC70Lgg0LrRg9GA0YHQvtGAINC80YvRiNC4IFwi0LLRi9C70LXRgtC10LtcIiDQt9CwINCz0YDQsNC90LjRhtGDINC+0LrQvdCwXG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcblxuICAgICAgICByZXR1cm4gZWxlbS5jbG9zZXN0KCcuZHJvcHBhYmxlJyk7XG4gICAgfVxuXG5cbiAgICB2YXIgb25Nb3VzZURvd24gPSAoZSkgPT4ge1xuXG4gICAgICAgIGlmIChlLnR5cGUgPT09IFwibW91c2Vkb3duXCIgJiYgZS53aGljaCAhPSAxKVxuICAgICAgICAgICAgcmV0dXJuO1xuXG4gICAgICAgIHZhciBlbGVtID0gZS50YXJnZXQuY2xvc2VzdCgnLmRyYWdnYWJsZScpO1xuICAgICAgICBpZiAoIWVsZW0pIHJldHVybjtcblxuICAgICAgICBkcmFnT2JqZWN0LmVsZW0gPSBlbGVtO1xuXG4gICAgICAgIC8vINC30LDQv9C+0LzQvdC40LwsINGH0YLQviDRjdC70LXQvNC10L3RgiDQvdCw0LbQsNGCINC90LAg0YLQtdC60YPRidC40YUg0LrQvtC+0YDQtNC40L3QsNGC0LDRhSBwYWdlWC9wYWdlWVxuICAgICAgICBkcmFnT2JqZWN0LmRvd25YID0gZS5wYWdlWCB8fCBlLnRhcmdldFRvdWNoZXNbMF0ucGFnZVg7XG4gICAgICAgIGRyYWdPYmplY3QuZG93blkgPSBlLnBhZ2VZIHx8IGUudGFyZ2V0VG91Y2hlc1swXS5wYWdlWTtcblxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIHZhciBvbk1vdXNlTW92ZSA9IChlKSA9PiB7XG4gICAgICAgIGlmICghZHJhZ09iamVjdC5lbGVtKSByZXR1cm47IC8vINGN0LvQtdC80LXQvdGCINC90LUg0LfQsNC20LDRglxuXG4gICAgICAgIGlmICghZHJhZ09iamVjdC5hdmF0YXIpIHsgLy8g0LXRgdC70Lgg0L/QtdGA0LXQvdC+0YEg0L3QtSDQvdCw0YfQsNGCLi4uXG5cbiAgICAgICAgICAgIGxldCBtb3ZlWCA9IDA7XG4gICAgICAgICAgICBsZXQgbW92ZVkgPSAwO1xuICAgICAgICAgICAgaWYgKGUudHlwZSA9PT0gXCJ0b3VjaG1vdmVcIikge1xuICAgICAgICAgICAgICAgIG1vdmVYID0gZS50YXJnZXRUb3VjaGVzWzBdLnBhZ2VYIC0gZHJhZ09iamVjdC5kb3duWDtcbiAgICAgICAgICAgICAgICBtb3ZlWSA9IGUudGFyZ2V0VG91Y2hlc1swXS5wYWdlWSAtIGRyYWdPYmplY3QuZG93blk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIG1vdmVYID0gZS5wYWdlWCAtIGRyYWdPYmplY3QuZG93blg7XG4gICAgICAgICAgICAgICAgbW92ZVkgPSBlLnBhZ2VZIC0gZHJhZ09iamVjdC5kb3duWTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy8g0LXRgdC70Lgg0LzRi9GI0Ywg0L/QtdGA0LXQtNCy0LjQvdGD0LvQsNGB0Ywg0LIg0L3QsNC20LDRgtC+0Lwg0YHQvtGB0YLQvtGP0L3QuNC4INC90LXQtNC+0YHRgtCw0YLQvtGH0L3QviDQtNCw0LvQtdC60L5cbiAgICAgICAgICAgIGlmIChNYXRoLmFicyhtb3ZlWCkgPCA1ICYmIE1hdGguYWJzKG1vdmVZKSA8IDUpXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuXG4gICAgICAgICAgICAvLyDQvdCw0YfQuNC90LDQtdC8INC/0LXRgNC10L3QvtGBXG4gICAgICAgICAgICBkcmFnT2JqZWN0LmF2YXRhciA9IGNyZWF0ZUF2YXRhcihlKTsgLy8g0YHQvtC30LTQsNGC0Ywg0LDQstCw0YLQsNGAXG4gICAgICAgICAgICBpZiAoIWRyYWdPYmplY3QuYXZhdGFyKSB7IC8vINC+0YLQvNC10L3QsCDQv9C10YDQtdC90L7RgdCwLCDQvdC10LvRjNC30Y8gXCLQt9Cw0YXQstCw0YLQuNGC0YxcIiDQt9CwINGN0YLRgyDRh9Cw0YHRgtGMINGN0LvQtdC80LXQvdGC0LBcbiAgICAgICAgICAgICAgICBkcmFnT2JqZWN0ID0ge307XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvLyDQsNCy0LDRgtCw0YAg0YHQvtC30LTQsNC9INGD0YHQv9C10YjQvdC+XG4gICAgICAgICAgICAvLyDRgdC+0LfQtNCw0YLRjCDQstGB0L/QvtC80L7Qs9Cw0YLQtdC70YzQvdGL0LUg0YHQstC+0LnRgdGC0LLQsCBzaGlmdFgvc2hpZnRZXG4gICAgICAgICAgICBsZXQgY29vcmRzID0gZ2V0Q29vcmRzKGRyYWdPYmplY3QuYXZhdGFyKTtcbiAgICAgICAgICAgIGRyYWdPYmplY3Quc2hpZnRYID0gZHJhZ09iamVjdC5kb3duWCAtIGNvb3Jkcy5sZWZ0O1xuICAgICAgICAgICAgZHJhZ09iamVjdC5zaGlmdFkgPSBkcmFnT2JqZWN0LmRvd25ZIC0gY29vcmRzLnRvcDtcblxuICAgICAgICAgICAgc3RhcnREcmFnKGUpOyAvLyDQvtGC0L7QsdGA0LDQt9C40YLRjCDQvdCw0YfQsNC70L4g0L/QtdGA0LXQvdC+0YHQsFxuICAgICAgICB9XG5cbiAgICAgICAgLy8g0L7RgtC+0LHRgNCw0LfQuNGC0Ywg0L/QtdGA0LXQvdC+0YEg0L7QsdGK0LXQutGC0LAg0L/RgNC4INC60LDQttC00L7QvCDQtNCy0LjQttC10L3QuNC4INC80YvRiNC4XG4gICAgICAgIGlmIChlLnR5cGUgPT09IFwidG91Y2htb3ZlXCIpIHtcbiAgICAgICAgICAgIGRyYWdPYmplY3QuYXZhdGFyLnN0eWxlLmxlZnQgPSAoZS5jaGFuZ2VkVG91Y2hlc1swXS5wYWdlWCAtIGRyYWdPYmplY3Quc2hpZnRYKSArICdweCc7XG4gICAgICAgICAgICBkcmFnT2JqZWN0LmF2YXRhci5zdHlsZS50b3AgPSAoZS5jaGFuZ2VkVG91Y2hlc1swXS5wYWdlWSAtIGRyYWdPYmplY3Quc2hpZnRZKSArICdweCc7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBkcmFnT2JqZWN0LmF2YXRhci5zdHlsZS5sZWZ0ID0gKGUucGFnZVggLSBkcmFnT2JqZWN0LnNoaWZ0WCkgKyAncHgnO1xuICAgICAgICAgICAgZHJhZ09iamVjdC5hdmF0YXIuc3R5bGUudG9wID0gKGUucGFnZVkgLSBkcmFnT2JqZWN0LnNoaWZ0WSkgKyAncHgnO1xuICAgICAgICB9XG5cbiAgICAgICAgY3JlYXRlRHJvcHBhYmxlKGUpO1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIHZhciBvbk1vdXNlVXAgPSAoZSkgPT4ge1xuICAgICAgICBpZiAoZHJhZ09iamVjdC5hdmF0YXIpIC8vINC10YHQu9C4INC/0LXRgNC10L3QvtGBINC40LTQtdGCXG4gICAgICAgICAgICBmaW5pc2hEcmFnKGUpO1xuXG4gICAgICAgIC8vINC/0LXRgNC10L3QvtGBINC70LjQsdC+INC90LUg0L3QsNGH0LjQvdCw0LvRgdGPLCDQu9C40LHQviDQt9Cw0LLQtdGA0YjQuNC70YHRj1xuICAgICAgICAvLyDQsiDQu9GO0LHQvtC8INGB0LvRg9GH0LDQtSDQvtGH0LjRgdGC0LjQvCBcItGB0L7RgdGC0L7Rj9C90LjQtSDQv9C10YDQtdC90L7RgdCwXCIgZHJhZ09iamVjdFxuICAgICAgICBkcmFnT2JqZWN0ID0ge307XG4gICAgfVxuXG5cbiAgICBkcmFnTWVudS5vbm1vdXNlZG93biA9IG9uTW91c2VEb3duO1xuICAgIGRyYWdNZW51Lm9udG91Y2hzdGFydCA9IG9uTW91c2VEb3duO1xuICAgIGRyYWdNZW51Lm9ubW91c2Vtb3ZlID0gb25Nb3VzZU1vdmU7XG4gICAgZHJhZ01lbnUub250b3VjaG1vdmUgPSBvbk1vdXNlTW92ZTtcbiAgICBkcmFnTWVudS5vbm1vdXNldXAgPSBvbk1vdXNlVXA7XG4gICAgZHJhZ01lbnUub250b3VjaGVuZCA9IG9uTW91c2VVcDtcblxuICAgIHRoaXMuZ2V0SXRlbXNEYXRhID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiB0cmFuc2Zvcm1EYXRhKG1lbnVJdGVtc0xpc3QpO1xuICAgIH07XG5cbiAgICB0aGlzLm9uRHJhZ0VuZCA9IGZ1bmN0aW9uKGRyYWdPYmplY3QsIGRyb3BFbGVtKSB7fTtcbiAgICB0aGlzLm9uRHJhZ0NhbmNlbCA9IGZ1bmN0aW9uKGRyYWdPYmplY3QpIHt9O1xuXG4gICAgdGhpcy5vbkFkZFN1Y2Nlc3MgPSBmdW5jdGlvbihkcmFnT2JqZWN0LCBtZW51SXRlbXNMaXN0KSB7fTtcbiAgICB0aGlzLm9uQWRkRmFpbHR1cmUgPSBmdW5jdGlvbihkcmFnT2JqZWN0LCBtZW51SXRlbXNMaXN0KSB7fTtcblxufVxuXG5EcmFnTWVudS5vbkRyYWdDYW5jZWwgPSBmdW5jdGlvbiAoZHJhZ09iamVjdCkge1xuICAgIGlmIChkcmFnT2JqZWN0LmRhdGEpIHtcbiAgICAgICAgbGV0IGZvcm0gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYWRkTWVudUZvcm0nKTtcbiAgICAgICAgZm9ybS5xdWVyeVNlbGVjdG9yKCdpbnB1dCNtZW51LWl0ZW1zJykudmFsdWUgPSBkcmFnT2JqZWN0LmRhdGE7XG4gICAgfVxufTtcblxuRHJhZ01lbnUub25EcmFnRW5kID0gZnVuY3Rpb24gKGRyYWdPYmplY3QsIGRyb3BFbGVtKSB7XG4gICAgaWYgKGRyYWdPYmplY3QuZGF0YSkge1xuICAgICAgICBsZXQgZm9ybSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhZGRNZW51Rm9ybScpO1xuICAgICAgICBmb3JtLnF1ZXJ5U2VsZWN0b3IoJ2lucHV0I21lbnUtaXRlbXMnKS52YWx1ZSA9IGRyYWdPYmplY3QuZGF0YTtcbiAgICB9XG59O1xuXG5EcmFnTWVudS5vbkFkZFN1Y2Nlc3MgPSBmdW5jdGlvbiAoZHJhZ09iamVjdCwgbWVudUl0ZW1zTGlzdCkge1xuICAgIGxldCBmb3JtID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2FkZE1lbnVGb3JtJyk7XG4gICAgZm9ybS5xdWVyeVNlbGVjdG9yKCdpbnB1dCNtZW51LWl0ZW1zJykudmFsdWUgPSB0aGlzLmdldEl0ZW1zRGF0YSgpO1xufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zjg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSW0xbGJuVXVhbk1pWFN3aWJtRnRaWE1pT2x0ZExDSnRZWEJ3YVc1bmN5STZJa0ZCUVVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQklpd2labWxzWlNJNkltMWxiblV1YW5NaUxDSnpiM1Z5WTJWelEyOXVkR1Z1ZENJNld5SjJZWElnUkhKaFowMWxiblVnUFNCdVpYY2dablZ1WTNScGIyNG9LU0I3WEc1Y2JpQWdJQ0IyWVhJZ2MyVnNaaUE5SUhSb2FYTTdYRzRnSUNBZ2RtRnlJR1J5WVdkUFltcGxZM1FnUFNCN2ZUdGNiaUFnSUNCMllYSWdaSEpoWjAxbGJuVWdQU0JrYjJOMWJXVnVkQzVuWlhSRmJHVnRaVzUwUW5sSlpDZ25aSEpoWjAxbGJuVW5LVHRjYmlBZ0lDQjJZWElnYldWdWRVbDBaVzF6VEdsemRDQTlJR1J2WTNWdFpXNTBMbWRsZEVWc1pXMWxiblJDZVVsa0tDZHRaVzUxU1hSbGJYTW5LVHRjYmlBZ0lDQjJZWElnYldWdWRWTnZkWEpqWlhNZ1BTQmtiMk4xYldWdWRDNW5aWFJGYkdWdFpXNTBRbmxKWkNnbmJXVnVkVk52ZFhKalpYTW5LVHRjYmlBZ0lDQjJZWElnY0dGdVpXeHpJRDBnYldWdWRWTnZkWEpqWlhNdWNYVmxjbmxUWld4bFkzUnZja0ZzYkNoY0lpNXdZVzVsYkZ3aUtUdGNiaUFnSUNCMllYSWdabTl5YlZSbGJYQnNZWFJsSUQwZ1pHOWpkVzFsYm5RdVoyVjBSV3hsYldWdWRFSjVTV1FvSjJsMFpXMUdiM0p0VkdWdGNHeGhkR1VuS1R0Y2JpQWdJQ0IyWVhJZ2FYUmxiVlJsYlhCc1lYUmxJRDBnWkc5amRXMWxiblF1WjJWMFJXeGxiV1Z1ZEVKNVNXUW9KMjFsYm5WSmRHVnRWR1Z0Y0d4aGRHVW5LVHRjYmlBZ0lDQjJZWElnWVdSa1RXVnVkVWwwWlcxR2IzSnRJRDBnWkc5amRXMWxiblF1WjJWMFJXeGxiV1Z1ZEVKNVNXUW9KMkZrWkUxbGJuVkpkR1Z0Um05eWJTY3BPMXh1WEc0Z0lDQWdZMjl1YzNRZ2NtVnRiM1psUld4bGJXVnVkSE1nUFNBb1pXeHRjeWtnUFQ0Z1pXeHRjeTVtYjNKRllXTm9LR1ZzWlcwZ1BUNGdaV3hsYlM1eVpXMXZkbVVvS1NrN1hHNWNiaUFnSUNCamIyNXpkQ0IwY21GdWMyWnZjbTFFWVhSaElEMGdLR3hwYzNRc0lHcHpiMjRnUFNCMGNuVmxLU0E5UGlCN1hHNGdJQ0FnSUNBZ0lHeGxkQ0IwY21WbElEMGdXMTA3WEc1Y2JpQWdJQ0FnSUNBZ0x5b3FYRzRnSUNBZ0lDQWdJQ0FxSU5DZDBMRFF2OUMrMEx2UXZkQzEwTDNRdU5DMUlOQzAwTFhSZ05DMTBMTFFzQ0RRdDlDOTBMRFJoOUMxMEwzUXVOR1AwTHpRdUZ4dUlDQWdJQ0FnSUNBZ0tseHVJQ0FnSUNBZ0lDQWdLaUJBY0dGeVlXMGdlMGhVVFV4TVNVVnNaVzFsYm5SOUlHVWdJQ0JNU1MzUmpkQzcwTFhRdk5DMTBMM1JnaURSZ1NCa1lYUmhMV2xrWEc0Z0lDQWdJQ0FnSUNBcUlFQndZWEpoYlNCN1FYSnlZWGw5SUNBZ0lDQWdJQ0FnY21WbUlOQ2gwWUhSaTlDNzBMclFzQ0RRdmRDd0lOQzAwTFhSZ05DMTBMTFF2aXdnMExyUmc5QzAwTEFnMExUUXZ0Q3gwTERRc3RDNzBZL1JndEdNSU5HQjBMTFF2dEM1MFlIUmd0Q3kwTEJjYmlBZ0lDQWdJQ0FnSUNvdlhHNGdJQ0FnSUNBZ0lHWjFibU4wYVc5dUlIQjFjMmdvWlN3Z2NtVm1MQ0J1YjJSbElEMGdKMVZNSnlrZ2UxeHVYRzRnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdhWFJsYlVadmNtMGdQU0JsTG5GMVpYSjVVMlZzWldOMGIzSW9KMlp2Y20xYlpHRjBZUzFyWlhsZEp5azdYRzRnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdjRzlwYm5SbGNpQTlJSHNnTHk4ZzBKSFF0ZEdBMFpIUXZDRFFzTkdDMFlEUXVOQ3gwWVBSZ2lCcFpDRFJqZEM3MExYUXZOQzEwTDNSZ3RDd1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXUTZJR2wwWlcxR2IzSnRMbWRsZEVGMGRISnBZblYwWlNnblpHRjBZUzFyWlhrbktTQjhmQ0J1ZFd4c0xGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUjVjR1U2SUdsMFpXMUdiM0p0TG1kbGRFRjBkSEpwWW5WMFpTZ25aR0YwWVMxMGVYQmxKeWtnZkh3Z2JuVnNiQ3hjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J1WVcxbE9pQnBkR1Z0Um05eWJTNXhkV1Z5ZVZObGJHVmpkRzl5S0NkcGJuQjFkRnR1WVcxbFBWd2lUV1Z1ZFVsMFpXMXpXMjVoYldWZFhDSmRKeWt1ZG1Gc2RXVWdmSHdnYm5Wc2JDeGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhWFJzWlRvZ2FYUmxiVVp2Y20wdWNYVmxjbmxUWld4bFkzUnZjaWduYVc1d2RYUmJibUZ0WlQxY0lrMWxiblZKZEdWdGMxdDBhWFJzWlYxY0lsMG5LUzUyWVd4MVpTQjhmQ0J1ZFd4c0xGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIVnliRG9nYVhSbGJVWnZjbTB1Y1hWbGNubFRaV3hsWTNSdmNpZ25hVzV3ZFhSYmJtRnRaVDFjSWsxbGJuVkpkR1Z0YzF0MWNteGRYQ0pkSnlrdWRtRnNkV1VnZkh3Z2JuVnNiQ3hjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JoZFhSb09pQnBkR1Z0Um05eWJTNXhkV1Z5ZVZObGJHVmpkRzl5S0NkcGJuQjFkRnR1WVcxbFBWd2lUV1Z1ZFVsMFpXMXpXMjl1YkhsZllYVjBhRjFjSWwwbktTNTJZV3gxWlNCOGZDQnVkV3hzTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSaGNtZGxkRG9nYVhSbGJVWnZjbTB1Y1hWbGNubFRaV3hsWTNSdmNpZ25hVzV3ZFhSYmJtRnRaVDFjSWsxbGJuVkpkR1Z0YzF0MFlYSm5aWFJmWW14aGJtdGRYQ0pkSnlrdWRtRnNkV1VnZkh3Z2JuVnNiQ3hjYmlBZ0lDQWdJQ0FnSUNBZ0lIMDdYRzVjYmlBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hsTG1Ob2FXeGtSV3hsYldWdWRFTnZkVzUwS1NCN0lDOHZJTkNWMFlIUXU5QzRJTkMxMFlIUmd0R01JTkMvMEw3Umd0QyswTHpRdXRDNFhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NHOXBiblJsY2k1amFHbHNaSEpsYmlBOUlGdGRPeUF2THlEUW9kQyswTGZRdE5DdzBaSFF2Q0RSZ2RDeTBMN1F1ZEdCMFlMUXN0QytJTkMwMEx2Ump5RFF2ZEM0MFlWY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCQmNuSmhlUzVtY205dEtHVXVZMmhwYkdSeVpXNHBMbVp2Y2tWaFkyZ29hU0E5UGlCN0lDOHZJTkNmMExYUmdOQzEwTEhRdU5HQTBMRFF0ZEM4TGk0dUlOR0YwTHd1TGk0ZzBMVFF0ZEdDMExYUXVTQW8wTC9RdmlEUXV0QyswWUhSZ3RDKzBZZlF1dEN3MEx3aEtWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2FTNXViMlJsVG1GdFpTQTlQVDBnYm05a1pTNTBiMVZ3Y0dWeVEyRnpaU2dwS1NCN0lDOHZJTkNWMFlIUXU5QzRJTkMxMFlIUmd0R01JTkMxMFluUmtTRFF2dEMwMExqUXZTRFF1dEMrMEwzUmd0QzEwTG5RdmRDMTBZQWdWVXdzSU5DLzBMWFJnTkMxMExIUXVOR0EwTERRdGRDOElOQzEwTFBRdmx4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnUVhKeVlYa3Vabkp2YlNocExtTm9hV3hrY21WdUtTNW1iM0pGWVdOb0tHVWdQVDRnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIQjFjMmdvWlN3Z2NHOXBiblJsY2k1amFHbHNaSEpsYmlrN0lDOHZJTkNTMFl2UXQ5R0wwTExRc05DMTBMd2djSFZ6YUNEUXZkQ3dJTkM5MEw3UXN0R0wwWVVnYkdrc0lOQzkwTDRnMFlIUmdkR0wwTHZRdXRDd0lOQzkwTEFnMExUUmdOQzEwTExRdmlEUmd0QzEwTC9RdGRHQTBZd2dMU0RSamRHQzBMNGcwTHpRc05HQjBZSFF1TkN5SUdOb2FXeGtjbVZ1SU5HRDBMclFzTkMzMExEUmd0QzEwTHZSajF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlNrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5S1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnSUNBZ0lDQWdjbVZtTG5CMWMyZ29jRzlwYm5SbGNpazdYRzRnSUNBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnSUNBdkx5RFFuOUdBMEw3UmhkQyswTFRRdU5DODBZSFJqeURRdjlDK0lOQ3kwWUhRdGRDOElHeHBJTkMvMExYUmdOQzEwTFRRc05DOTBMM1F2dEN6MEw0Z2RXeGNiaUFnSUNBZ0lDQWdRWEp5WVhrdVpuSnZiU2hzYVhOMExtTm9hV3hrY21WdUtTNW1iM0pGWVdOb0tHVWdQVDRnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdjSFZ6YUNobExDQjBjbVZsTENBblZVd25LVHRjYmlBZ0lDQWdJQ0FnZlNrN1hHNWNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlHcHpiMjRnUHlCS1UwOU9Mbk4wY21sdVoybG1lU2gwY21WbEtTQTZJSFJ5WldVN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnWTI5dWMzUWdkRzlYY21Gd0lEMGdLR1ZzWlcwc0lIZHlZWEJ3WlhJcElEMCtJSHRjYmlBZ0lDQWdJQ0FnZDNKaGNIQmxjaUE5SUhkeVlYQndaWElnZkh3Z1pHOWpkVzFsYm5RdVkzSmxZWFJsUld4bGJXVnVkQ2duWkdsMkp5azdYRzRnSUNBZ0lDQWdJR1ZzWlcwdWNHRnlaVzUwVG05a1pTNWhjSEJsYm1SRGFHbHNaQ2gzY21Gd2NHVnlLVHRjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJSGR5WVhCd1pYSXVZWEJ3Wlc1a1EyaHBiR1FvWld4bGJTazdYRzRnSUNBZ2ZUdGNibHh1SUNBZ0lDOHFLbHh1SUNBZ0lDQXFJRUJ3WVhKaGJTQjdVM1J5YVc1bmZTQklWRTFNSUhKbGNISmxjMlZ1ZEdsdVp5QmhJSE5wYm1kc1pTQmxiR1Z0Wlc1MFhHNGdJQ0FnSUNvZ1FISmxkSFZ5YmlCN1JXeGxiV1Z1ZEgxY2JpQWdJQ0FnS2k5Y2JpQWdJQ0JqYjI1emRDQm9kRzFzVkc5RmJHVnRaVzUwSUQwZ0tHaDBiV3dwSUQwK0lIdGNiaUFnSUNBZ0lDQWdkbUZ5SUhSbGJYQnNZWFJsSUQwZ1pHOWpkVzFsYm5RdVkzSmxZWFJsUld4bGJXVnVkQ2duZEdWdGNHeGhkR1VuS1R0Y2JpQWdJQ0FnSUNBZ2FIUnRiQ0E5SUdoMGJXd3VkSEpwYlNncE95QXZMeUJPWlhabGNpQnlaWFIxY200Z1lTQjBaWGgwSUc1dlpHVWdiMllnZDJocGRHVnpjR0ZqWlNCaGN5QjBhR1VnY21WemRXeDBYRzRnSUNBZ0lDQWdJSFJsYlhCc1lYUmxMbWx1Ym1WeVNGUk5UQ0E5SUdoMGJXdzdYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQjBaVzF3YkdGMFpTNWpiMjUwWlc1MExtWnBjbk4wUTJocGJHUTdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ0x5b3FYRzRnSUNBZ0lDb2dRSEJoY21GdElIdFRkSEpwYm1kOUlFaFVUVXdnY21Wd2NtVnpaVzUwYVc1bklHRnVlU0J1ZFcxaVpYSWdiMllnYzJsaWJHbHVaeUJsYkdWdFpXNTBjMXh1SUNBZ0lDQXFJRUJ5WlhSMWNtNGdlMDV2WkdWTWFYTjBmVnh1SUNBZ0lDQXFMMXh1SUNBZ0lHTnZibk4wSUdoMGJXeFViMFZzWlcxbGJuUnpJRDBnS0doMGJXd3BJRDArSUh0Y2JpQWdJQ0FnSUNBZ2RtRnlJSFJsYlhCc1lYUmxJRDBnWkc5amRXMWxiblF1WTNKbFlYUmxSV3hsYldWdWRDZ25kR1Z0Y0d4aGRHVW5LVHRjYmlBZ0lDQWdJQ0FnZEdWdGNHeGhkR1V1YVc1dVpYSklWRTFNSUQwZ2FIUnRiRHRjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJSFJsYlhCc1lYUmxMbU52Ym5SbGJuUXVZMmhwYkdST2IyUmxjenRjYmlBZ0lDQjlYRzVjYmlBZ0lDQmpiMjV6ZENCbWFXeHNWR1Z0Y0d4aGRHVWdQU0FvYzNSeUxDQnZZbW9wSUQwK0lIdGNiaUFnSUNBZ0lDQWdaRzhnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdkbUZ5SUdKbFptOXlaVkpsY0d4aFkyVWdQU0J6ZEhJN1hHNGdJQ0FnSUNBZ0lDQWdJQ0J6ZEhJZ1BTQnpkSEl1Y21Wd2JHRmpaU2d2ZTN0Y1hITXFLRnRlZlZ4Y2MxMHJLVnhjY3lwOWZTOW5MQ0JtZFc1amRHbHZiaWgzYUc5c1pVMWhkR05vTENCclpYa3BJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ2MzVmljM1JwZEhWMGFXOXVJRDBnYjJKcVd5UXVkSEpwYlNoclpYa3BYVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdLSE4xWW5OMGFYUjFkR2x2YmlBOVBUMGdkVzVrWldacGJtVmtJRDhnZDJodmJHVk5ZWFJqYUNBNklITjFZbk4wYVhSMWRHbHZiaWs3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlLVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIWmhjaUJoWm5SbGNsSmxjR3hoWTJVZ1BTQnpkSElnSVQwOUlHSmxabTl5WlZKbGNHeGhZMlU3WEc0Z0lDQWdJQ0FnSUgwZ2QyaHBiR1VnS0dGbWRHVnlVbVZ3YkdGalpTazdYRzVjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJSE4wY2p0Y2JpQWdJQ0I5TzF4dVhHNGdJQ0FnWTI5dWMzUWdaMlYwUTI5dmNtUnpJRDBnS0dWc1pXMHBJRDArSUh0Y2JpQWdJQ0FnSUNBZ2JHVjBJR0p2ZUNBOUlHVnNaVzB1WjJWMFFtOTFibVJwYm1kRGJHbGxiblJTWldOMEtDazdYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCMGIzQTZJR0p2ZUM1MGIzQWdLeUJ3WVdkbFdVOW1abk5sZEN4Y2JpQWdJQ0FnSUNBZ0lDQWdJR3hsWm5RNklHSnZlQzVzWldaMElDc2djR0ZuWlZoUFptWnpaWFJjYmlBZ0lDQWdJQ0FnZlR0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0IyWVhJZ1lXUmtUV1Z1ZFVsMFpXMGdQU0FvYVhSbGJTa2dQVDRnZTF4dUlDQWdJQ0FnSUNCcFppQW9iV1Z1ZFVsMFpXMXpUR2x6ZENBbUppQnBkR1Z0VkdWdGNHeGhkR1VnSmlZZ0oyTnZiblJsYm5RbklHbHVJR1J2WTNWdFpXNTBMbU55WldGMFpVVnNaVzFsYm5Rb0ozUmxiWEJzWVhSbEp5a3BJSHRjYmx4dUlDQWdJQ0FnSUNBZ0lDQWdhV1lnS0cxbGJuVkpkR1Z0YzB4cGMzUXVZMnhoYzNOTWFYTjBMbU52Ym5SaGFXNXpLQ2R1YnkxcGRHVnRjeWNwS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JXVnVkVWwwWlcxelRHbHpkQzVqYkdGemMweHBjM1F1Y21WdGIzWmxLQ2R1YnkxcGRHVnRjeWNwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUcxbGJuVkpkR1Z0YzB4cGMzUXVhVzV1WlhKSVZFMU1JRDBnWENKY0lqdGNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHUmhkR0VnUFNCcGRHVnRPMXh1SUNBZ0lDQWdJQ0FnSUNBZ1pHRjBZUzVtYjNKdElEMGdabWxzYkZSbGJYQnNZWFJsS0dadmNtMVVaVzF3YkdGMFpTNXBibTVsY2toVVRVd3NJR1JoZEdFcE8xeHVYRzRnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdZMjl1ZEdWdWRDQTlJR1pwYkd4VVpXMXdiR0YwWlNocGRHVnRWR1Z0Y0d4aGRHVXVhVzV1WlhKSVZFMU1MQ0JrWVhSaEtUdGNibHh1SUNBZ0lDQWdJQ0FnSUNBZ2JXVnVkVWwwWlcxelRHbHpkQzVoY0hCbGJtUW9hSFJ0YkZSdlJXeGxiV1Z1ZENoamIyNTBaVzUwS1NrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdjMlZzWmk1dmJrRmtaRk4xWTJObGMzTW9aSEpoWjA5aWFtVmpkQ3dnYldWdWRVbDBaVzF6VEdsemRDazdYRzVjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnYzJWc1ppNXZia0ZrWkVaaGFXeDBkWEpsS0dSeVlXZFBZbXBsWTNRc0lHMWxiblZKZEdWdGMweHBjM1FwTzF4dUlDQWdJSDA3WEc1Y2JpQWdJQ0JwWmlBb1lXUmtUV1Z1ZFVsMFpXMUdiM0p0TG14bGJtZDBhQ2tnZTF4dUlDQWdJQ0FnSUNCc1pYUWdZV1JrUW5WMGRHOXVJRDBnWVdSa1RXVnVkVWwwWlcxR2IzSnRMbkYxWlhKNVUyVnNaV04wYjNJb0oySjFkSFJ2Ymx0a1lYUmhMWEpsYkQxY0ltRmtaRndpWFNjcE8xeHVJQ0FnSUNBZ0lDQmhaR1JDZFhSMGIyNHVZV1JrUlhabGJuUk1hWE4wWlc1bGNpaGNJbU5zYVdOclhDSXNJQ2hsZG1WdWRDa2dQVDRnZTF4dVhHNGdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1kyOXNiR0Z3YzJWVWIyZG5iR1Z5SUQwZ2JXVnVkVk52ZFhKalpYTXVjWFZsY25sVFpXeGxZM1J2Y2lnbkkzTnZkWEpqWlMxc2FXNXJJR0ZiWkdGMFlTMTBiMmRuYkdVOVhDSmpiMnhzWVhCelpWd2lYU2NwTzF4dVhHNGdJQ0FnSUNBZ0lDQWdJQ0JqYjI1emIyeGxMbXh2WnloamIyeHNZWEJ6WlZSdloyZHNaWElwTzF4dVhHNGdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2FYUmxiU0E5SUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBbmFXUW5PaUJ1ZFd4c0xGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDZHpiM1Z5WTJVbk9pQmpiMnhzWVhCelpWUnZaMmRzWlhJdVpHRjBZWE5sZEM1MGVYQmxJSHg4SUc1MWJHd3NYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdKM052ZFhKalpWOXVZVzFsSnpvZ1kyOXNiR0Z3YzJWVWIyZG5iR1Z5TG1SaGRHRnpaWFF1Ym1GdFpTQjhmQ0J1ZFd4c0xGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDZHVZVzFsSnpvZ1lXUmtUV1Z1ZFVsMFpXMUdiM0p0TG5GMVpYSjVVMlZzWldOMGIzSW9KMmx1Y0hWMFcyNWhiV1U5WENKTlpXNTFTWFJsYlhOYmJtRnRaVjFjSWwwbktTNTJZV3gxWlNCOGZDQm1ZV3h6WlN4Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBbmRHbDBiR1VuT2lCaFpHUk5aVzUxU1hSbGJVWnZjbTB1Y1hWbGNubFRaV3hsWTNSdmNpZ25hVzV3ZFhSYmJtRnRaVDFjSWsxbGJuVkpkR1Z0YzF0MGFYUnNaVjFjSWwwbktTNTJZV3gxWlNCOGZDQm1ZV3h6WlN4Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBbmRYSnNKem9nWVdSa1RXVnVkVWwwWlcxR2IzSnRMbkYxWlhKNVUyVnNaV04wYjNJb0oybHVjSFYwVzI1aGJXVTlYQ0pOWlc1MVNYUmxiWE5iZFhKc1hWd2lYU2NwTG5aaGJIVmxJSHg4SUdaaGJITmxMRnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ2R2Ym14NVgyRjFkR2duT2lCaFpHUk5aVzUxU1hSbGJVWnZjbTB1Y1hWbGNubFRaV3hsWTNSdmNpZ25hVzV3ZFhSYmJtRnRaVDFjSWsxbGJuVkpkR1Z0YzF0dmJteDVYMkYxZEdoZFhDSmRKeWt1ZG1Gc2RXVWdmSHdnWm1Gc2MyVXNYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdKM1JoY21kbGRGOWliR0Z1YXljNklHRmtaRTFsYm5WSmRHVnRSbTl5YlM1eGRXVnllVk5sYkdWamRHOXlLQ2RwYm5CMWRGdHVZVzFsUFZ3aVRXVnVkVWwwWlcxelczUmhjbWRsZEY5aWJHRnVhMTFjSWwwbktTNTJZV3gxWlNCOGZDQm1ZV3h6WlN4Y2JpQWdJQ0FnSUNBZ0lDQWdJSDA3WEc1Y2JpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoaFpHUk5aVzUxU1hSbGJTaHBkR1Z0S1NsY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaFpHUk5aVzUxU1hSbGJVWnZjbTB1Y21WelpYUW9LVHRjYmx4dUlDQWdJQ0FnSUNCOUtUdGNiaUFnSUNCOVhHNWNiaUFnSUNCMllYSWdjMjkxY21ObGMweHBjM1FnUFNCYkxpNHVjR0Z1Wld4elhTNW1hV3gwWlhJb2NHRnVaV3dnUFQ0Z2UxeHVJQ0FnSUNBZ0lDQnBaaUFvY0dGdVpXd3VZMmhwYkdSeVpXNHViR1Z1WjNSb0tTQjdYRzVjYmlBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JoWkdSQ2RYUjBiMjRnUFNCd1lXNWxiQzV4ZFdWeWVWTmxiR1ZqZEc5eUtDZGlkWFIwYjI1YlpHRjBZUzF5Wld3OVhDSmhaR1JjSWwwbktUdGNiaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnpaV3hsWTNSQmJHd2dQU0J3WVc1bGJDNXhkV1Z5ZVZObGJHVmpkRzl5S0NkcGJuQjFkRnQwZVhCbFBWd2lZMmhsWTJ0aWIzaGNJbDFiYm1GdFpUMWNJbk5sYkdWamRDMWhiR3hjSWwwbktUdGNiaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnBkR1Z0Y3lBOUlIQmhibVZzTG5GMVpYSjVVMlZzWldOMGIzSkJiR3dvSnk1emIzVnlZMlV0YkdsemRDQnBibkIxZEZ0MGVYQmxQVndpWTJobFkydGliM2hjSWwwbktUdGNibHh1WEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaaUFvWVdSa1FuVjBkRzl1SUNZbUlHbDBaVzF6S1NCN1hHNWNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBkR1Z0Y3k1bWIzSkZZV05vS0dsMFpXMGdQVDRnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBkR1Z0TG05dVkyaGhibWRsSUQwZ0tHVjJaVzUwS1NBOVBpQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmxkbVZ1ZEM1d2NtVjJaVzUwUkdWbVlYVnNkQ2dwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tIQmhibVZzTG5GMVpYSjVVMlZzWldOMGIzSkJiR3dvSjJsdWNIVjBXM1I1Y0dVOVhDSmphR1ZqYTJKdmVGd2lYVHBqYUdWamEyVmtPbTV2ZENoYmJtRnRaVDFjSW5ObGJHVmpkQzFoYkd4Y0lsMHBKeWt1YkdWdVozUm9LVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdGa1pFSjFkSFJ2Ymk1eVpXMXZkbVZCZEhSeWFXSjFkR1VvSjJScGMyRmliR1ZrSnlrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbGJITmxYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWVdSa1FuVjBkRzl1TG5ObGRFRjBkSEpwWW5WMFpTZ25aR2x6WVdKc1pXUW5MQ0IwY25WbEtUdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwcE8xeHVYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZV1JrUW5WMGRHOXVMbTl1WTJ4cFkyc2dQU0FvWlhabGJuUXBJRDArSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaWFpsYm5RdWNISmxkbVZ1ZEVSbFptRjFiSFFvS1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhOdmRYSmpaWE5KZEdWdGN5QTlJRnN1TGk1cGRHVnRjMTB1Wm1sc2RHVnlLR2wwWlcwZ1BUNGdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0dsMFpXMHVZMmhsWTJ0bFpDa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdGa1pFMWxiblZKZEdWdEtHbDBaVzB1WkdGMFlYTmxkQ2s3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMHBPMXh1WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbDBaVzF6TG1admNrVmhZMmdvWTJobFkydGliM2dnUFQ0Z2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyaGxZMnRpYjNndVkyaGxZMnRsWkNBOUlHWmhiSE5sTzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlLVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2h6Wld4bFkzUkJiR3dnSmlZZ2FYUmxiWE1wSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCelpXeGxZM1JCYkd3dWIyNWphR0Z1WjJVZ1BTQW9aWFpsYm5RcElEMCtJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pYWmxiblF1Y0hKbGRtVnVkRVJsWm1GMWJIUW9LVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSFJoY21kbGRDQTlJR1YyWlc1MExuUmhjbWRsZEM1amFHVmphMlZrTzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBkR1Z0Y3k1bWIzSkZZV05vS0dOb1pXTnJZbTk0SUQwK0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2gwWVhKblpYUXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamFHVmphMkp2ZUM1amFHVmphMlZrSUQwZ2RISjFaVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBnWld4elpTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTJobFkydGliM2d1WTJobFkydGxaQ0E5SUdaaGJITmxPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMmhsWTJ0aWIzZ3ViMjVqYUdGdVoyVW9aWFpsYm5RcE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5S1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0I5S1R0Y2JseHVYRzRnSUNBZ2RtRnlJR055WldGMFpVUnliM0J3WVdKc1pTQTlJQ2hsS1NBOVBpQjdYRzRnSUNBZ0lDQWdJR3hsZENCMGIzQWdQU0JsTG1Oc2FXVnVkRmtnZkh3Z1pTNTBZWEpuWlhSVWIzVmphR1Z6V3pCZExuQmhaMlZaTzF4dUlDQWdJQ0FnSUNCc1pYUWdiR1ZtZENBOUlHVXVZMnhwWlc1MFdDQjhmQ0JsTG5SaGNtZGxkRlJ2ZFdOb1pYTmJNRjB1Y0dGblpWZzdYRzRnSUNBZ0lDQWdJR3hsZENCbGJHVnRJRDBnWkc5amRXMWxiblF1Wld4bGJXVnVkRVp5YjIxUWIybHVkQ2hzWldaMExDQjBiM0FwTzF4dUlDQWdJQ0FnSUNCc1pYUWdaSEp2Y0hCaFlteGxJRDBnWkc5amRXMWxiblF1WTNKbFlYUmxSV3hsYldWdWRDZ25aR2wySnlrN1hHNGdJQ0FnSUNBZ0lHUnliM0J3WVdKc1pTNWpiR0Z6YzB4cGMzUXVZV1JrS0Nka2NtOXdjR0ZpYkdVbktUdGNibHh1SUNBZ0lDQWdJQ0JwWmlBb0tHUnlZV2RQWW1wbFkzUXVZWFpoZEdGeUxtZGxkRUp2ZFc1a2FXNW5RMnhwWlc1MFVtVmpkQ2dwTG14bFpuUWdMU0JsYkdWdExtZGxkRUp2ZFc1a2FXNW5RMnhwWlc1MFVtVmpkQ2dwTG14bFpuUXBJRDQ5SUNoa2NtRm5UMkpxWldOMExtRjJZWFJoY2k1dlptWnpaWFJYYVdSMGFDb3dMakVwS1Z4dUlDQWdJQ0FnSUNBZ0lDQWdaSEp2Y0hCaFlteGxMbU5zWVhOelRHbHpkQzVoWkdRb0ozTjFZaTFwZEdWdEp5azdYRzRnSUNBZ0lDQWdJR1ZzYzJWY2JpQWdJQ0FnSUNBZ0lDQWdJR1J5YjNCd1lXSnNaUzVqYkdGemMweHBjM1F1Y21WdGIzWmxLQ2R6ZFdJdGFYUmxiU2NwTzF4dVhHNGdJQ0FnSUNBZ0lHeGxkQ0JwZEdWdFZHVjRkQ0E5SUdSeVlXZFBZbXBsWTNRdVlYWmhkR0Z5TG5GMVpYSjVVMlZzWldOMGIzSW9KeTV3WVc1bGJDMTBhWFJzWlNCaFcyUmhkR0V0ZEc5bloyeGxQVndpWTI5c2JHRndjMlZjSWwwbktTNWtZWFJoYzJWMFd5ZHVZVzFsSjEwN1hHNGdJQ0FnSUNBZ0lHeGxkQ0JrY205d2NHRmliR1ZVWlhoMElEMGdaRzlqZFcxbGJuUXVZM0psWVhSbFZHVjRkRTV2WkdVb2FYUmxiVlJsZUhRdWRISnBiU2dwS1R0Y2JpQWdJQ0FnSUNBZ1pISnZjSEJoWW14bExtRndjR1Z1WkVOb2FXeGtLR1J5YjNCd1lXSnNaVlJsZUhRcE8xeHVYRzRnSUNBZ0lDQWdJR1J5YjNCd1lXSnNaUzV6ZEhsc1pTNTNhV1IwYUNBOUlHUnlZV2RQWW1wbFkzUXVZWFpoZEdGeUxtOW1abk5sZEZkcFpIUm9JQ3NnSjNCNEp6dGNiaUFnSUNBZ0lDQWdaSEp2Y0hCaFlteGxMbk4wZVd4bExtaGxhV2RvZENBOUlHUnlZV2RQWW1wbFkzUXVZWFpoZEdGeUxtOW1abk5sZEVobGFXZG9kQ0FySUNkd2VDYzdYRzVjYmlBZ0lDQWdJQ0FnYVdZZ0tDRmtjbTl3Y0dGaWJHVXVhWE5GY1hWaGJFNXZaR1VvWkhKaFowOWlhbVZqZEM1a2NtOXdjR0ZpYkdVcEtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCeVpXMXZkbVZGYkdWdFpXNTBjeWh0Wlc1MVNYUmxiWE5NYVhOMExuRjFaWEo1VTJWc1pXTjBiM0pCYkd3b1hDSXVaSEp2Y0hCaFlteGxPbTV2ZENndVpHVnNaWFJsTFdGeVpXRXBYQ0lwS1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJR1J5WVdkUFltcGxZM1F1WkhKdmNIQmhZbXhsSUQwZ2JuVnNiRHRjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNCa2NtRm5UMkpxWldOMExtUnliM0J3WVdKc1pTQTlJR1J5YjNCd1lXSnNaVHRjYmx4dUlDQWdJQ0FnSUNCc1pYUWdkR0Z5WjJWMElEMGdaV3hsYlM1amJHOXpaWE4wS0NjdVpISmhaMmRoWW14bEp5azdYRzVjYmlBZ0lDQWdJQ0FnYVdZZ0tIUmhjbWRsZENBbUppQjBlWEJsYjJZZ2RHRnlaMlYwSUNFOVBTQmNJblZ1WkdWbWFXNWxaRndpS1NCN1hHNWNiaUFnSUNBZ0lDQWdJQ0FnSUM4dlkyOXVjMjlzWlM1c2IyY29KM1JoY21kbGRDY3NJSFJoY21kbGRDazdYRzVjYmlBZ0lDQWdJQ0FnSUNBZ0lISmxiVzkyWlVWc1pXMWxiblJ6S0cxbGJuVkpkR1Z0YzB4cGMzUXVjWFZsY25sVFpXeGxZM1J2Y2tGc2JDaGNJaTVrY205d2NHRmliR1U2Ym05MEtDNWtaV3hsZEdVdFlYSmxZU2xjSWlrcE8xeHVYRzRnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdkRzl3SUQwZ1pTNWpiR2xsYm5SWklIeDhJR1V1ZEdGeVoyVjBWRzkxWTJobGMxc3dYUzV3WVdkbFdUdGNiaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnNaV1owSUQwZ1pTNWpiR2xsYm5SWUlIeDhJR1V1ZEdGeVoyVjBWRzkxWTJobGMxc3dYUzV3WVdkbFdEdGNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaDBiM0FnUGowZ0tIUmhjbWRsZEM1blpYUkNiM1Z1WkdsdVowTnNhV1Z1ZEZKbFkzUW9LUzUwYjNBZ0t5QW9kR0Z5WjJWMExtOW1abk5sZEVobGFXZG9kQzh4TGpVcEtTa2dlMXh1WEc1Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9LR1J5WVdkUFltcGxZM1F1WVhaaGRHRnlMbWRsZEVKdmRXNWthVzVuUTJ4cFpXNTBVbVZqZENncExteGxablFnTFNCbGJHVnRMbWRsZEVKdmRXNWthVzVuUTJ4cFpXNTBVbVZqZENncExteGxablFwSUQ0OUlDaGtjbUZuVDJKcVpXTjBMbUYyWVhSaGNpNXZabVp6WlhSWGFXUjBhQ293TGpFcEtWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwWVhKblpYUXVjWFZsY25sVFpXeGxZM1J2Y2lnbkxtTnZiR3hoY0hObEp5a3VZV1owWlhJb1pISnZjSEJoWW14bEtUdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmxiSE5sWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUmhjbWRsZEM1aFpuUmxjaWhrY205d2NHRmliR1VwTzF4dVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLSFJoY21kbGRDNWpiR0Z6YzB4cGMzUXVZMjl1ZEdGcGJuTW9KM04xWWkxcGRHVnRKeWtwWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHUnliM0J3WVdKc1pTNWpiR0Z6YzB4cGMzUXVZV1JrS0NkemRXSXRhWFJsYlNjcE8xeHVYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdMeTlqYjI1emIyeGxMbXh2WnlnbllXWjBaWEluS1R0Y2JseHVJQ0FnSUNBZ0lDQWdJQ0FnZlNCbGJITmxJR2xtSUNoMGIzQWdQQ0FvZEdGeVoyVjBMbWRsZEVKdmRXNWthVzVuUTJ4cFpXNTBVbVZqZENncExuUnZjQ0FySUNoMFlYSm5aWFF1YjJabWMyVjBTR1ZwWjJoMEx6RXVOU2twS1NCN1hHNWNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvS0dSeVlXZFBZbXBsWTNRdVlYWmhkR0Z5TG1kbGRFSnZkVzVrYVc1blEyeHBaVzUwVW1WamRDZ3BMbXhsWm5RZ0xTQmxiR1Z0TG1kbGRFSnZkVzVrYVc1blEyeHBaVzUwVW1WamRDZ3BMbXhsWm5RcElENDlJQ2hrY21GblQySnFaV04wTG1GMllYUmhjaTV2Wm1aelpYUlhhV1IwYUNvd0xqRXBLVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMFlYSm5aWFF1Y1hWbGNubFRaV3hsWTNSdmNpZ25MbU52Ykd4aGNITmxKeWt1WVdaMFpYSW9aSEp2Y0hCaFlteGxLVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JsYkhObFhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJoY21kbGRDNWlaV1p2Y21Vb1pISnZjSEJoWW14bEtUdGNibHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoa2IyTjFiV1Z1ZEM1blpYUkZiR1Z0Wlc1MFFubEpaQ2duYldWdWRVbDBaVzF6SnlrdVptbHljM1JEYUdsc1pDNXBjMFZ4ZFdGc1RtOWtaU2hrY205d2NHRmliR1VwS1Z4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmtjbTl3Y0dGaWJHVXVZMnhoYzNOTWFYTjBMbkpsYlc5MlpTZ25jM1ZpTFdsMFpXMG5LVHRjYmx4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDaDBZWEpuWlhRdVkyeGhjM05NYVhOMExtTnZiblJoYVc1ektDZHpkV0l0YVhSbGJTY3BLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHUnliM0J3WVdKc1pTNXlaVzF2ZG1Vb0tUdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJR1poYkhObE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMWNibHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQzh2WTI5dWMyOXNaUzVzYjJjb0oySmxabTl5WlNjcE8xeHVYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lDQWdJQ0FnSUdSeVlXZFBZbXBsWTNRdVlYWmhkR0Z5TG5OMGVXeGxMbmRwWkhSb0lEMGdaSEp2Y0hCaFlteGxMbTltWm5ObGRGZHBaSFJvSUNzZ0ozQjRKenRjYmlBZ0lDQWdJQ0FnSUNBZ0lHUnlZV2RQWW1wbFkzUXVZWFpoZEdGeUxuTjBlV3hsTG1obGFXZG9kQ0E5SUdSeWIzQndZV0pzWlM1dlptWnpaWFJJWldsbmFIUWdLeUFuY0hnbk8xeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVJQ0FnSUhaaGNpQmpjbVZoZEdWQmRtRjBZWElnUFNBb1pTa2dQVDRnZTF4dVhHNGdJQ0FnSUNBZ0lDOHZJTkMzMExEUXY5QyswTHpRdmRDNDBZTFJqQ0RSZ2RHQzBMRFJnTkdMMExVZzBZSFFzdEMrMExuUmdkR0MwTExRc0N3ZzBZZlJndEMrMExIUml5RFFzdEMxMFlEUXZkR0QwWUxSak5HQjBZOGcwTG9nMEwzUXVOQzhJTkMvMFlEUXVDRFF2dEdDMEx6UXRkQzkwTFVnMEwvUXRkR0EwTFhRdmRDKzBZSFFzRnh1SUNBZ0lDQWdJQ0IyWVhJZ1lYWmhkR0Z5SUQwZ1pISmhaMDlpYW1WamRDNWxiR1Z0TzF4dUlDQWdJQ0FnSUNCMllYSWdiMnhrSUQwZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnY0dGeVpXNTBPaUJoZG1GMFlYSXVjR0Z5Wlc1MFRtOWtaU3hjYmlBZ0lDQWdJQ0FnSUNBZ0lHNWxlSFJUYVdKc2FXNW5PaUJoZG1GMFlYSXVibVY0ZEZOcFlteHBibWNzWEc0Z0lDQWdJQ0FnSUNBZ0lDQndiM05wZEdsdmJqb2dZWFpoZEdGeUxuQnZjMmwwYVc5dUlIeDhJQ2NuTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdiR1ZtZERvZ1lYWmhkR0Z5TG14bFpuUWdmSHdnSnljc1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwYjNBNklHRjJZWFJoY2k1MGIzQWdmSHdnSnljc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I2U1c1a1pYZzZJR0YyWVhSaGNpNTZTVzVrWlhnZ2ZId2dKeWRjYmlBZ0lDQWdJQ0FnZlR0Y2JseHVJQ0FnSUNBZ0lDQXZMeURSaE5HRDBMM1F1dEdHMExqUmp5RFF0TkM3MFk4ZzBMN1JndEM4MExYUXZkR0xJTkMvMExYUmdOQzEwTDNRdnRHQjBMQmNiaUFnSUNBZ0lDQWdZWFpoZEdGeUxuSnZiR3hpWVdOcklEMGdLQ2tnUFQ0Z2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnYjJ4a0xuQmhjbVZ1ZEM1cGJuTmxjblJDWldadmNtVW9ZWFpoZEdGeUxDQnZiR1F1Ym1WNGRGTnBZbXhwYm1jcE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnWVhaaGRHRnlMbk4wZVd4bExuQnZjMmwwYVc5dUlEMGdiMnhrTG5CdmMybDBhVzl1TzF4dUlDQWdJQ0FnSUNBZ0lDQWdZWFpoZEdGeUxuTjBlV3hsTG14bFpuUWdQU0J2YkdRdWJHVm1kRHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHRjJZWFJoY2k1emRIbHNaUzUwYjNBZ1BTQnZiR1F1ZEc5d08xeHVJQ0FnSUNBZ0lDQWdJQ0FnWVhaaGRHRnlMbk4wZVd4bExucEpibVJsZUNBOUlHOXNaQzU2U1c1a1pYZzdYRzRnSUNBZ0lDQWdJQ0FnSUNBdkwyTnZibk52YkdVdWJHOW5LQ2RFY21GbklHTmhibU5sYkN3Z2NtOXNiR0poWTJzbktUdGNiaUFnSUNBZ0lDQWdJQ0FnSUM4cWMyVjBWR2x0Wlc5MWRDaG1kVzVqZEdsdmJpZ3BJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JrYjJOMWJXVnVkQzV4ZFdWeWVWTmxiR1ZqZEc5eUtDY3VaSEp2Y0hCaFlteGxMbVJsYkdWMFpTMWhjbVZoSnlrdVkyeGhjM05NYVhOMExuSmxiVzkyWlNnbmMyaHZkeWNwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdmU3dnTlRBd0tUc3FMMXh1SUNBZ0lDQWdJQ0I5TzF4dVhHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCaGRtRjBZWEk3WEc0Z0lDQWdmVnh1SUNBZ0lIWmhjaUJ6ZEdGeWRFUnlZV2NnUFNBb1pTa2dQVDRnZTF4dUlDQWdJQ0FnSUNBdkwyTnZibk52YkdVdWJHOW5LQ2R6ZEdGeWRFUnlZV2NuS1R0Y2JseHVJQ0FnSUNBZ0lDQnNaWFFnWVhaaGRHRnlJRDBnWkhKaFowOWlhbVZqZEM1aGRtRjBZWEk3WEc0Z0lDQWdJQ0FnSUdGMllYUmhjaTV6ZEhsc1pTNTNhV1IwYUNBOUlHUnlZV2RQWW1wbFkzUXVZWFpoZEdGeUxtOW1abk5sZEZkcFpIUm9JQ3NnSjNCNEp6dGNiaUFnSUNBZ0lDQWdZWFpoZEdGeUxuTjBlV3hsTG1obGFXZG9kQ0E5SUdSeVlXZFBZbXBsWTNRdVlYWmhkR0Z5TG05bVpuTmxkRWhsYVdkb2RDQXJJQ2R3ZUNjN1hHNWNiaUFnSUNBZ0lDQWdMeThnMExqUXZkQzQwWWJRdU5DNDBZRFF2dEN5MExEUmd0R01JTkM5MExEUmg5Q3cwTHZRdmlEUXY5QzEwWURRdGRDOTBMN1JnZEN3WEc0Z0lDQWdJQ0FnSUdGMllYUmhjaTVqYkdGemMweHBjM1F1WVdSa0tDZGtjbUZuTFdsdUp5azdYRzRnSUNBZ0lDQWdJR1J2WTNWdFpXNTBMbUp2WkhrdVlYQndaVzVrUTJocGJHUW9ZWFpoZEdGeUtUdGNibHh1SUNBZ0lDQWdJQ0JzWlhRZ1pHVnNaWFJsUVhKbFlTQTlJR1J2WTNWdFpXNTBMbkYxWlhKNVUyVnNaV04wYjNJb1hDSXVaSEp2Y0hCaFlteGxMbVJsYkdWMFpTMWhjbVZoWENJcE8xeHVJQ0FnSUNBZ0lDQnBaaUFvWkdWc1pYUmxRWEpsWVNsY2JpQWdJQ0FnSUNBZ0lDQWdJR1JsYkdWMFpVRnlaV0V1WTJ4aGMzTk1hWE4wTG1Ga1pDZ25jMmh2ZHljcE8xeHVYRzRnSUNBZ2ZWeHVJQ0FnSUhaaGNpQm1hVzVwYzJoRWNtRm5JRDBnS0dVcElEMCtJSHRjYmlBZ0lDQWdJQ0FnTHk5amIyNXpiMnhsTG14dlp5Z25abWx1YVhOb1JISmhaeWNwTzF4dVhHNGdJQ0FnSUNBZ0lHeGxkQ0JoZG1GMFlYSWdQU0JrY21GblQySnFaV04wTG1GMllYUmhjanRjYmlBZ0lDQWdJQ0FnYkdWMElHUnliM0JGYkdWdElEMGdabWx1WkVSeWIzQndZV0pzWlNobEtUdGNibHh1SUNBZ0lDQWdJQ0JwWmlBb0lXUnliM0JGYkdWdEtWeHVJQ0FnSUNBZ0lDQWdJQ0FnWVhaaGRHRnlMbkp2Ykd4aVlXTnJLQ2s3WEc1Y2JpQWdJQ0FnSUNBZ1lYWmhkR0Z5TG5OMGVXeGxJRDBnSnljN1hHNGdJQ0FnSUNBZ0lHRjJZWFJoY2k1amJHRnpjMHhwYzNRdWNtVnRiM1psS0Nka2NtRm5MV2x1SnlrN1hHNWNiaUFnSUNBZ0lDQWdiR1YwSUdSeWIzQndZV0pzWlNBOUlHUnlZV2ROWlc1MUxuRjFaWEo1VTJWc1pXTjBiM0lvWENJdVpISnZjSEJoWW14bFhDSXBPMXh1SUNBZ0lDQWdJQ0JwWmlBb1pISnZjSEJoWW14bExtTnNZWE56VEdsemRDNWpiMjUwWVdsdWN5Z25aR1ZzWlhSbExXRnlaV0VuS1NrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnWkhKaFowOWlhbVZqZENBOUlIdDlPMXh1SUNBZ0lDQWdJQ0FnSUNBZ1lYWmhkR0Z5TG5KbGJXOTJaU2dwTzF4dUlDQWdJQ0FnSUNCOUlHVnNjMlVnYVdZZ0tHUnliM0J3WVdKc1pTNWpiR0Z6YzB4cGMzUXVZMjl1ZEdGcGJuTW9KM04xWWkxcGRHVnRKeWtwSUh0Y2JseHVJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHeHBjM1FnUFNCa2NtOXdjR0ZpYkdVdWNHRnlaVzUwVG05a1pTNXhkV1Z5ZVZObGJHVmpkRzl5S0Z3aWRXeGNJaWs3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaaUFvSVd4cGMzUXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzYVhOMElEMGdaRzlqZFcxbGJuUXVZM0psWVhSbFJXeGxiV1Z1ZENnbmRXd25LVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzYVhOMExtTnNZWE56VEdsemRDNWhaR1FvSjIxbGJuVXRhWFJsYlhNbktUdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNhWE4wTG5ObGRFRjBkSEpwWW5WMFpTZ25jbTlzWlNjc0lGd2lkR0ZpYkdsemRGd2lLVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JrY205d2NHRmliR1V1Y0dGeVpXNTBUbTlrWlM1aGNIQmxibVJEYUdsc1pDaHNhWE4wS1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnSUNBZ0lDQWdZWFpoZEdGeUxtTnNZWE56VEdsemRDNWhaR1FvSjNOMVlpMXBkR1Z0SnlrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JrY205d2NHRmliR1V1Y21Wd2JHRmpaVmRwZEdnb1lYWmhkR0Z5S1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJR3hwYzNRdVlYQndaVzVrUTJocGJHUW9ZWFpoZEdGeUtUdGNiaUFnSUNBZ0lDQWdmU0JsYkhObElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUdGMllYUmhjaTVqYkdGemMweHBjM1F1Y21WdGIzWmxLQ2R6ZFdJdGFYUmxiU2NwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdaSEp2Y0hCaFlteGxMbkpsY0d4aFkyVlhhWFJvS0dGMllYUmhjaWs3WEc0Z0lDQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ0lDQXZMeUJ6Wld4bFkzUnpJR0ZzYkNBOGRXdytJR1ZzWlcxbGJuUnpMQ0IwYUdWdUlHWnBiSFJsY25NZ2RHaGxJR052Ykd4bFkzUnBiMjVjYmlBZ0lDQWdJQ0FnYkdWMElHeHBjM1J6SUQwZ2JXVnVkVWwwWlcxelRHbHpkQzV4ZFdWeWVWTmxiR1ZqZEc5eVFXeHNLQ2QxYkNjcE8xeHVJQ0FnSUNBZ0lDQXZMeUJyWldWd0lHOXViSGtnZEdodmMyVWdaV3hsYldWdWRITWdkMmwwYUNCdWJ5QmphR2xzWkMxbGJHVnRaVzUwYzF4dUlDQWdJQ0FnSUNCc1pYUWdaVzF3ZEhsTWFYTjBJRDBnV3k0dUxteHBjM1J6WFM1bWFXeDBaWElvWld4bGJTQTlQaUI3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1pXeGxiUzVqYUdsc1pISmxiaTVzWlc1bmRHZ2dQVDA5SURBN1hHNGdJQ0FnSUNBZ0lIMHBPMXh1WEc0Z0lDQWdJQ0FnSUdadmNpQW9iR1YwSUdWdGNIUjVJRzltSUdWdGNIUjVUR2x6ZENsY2JpQWdJQ0FnSUNBZ0lDQWdJR1Z0Y0hSNUxuSmxiVzkyWlNncE8xeHVYRzRnSUNBZ0lDQWdJQzh2WkhKaFowOWlhbVZqZEM1a1lYUmhJRDBnZEhKaGJuTm1iM0p0UkdGMFlTaHRaVzUxU1hSbGJYTk1hWE4wTG5GMVpYSjVVMlZzWldOMGIzSW9YQ0l1YldWdWRTMXBkR1Z0YzF3aUtTazdYRzRnSUNBZ0lDQWdJR1J5WVdkUFltcGxZM1F1WkdGMFlTQTlJSFJ5WVc1elptOXliVVJoZEdFb2JXVnVkVWwwWlcxelRHbHpkQ2s3WEc0Z0lDQWdJQ0FnSUhKbGJXOTJaVVZzWlcxbGJuUnpLRzFsYm5WSmRHVnRjMHhwYzNRdWNYVmxjbmxUWld4bFkzUnZja0ZzYkNoY0lpNWtjbTl3Y0dGaWJHVTZibTkwS0M1a1pXeGxkR1V0WVhKbFlTbGNJaWtwTzF4dVhHNGdJQ0FnSUNBZ0lHeGxkQ0JrWld4bGRHVkJjbVZoSUQwZ1pHOWpkVzFsYm5RdWNYVmxjbmxUWld4bFkzUnZjaWhjSWk1a2NtOXdjR0ZpYkdVdVpHVnNaWFJsTFdGeVpXRmNJaWs3WEc0Z0lDQWdJQ0FnSUhObGRGUnBiV1Z2ZFhRb1puVnVZM1JwYjI0b0tTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCcFppQW9aR1ZzWlhSbFFYSmxZU2xjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JrWld4bGRHVkJjbVZoTG1Oc1lYTnpUR2x6ZEM1eVpXMXZkbVVvSjNOb2IzY25LVHRjYmlBZ0lDQWdJQ0FnZlN3Z05UQXdLVHRjYmx4dUlDQWdJQ0FnSUNCcFppQW9JV1J5YjNCRmJHVnRLVnh1SUNBZ0lDQWdJQ0FnSUNBZ2MyVnNaaTV2YmtSeVlXZERZVzVqWld3b1pISmhaMDlpYW1WamRDazdYRzRnSUNBZ0lDQWdJR1ZzYzJWY2JpQWdJQ0FnSUNBZ0lDQWdJSE5sYkdZdWIyNUVjbUZuUlc1a0tHUnlZV2RQWW1wbFkzUXNJR1J5YjNCRmJHVnRLVHRjYmlBZ0lDQjlYRzRnSUNBZ2RtRnlJR1pwYm1SRWNtOXdjR0ZpYkdVZ1BTQW9aU2tnUFQ0Z2UxeHVJQ0FnSUNBZ0lDQXZMeURSZ2RDLzBZRFJqOUdIMExYUXZDRFF2OUMxMFlEUXRkQzkwTDdSZ2RDNDBMelJpOUM1SU5HTjBMdlF0ZEM4MExYUXZkR0NYRzRnSUNBZ0lDQWdJR1J5WVdkUFltcGxZM1F1WVhaaGRHRnlMbWhwWkdSbGJpQTlJSFJ5ZFdVN1hHNWNiaUFnSUNBZ0lDQWdiR1YwSUhSdmNDQTlJR1V1WTJ4cFpXNTBXU0I4ZkNCbExtTm9ZVzVuWldSVWIzVmphR1Z6V3pCZExuQmhaMlZaTzF4dUlDQWdJQ0FnSUNCc1pYUWdiR1ZtZENBOUlHVXVZMnhwWlc1MFdDQjhmQ0JsTG1Ob1lXNW5aV1JVYjNWamFHVnpXekJkTG5CaFoyVllPMXh1WEc0Z0lDQWdJQ0FnSUM4dklOQy8wTDdRdTlHRDBZZlF1TkdDMFl3ZzBZSFFzTkM4MFl2UXVTRFFzdEM3MEw3UXR0QzEwTDNRdmRHTDBMa2cwWTNRdTlDMTBMelF0ZEM5MFlJZzBML1F2dEMwSU5DNjBZUFJnTkdCMEw3UmdOQyswTHdnMEx6Umk5R0kwTGhjYmlBZ0lDQWdJQ0FnYkdWMElHVnNaVzBnUFNCa2IyTjFiV1Z1ZEM1bGJHVnRaVzUwUm5KdmJWQnZhVzUwS0d4bFpuUXNJSFJ2Y0NrN1hHNWNiaUFnSUNBZ0lDQWdMeThnMEwvUXZ0QzYwTERRdDlDdzBZTFJqQ0RRdjlDMTBZRFF0ZEM5MEw3UmdkQzQwTHpSaTlDNUlOR04wTHZRdGRDODBMWFF2ZEdDSU5DKzBMSFJnTkN3MFlMUXZkQytYRzRnSUNBZ0lDQWdJR1J5WVdkUFltcGxZM1F1WVhaaGRHRnlMbWhwWkdSbGJpQTlJR1poYkhObE8xeHVYRzRnSUNBZ0lDQWdJR2xtSUNobGJHVnRJRDA5SUc1MWJHd3BJQzh2SU5HQzBMRFF1dEMrMExVZzBMTFF2dEMzMEx6UXZ0QzIwTDNRdml3ZzBMWFJnZEM3MExnZzBMclJnOUdBMFlIUXZ0R0FJTkM4MFl2UmlOQzRJRndpMExMUmk5QzcwTFhSZ3RDMTBMdGNJaURRdDlDd0lOQ3owWURRc05DOTBMalJodEdESU5DKzBMclF2ZEN3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2JuVnNiRHRjYmx4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnWld4bGJTNWpiRzl6WlhOMEtDY3VaSEp2Y0hCaFlteGxKeWs3WEc0Z0lDQWdmVnh1WEc1Y2JpQWdJQ0IyWVhJZ2IyNU5iM1Z6WlVSdmQyNGdQU0FvWlNrZ1BUNGdlMXh1WEc0Z0lDQWdJQ0FnSUdsbUlDaGxMblI1Y0dVZ1BUMDlJRndpYlc5MWMyVmtiM2R1WENJZ0ppWWdaUzUzYUdsamFDQWhQU0F4S1Z4dUlDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdU8xeHVYRzRnSUNBZ0lDQWdJSFpoY2lCbGJHVnRJRDBnWlM1MFlYSm5aWFF1WTJ4dmMyVnpkQ2duTG1SeVlXZG5ZV0pzWlNjcE8xeHVJQ0FnSUNBZ0lDQnBaaUFvSVdWc1pXMHBJSEpsZEhWeWJqdGNibHh1SUNBZ0lDQWdJQ0JrY21GblQySnFaV04wTG1Wc1pXMGdQU0JsYkdWdE8xeHVYRzRnSUNBZ0lDQWdJQzh2SU5DMzBMRFF2OUMrMEx6UXZkQzQwTHdzSU5HSDBZTFF2aURSamRDNzBMWFF2TkMxMEwzUmdpRFF2ZEN3MExiUXNOR0NJTkM5MExBZzBZTFF0ZEM2MFlQUmlkQzQwWVVnMExyUXZ0QyswWURRdE5DNDBMM1FzTkdDMExEUmhTQndZV2RsV0M5d1lXZGxXVnh1SUNBZ0lDQWdJQ0JrY21GblQySnFaV04wTG1SdmQyNVlJRDBnWlM1d1lXZGxXQ0I4ZkNCbExuUmhjbWRsZEZSdmRXTm9aWE5iTUYwdWNHRm5aVmc3WEc0Z0lDQWdJQ0FnSUdSeVlXZFBZbXBsWTNRdVpHOTNibGtnUFNCbExuQmhaMlZaSUh4OElHVXVkR0Z5WjJWMFZHOTFZMmhsYzFzd1hTNXdZV2RsV1R0Y2JseHVJQ0FnSUNBZ0lDQnlaWFIxY200Z1ptRnNjMlU3WEc0Z0lDQWdmVnh1SUNBZ0lIWmhjaUJ2YmsxdmRYTmxUVzkyWlNBOUlDaGxLU0E5UGlCN1hHNGdJQ0FnSUNBZ0lHbG1JQ2doWkhKaFowOWlhbVZqZEM1bGJHVnRLU0J5WlhSMWNtNDdJQzh2SU5HTjBMdlF0ZEM4MExYUXZkR0NJTkM5MExVZzBMZlFzTkMyMExEUmdseHVYRzRnSUNBZ0lDQWdJR2xtSUNnaFpISmhaMDlpYW1WamRDNWhkbUYwWVhJcElIc2dMeThnMExYUmdkQzcwTGdnMEwvUXRkR0EwTFhRdmRDKzBZRWcwTDNRdFNEUXZkQ3cwWWZRc05HQ0xpNHVYRzVjYmlBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0J0YjNabFdDQTlJREE3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYlc5MlpWa2dQU0F3TzF4dUlDQWdJQ0FnSUNBZ0lDQWdhV1lnS0dVdWRIbHdaU0E5UFQwZ1hDSjBiM1ZqYUcxdmRtVmNJaWtnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUcxdmRtVllJRDBnWlM1MFlYSm5aWFJVYjNWamFHVnpXekJkTG5CaFoyVllJQzBnWkhKaFowOWlhbVZqZEM1a2IzZHVXRHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J0YjNabFdTQTlJR1V1ZEdGeVoyVjBWRzkxWTJobGMxc3dYUzV3WVdkbFdTQXRJR1J5WVdkUFltcGxZM1F1Wkc5M2JsazdYRzRnSUNBZ0lDQWdJQ0FnSUNCOUlHVnNjMlVnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUcxdmRtVllJRDBnWlM1d1lXZGxXQ0F0SUdSeVlXZFBZbXBsWTNRdVpHOTNibGc3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYlc5MlpWa2dQU0JsTG5CaFoyVlpJQzBnWkhKaFowOWlhbVZqZEM1a2IzZHVXVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNibHh1SUNBZ0lDQWdJQ0FnSUNBZ0x5OGcwTFhSZ2RDNzBMZ2cwTHpSaTlHSTBZd2cwTC9RdGRHQTBMWFF0TkN5MExqUXZkR0QwTHZRc05HQjBZd2cwTElnMEwzUXNOQzIwTERSZ3RDKzBMd2cwWUhRdnRHQjBZTFF2dEdQMEwzUXVOQzRJTkM5MExYUXROQyswWUhSZ3RDdzBZTFF2dEdIMEwzUXZpRFF0TkN3MEx2UXRkQzYwTDVjYmlBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hOWVhSb0xtRmljeWh0YjNabFdDa2dQQ0ExSUNZbUlFMWhkR2d1WVdKektHMXZkbVZaS1NBOElEVXBYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdU8xeHVYRzRnSUNBZ0lDQWdJQ0FnSUNBdkx5RFF2ZEN3MFlmUXVOQzkwTERRdGRDOElOQy8wTFhSZ05DMTBMM1F2dEdCWEc0Z0lDQWdJQ0FnSUNBZ0lDQmtjbUZuVDJKcVpXTjBMbUYyWVhSaGNpQTlJR055WldGMFpVRjJZWFJoY2lobEtUc2dMeThnMFlIUXZ0QzMwTFRRc05HQzBZd2cwTERRc3RDdzBZTFFzTkdBWEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaaUFvSVdSeVlXZFBZbXBsWTNRdVlYWmhkR0Z5S1NCN0lDOHZJTkMrMFlMUXZOQzEwTDNRc0NEUXY5QzEwWURRdGRDOTBMN1JnZEN3TENEUXZkQzEwTHZSak5DMzBZOGdYQ0xRdDlDdzBZWFFzdEN3MFlMUXVOR0MwWXhjSWlEUXQ5Q3dJTkdOMFlMUmd5RFJoOUN3MFlIUmd0R01JTkdOMEx2UXRkQzgwTFhRdmRHQzBMQmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmtjbUZuVDJKcVpXTjBJRDBnZTMwN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1TzF4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0FnSUNBZ0lDQXZMeURRc05DeTBMRFJndEN3MFlBZzBZSFF2dEMzMExUUXNOQzlJTkdEMFlIUXY5QzEwWWpRdmRDK1hHNGdJQ0FnSUNBZ0lDQWdJQ0F2THlEUmdkQyswTGZRdE5DdzBZTFJqQ0RRc3RHQjBML1F2dEM4MEw3UXM5Q3cwWUxRdGRDNzBZelF2ZEdMMExVZzBZSFFzdEMrMExuUmdkR0MwTExRc0NCemFHbG1kRmd2YzJocFpuUlpYRzRnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdZMjl2Y21SeklEMGdaMlYwUTI5dmNtUnpLR1J5WVdkUFltcGxZM1F1WVhaaGRHRnlLVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHUnlZV2RQWW1wbFkzUXVjMmhwWm5SWUlEMGdaSEpoWjA5aWFtVmpkQzVrYjNkdVdDQXRJR052YjNKa2N5NXNaV1owTzF4dUlDQWdJQ0FnSUNBZ0lDQWdaSEpoWjA5aWFtVmpkQzV6YUdsbWRGa2dQU0JrY21GblQySnFaV04wTG1SdmQyNVpJQzBnWTI5dmNtUnpMblJ2Y0R0Y2JseHVJQ0FnSUNBZ0lDQWdJQ0FnYzNSaGNuUkVjbUZuS0dVcE95QXZMeURRdnRHQzBMN1FzZEdBMExEUXQ5QzQwWUxSakNEUXZkQ3cwWWZRc05DNzBMNGcwTC9RdGRHQTBMWFF2ZEMrMFlIUXNGeHVJQ0FnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJQ0FnTHk4ZzBMN1JndEMrMExIUmdOQ3cwTGZRdU5HQzBZd2cwTC9RdGRHQTBMWFF2ZEMrMFlFZzBMN1FzZEdLMExYUXV0R0MwTEFnMEwvUmdOQzRJTkM2MExEUXR0QzAwTDdRdkNEUXROQ3kwTGpRdHRDMTBMM1F1TkM0SU5DODBZdlJpTkM0WEc0Z0lDQWdJQ0FnSUdsbUlDaGxMblI1Y0dVZ1BUMDlJRndpZEc5MVkyaHRiM1psWENJcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUdSeVlXZFBZbXBsWTNRdVlYWmhkR0Z5TG5OMGVXeGxMbXhsWm5RZ1BTQW9aUzVqYUdGdVoyVmtWRzkxWTJobGMxc3dYUzV3WVdkbFdDQXRJR1J5WVdkUFltcGxZM1F1YzJocFpuUllLU0FySUNkd2VDYzdYRzRnSUNBZ0lDQWdJQ0FnSUNCa2NtRm5UMkpxWldOMExtRjJZWFJoY2k1emRIbHNaUzUwYjNBZ1BTQW9aUzVqYUdGdVoyVmtWRzkxWTJobGMxc3dYUzV3WVdkbFdTQXRJR1J5WVdkUFltcGxZM1F1YzJocFpuUlpLU0FySUNkd2VDYzdYRzRnSUNBZ0lDQWdJSDBnWld4elpTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCa2NtRm5UMkpxWldOMExtRjJZWFJoY2k1emRIbHNaUzVzWldaMElEMGdLR1V1Y0dGblpWZ2dMU0JrY21GblQySnFaV04wTG5Ob2FXWjBXQ2tnS3lBbmNIZ25PMXh1SUNBZ0lDQWdJQ0FnSUNBZ1pISmhaMDlpYW1WamRDNWhkbUYwWVhJdWMzUjViR1V1ZEc5d0lEMGdLR1V1Y0dGblpWa2dMU0JrY21GblQySnFaV04wTG5Ob2FXWjBXU2tnS3lBbmNIZ25PMXh1SUNBZ0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUNBZ1kzSmxZWFJsUkhKdmNIQmhZbXhsS0dVcE8xeHVJQ0FnSUNBZ0lDQnlaWFIxY200Z1ptRnNjMlU3WEc0Z0lDQWdmVnh1SUNBZ0lIWmhjaUJ2YmsxdmRYTmxWWEFnUFNBb1pTa2dQVDRnZTF4dUlDQWdJQ0FnSUNCcFppQW9aSEpoWjA5aWFtVmpkQzVoZG1GMFlYSXBJQzh2SU5DMTBZSFF1OUM0SU5DLzBMWFJnTkMxMEwzUXZ0R0JJTkM0MExUUXRkR0NYRzRnSUNBZ0lDQWdJQ0FnSUNCbWFXNXBjMmhFY21GbktHVXBPMXh1WEc0Z0lDQWdJQ0FnSUM4dklOQy8wTFhSZ05DMTBMM1F2dEdCSU5DNzBMalFzZEMrSU5DOTBMVWcwTDNRc05HSDBMalF2ZEN3MEx2UmdkR1BMQ0RRdTlDNDBMSFF2aURRdDlDdzBMTFF0ZEdBMFlqUXVOQzcwWUhSajF4dUlDQWdJQ0FnSUNBdkx5RFFzaURRdTlHTzBMSFF2dEM4SU5HQjBMdlJnOUdIMExEUXRTRFF2dEdIMExqUmdkR0MwTGpRdkNCY0l0R0IwTDdSZ2RHQzBMN1JqOUM5MExqUXRTRFF2OUMxMFlEUXRkQzkwTDdSZ2RDd1hDSWdaSEpoWjA5aWFtVmpkRnh1SUNBZ0lDQWdJQ0JrY21GblQySnFaV04wSUQwZ2UzMDdYRzRnSUNBZ2ZWeHVYRzVjYmlBZ0lDQmtjbUZuVFdWdWRTNXZibTF2ZFhObFpHOTNiaUE5SUc5dVRXOTFjMlZFYjNkdU8xeHVJQ0FnSUdSeVlXZE5aVzUxTG05dWRHOTFZMmh6ZEdGeWRDQTlJRzl1VFc5MWMyVkViM2R1TzF4dUlDQWdJR1J5WVdkTlpXNTFMbTl1Ylc5MWMyVnRiM1psSUQwZ2IyNU5iM1Z6WlUxdmRtVTdYRzRnSUNBZ1pISmhaMDFsYm5VdWIyNTBiM1ZqYUcxdmRtVWdQU0J2YmsxdmRYTmxUVzkyWlR0Y2JpQWdJQ0JrY21GblRXVnVkUzV2Ym0xdmRYTmxkWEFnUFNCdmJrMXZkWE5sVlhBN1hHNGdJQ0FnWkhKaFowMWxiblV1YjI1MGIzVmphR1Z1WkNBOUlHOXVUVzkxYzJWVmNEdGNibHh1SUNBZ0lIUm9hWE11WjJWMFNYUmxiWE5FWVhSaElEMGdablZ1WTNScGIyNG9LU0I3WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUIwY21GdWMyWnZjbTFFWVhSaEtHMWxiblZKZEdWdGMweHBjM1FwTzF4dUlDQWdJSDA3WEc1Y2JpQWdJQ0IwYUdsekxtOXVSSEpoWjBWdVpDQTlJR1oxYm1OMGFXOXVLR1J5WVdkUFltcGxZM1FzSUdSeWIzQkZiR1Z0S1NCN2ZUdGNiaUFnSUNCMGFHbHpMbTl1UkhKaFowTmhibU5sYkNBOUlHWjFibU4wYVc5dUtHUnlZV2RQWW1wbFkzUXBJSHQ5TzF4dVhHNGdJQ0FnZEdocGN5NXZia0ZrWkZOMVkyTmxjM01nUFNCbWRXNWpkR2x2Ymloa2NtRm5UMkpxWldOMExDQnRaVzUxU1hSbGJYTk1hWE4wS1NCN2ZUdGNiaUFnSUNCMGFHbHpMbTl1UVdSa1JtRnBiSFIxY21VZ1BTQm1kVzVqZEdsdmJpaGtjbUZuVDJKcVpXTjBMQ0J0Wlc1MVNYUmxiWE5NYVhOMEtTQjdmVHRjYmx4dWZWeHVYRzVFY21GblRXVnVkUzV2YmtSeVlXZERZVzVqWld3Z1BTQm1kVzVqZEdsdmJpQW9aSEpoWjA5aWFtVmpkQ2tnZTF4dUlDQWdJR2xtSUNoa2NtRm5UMkpxWldOMExtUmhkR0VwSUh0Y2JpQWdJQ0FnSUNBZ2JHVjBJR1p2Y20wZ1BTQmtiMk4xYldWdWRDNW5aWFJGYkdWdFpXNTBRbmxKWkNnbllXUmtUV1Z1ZFVadmNtMG5LVHRjYmlBZ0lDQWdJQ0FnWm05eWJTNXhkV1Z5ZVZObGJHVmpkRzl5S0NkcGJuQjFkQ050Wlc1MUxXbDBaVzF6SnlrdWRtRnNkV1VnUFNCa2NtRm5UMkpxWldOMExtUmhkR0U3WEc0Z0lDQWdmVnh1ZlR0Y2JseHVSSEpoWjAxbGJuVXViMjVFY21GblJXNWtJRDBnWm5WdVkzUnBiMjRnS0dSeVlXZFBZbXBsWTNRc0lHUnliM0JGYkdWdEtTQjdYRzRnSUNBZ2FXWWdLR1J5WVdkUFltcGxZM1F1WkdGMFlTa2dlMXh1SUNBZ0lDQWdJQ0JzWlhRZ1ptOXliU0E5SUdSdlkzVnRaVzUwTG1kbGRFVnNaVzFsYm5SQ2VVbGtLQ2RoWkdSTlpXNTFSbTl5YlNjcE8xeHVJQ0FnSUNBZ0lDQm1iM0p0TG5GMVpYSjVVMlZzWldOMGIzSW9KMmx1Y0hWMEkyMWxiblV0YVhSbGJYTW5LUzUyWVd4MVpTQTlJR1J5WVdkUFltcGxZM1F1WkdGMFlUdGNiaUFnSUNCOVhHNTlPMXh1WEc1RWNtRm5UV1Z1ZFM1dmJrRmtaRk4xWTJObGMzTWdQU0JtZFc1amRHbHZiaUFvWkhKaFowOWlhbVZqZEN3Z2JXVnVkVWwwWlcxelRHbHpkQ2tnZTF4dUlDQWdJR3hsZENCbWIzSnRJRDBnWkc5amRXMWxiblF1WjJWMFJXeGxiV1Z1ZEVKNVNXUW9KMkZrWkUxbGJuVkdiM0p0SnlrN1hHNGdJQ0FnWm05eWJTNXhkV1Z5ZVZObGJHVmpkRzl5S0NkcGJuQjFkQ050Wlc1MUxXbDBaVzF6SnlrdWRtRnNkV1VnUFNCMGFHbHpMbWRsZEVsMFpXMXpSR0YwWVNncE8xeHVmVHNpWFgwPVxuIl19
