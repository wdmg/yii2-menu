var DragMenu=new function(){var e=this,t={},n=document.getElementById("dragMenu"),a=document.getElementById("menuItems"),l=document.getElementById("menuSources"),r=document.getElementById("itemFormTemplate"),o=document.getElementById("menuItemTemplate"),u=document.getElementById("addMenuItemForm");const i=e=>e.forEach((e=>e.remove())),s=(e,t=!0)=>{let n=[];function a(e,t,n="UL"){let l=e.querySelector("form[data-key]"),r={id:l.getAttribute("data-key")||null,name:l.querySelector('input[name="MenuItems[name]"]').value||null,title:l.querySelector('input[name="MenuItems[title]"]').value||null,source_id:l.querySelector('input[name="MenuItems[source_id]"]').value||null,source_type:l.querySelector('input[name="MenuItems[source_type]"]').value||null,source_url:l.querySelector('input[name="MenuItems[source_url]"]').value||null,only_auth:l.querySelector('input[name="MenuItems[only_auth]"]').value||null,target_blank:l.querySelector('input[name="MenuItems[target_blank]"]').value||null};e.childElementCount&&(r.children=[],Array.from(e.children).forEach((e=>{e.nodeName===n.toUpperCase()&&Array.from(e.children).forEach((e=>{a(e,r.children)}))}))),t.push(r)}return Array.from(e.children).forEach((e=>{a(e,n,"UL")})),t?JSON.stringify(n):n},c=e=>{var t=document.createElement("template");return e=e.trim(),t.innerHTML=e,t.content.firstChild},d=(e,t)=>{do{var n=e,a=(e=e.replace(/{{\s*([^}\s]+)\s*}}/g,(function(e,n){var a=t[$.trim(n)];return void 0===a?e:a})))!==n}while(a);return e};var m=(n,l=null)=>{if(a&&o&&"content"in document.createElement("template")){a.classList.contains("no-items")&&(a.classList.remove("no-items"),a.innerHTML="");let u=n;u.form=d(r.innerHTML,u);let i=d(o.innerHTML,u);if(i)if(l){let e=document.createElement("ul");e.classList.add("menu-items"),e.setAttribute("role","tablist");let t=c(i);t.classList.add("sub-item"),e.append(t),a.querySelector('[data-id="'+l+'"]').append(e)}else a.append(c(i));[...a.querySelectorAll(".panel form")].filter((n=>{if(n.children.length){n.addEventListener("change",(function(n){return e.onChange(t,a)})),n.querySelector('.toolbar a[data-rel="out-of"]').onclick=function(e){e.preventDefault();let t=n.closest(".draggable");t&&(t.classList.remove("sub-item"),a.append(t))},n.querySelector('.toolbar a[data-rel="up-one"]').onclick=function(e){e.preventDefault();let t=n.closest(".draggable");if(t){let e=t.previousSibling;e&&t.parentNode.insertBefore(t,e)}},n.querySelector('.toolbar a[data-rel="down-one"]').onclick=function(e){e.preventDefault();let t=n.closest(".draggable");if(t){let e=t.nextSibling;e&&t.parentNode.insertBefore(t,e.nextSibling)}},n.querySelector('.toolbar a[data-rel="remove"]').onclick=function(e){e.preventDefault();let t=n.closest(".draggable");t&&t.remove()}}}));return e.onAddSuccess(t,a)}return e.onAddFailture(t,a)};if(u){u.querySelector('button[data-rel="add"]').addEventListener("click",(e=>{let t=l.querySelector('#source-link a[data-toggle="collapse"]'),n={id:null,source:t.dataset.type||null,source_name:t.dataset.name||null,name:u.querySelector('input[name="MenuItems[name]"]').value||!1,title:u.querySelector('input[name="MenuItems[title]"]').value||!1,source_id:null,source_type:u.querySelector('input[name="MenuItems[source_type]"]').value||!1,source_url:u.querySelector('input[name="MenuItems[source_url]"]').value||!1,only_auth:u.querySelector('input[name="MenuItems[only_auth]"]').value||!1,target_blank:u.querySelector('input[name="MenuItems[target_blank]"]').value||!1};m(n)&&u.reset()}))}if(l)[...l.querySelectorAll(".panel")].filter((e=>{if(e.children.length){let t=e.querySelector('button[data-rel="add"]'),n=e.querySelector('input[type="checkbox"][name="select-all"]'),a=e.querySelectorAll('.source-list input[type="checkbox"]');t&&a&&(a.forEach((n=>{n.onchange=n=>{n.preventDefault(),e.querySelectorAll('input[type="checkbox"]:checked:not([name="select-all"])').length?t.removeAttribute("disabled"):t.setAttribute("disabled",!0)}})),t.onclick=e=>{e.preventDefault();[...a].filter((e=>{e.checked&&m(e.dataset)}));a.forEach((e=>{e.checked=!1}))}),n&&a&&(n.onchange=e=>{e.preventDefault();let t=e.target.checked;a.forEach((n=>{n.checked=!!t,n.onchange(e)}))})}}));var p=e=>{t.avatar.hidden=!0;let n=e.clientY||e.changedTouches[0].pageY,a=e.clientX||e.changedTouches[0].pageX,l=document.elementFromPoint(a,n);return t.avatar.hidden=!1,null==l?null:l.closest(".droppable")},f=e=>{if("mousedown"!==e.type||1==e.which){var n=e.target.closest(".draggable");n&&(t.elem=n,t.downX=e.pageX||e.targetTouches[0].pageX,t.downY=e.pageY||e.targetTouches[0].pageY)}},g=e=>{if(t.elem){if(!t.avatar){let a=0,r=0;if("touchmove"===e.type?(a=e.targetTouches[0].pageX-t.downX,r=e.targetTouches[0].pageY-t.downY):(a=e.pageX-t.downX,r=e.pageY-t.downY),Math.abs(a)<5&&Math.abs(r)<5)return;if(t.avatar=(n=t.elem,l={parent:n.parentNode,nextSibling:n.nextSibling,position:n.position||"",left:n.left||"",top:n.top||"",zIndex:n.zIndex||""},n.rollback=()=>{l.parent.insertBefore(n,l.nextSibling),n.style.position=l.position,n.style.left=l.left,n.style.top=l.top,n.style.zIndex=l.zIndex},n),!t.avatar)return void(t={});let o=(e=>{let t=e.getBoundingClientRect();return{top:t.top+pageYOffset,left:t.left+pageXOffset}})(t.avatar);t.shiftX=t.downX-o.left,t.shiftY=t.downY-o.top,(e=>{let n=t.avatar;n.style.width=t.avatar.offsetWidth+"px",n.style.height=t.avatar.offsetHeight+"px",n.classList.add("drag-in"),document.body.appendChild(n);let a=document.querySelector(".droppable.delete-area");a&&a.classList.add("show")})()}var n,l;return"touchmove"===e.type?(t.avatar.style.left=e.changedTouches[0].pageX-t.shiftX+"px",t.avatar.style.top=e.changedTouches[0].pageY-t.shiftY+"px"):(t.avatar.style.left=e.pageX-t.shiftX+"px",t.avatar.style.top=e.pageY-t.shiftY+"px"),(e=>{let n=e.clientY||e.targetTouches[0].pageY,l=e.clientX||e.targetTouches[0].pageX,r=document.elementFromPoint(l,n),o=document.createElement("div");o.classList.add("droppable"),t.avatar.getBoundingClientRect().left-r.getBoundingClientRect().left>=.1*t.avatar.offsetWidth?o.classList.add("sub-item"):o.classList.remove("sub-item");let u=t.avatar.querySelector('.panel-title a[data-toggle="collapse"]').dataset.name,s=document.createTextNode(u.trim());o.appendChild(s),o.style.width=t.avatar.offsetWidth+"px",o.style.height=t.avatar.offsetHeight+"px",o.isEqualNode(t.droppable)||(i(a.querySelectorAll(".droppable:not(.delete-area)")),t.droppable=null),t.droppable=o;let c=r.closest(".draggable");if(c&&void 0!==c){i(a.querySelectorAll(".droppable:not(.delete-area)"));let n=e.clientY||e.targetTouches[0].pageY;if(e.clientX||e.targetTouches[0].pageX,n>=c.getBoundingClientRect().top+c.offsetHeight/1.5)t.avatar.getBoundingClientRect().left-r.getBoundingClientRect().left>=.1*t.avatar.offsetWidth?c.querySelector(".collapse").after(o):c.after(o),c.classList.contains("sub-item")&&o.classList.add("sub-item");else if(n<c.getBoundingClientRect().top+c.offsetHeight/1.5&&(t.avatar.getBoundingClientRect().left-r.getBoundingClientRect().left>=.1*t.avatar.offsetWidth?c.querySelector(".collapse").after(o):c.before(o),document.getElementById("menuItems").firstChild.isEqualNode(o)&&o.classList.remove("sub-item"),c.classList.contains("sub-item")))return o.remove(),!1;t.avatar.style.width=o.offsetWidth+"px",t.avatar.style.height=o.offsetHeight+"px"}})(e),!1}},h=l=>{t.avatar&&(l=>{let r=t.avatar,o=p(l);o||r.rollback(),r.style="",r.classList.remove("drag-in");let u=n.querySelector(".droppable");if(u.classList.contains("delete-area"))t={},r.remove();else if(u.classList.contains("sub-item")){let e=u.parentNode.querySelector("ul");e||(e=document.createElement("ul"),e.classList.add("menu-items"),e.setAttribute("role","tablist"),u.parentNode.appendChild(e)),r.classList.add("sub-item"),u.replaceWith(r),e.appendChild(r)}else r.classList.remove("sub-item"),u.replaceWith(r);let c=[...a.querySelectorAll("ul")].filter((e=>0===e.children.length));for(let e of c)e.remove();t.data=s(a),i(a.querySelectorAll(".droppable:not(.delete-area)"));let d=document.querySelector(".droppable.delete-area");setTimeout((function(){d&&d.classList.remove("show")}),500),o?e.onDragEnd(t,o):e.onDragCancel(t)})(l),t={}};this.getItemsData=function(){return s(a)},this.buildMenuItems=function(e){[...e].filter((e=>{if("object"==typeof e){let t=e.parent_id;e.source_type&&!e.source_name&&(e.source_name=l.querySelector('.panel .panel-heading a[data-id="'+e.source_type+'"]').dataset.name),m(e,t)}}))},this.onInit=function(e){},this.onDragEnd=function(e,t){},this.onDragCancel=function(e){},this.onChange=function(e,t){},this.onAddSuccess=function(e,t){},this.onAddFailture=function(e,t){},document.addEventListener("DOMContentLoaded",(function(t){n&&a&&(n.onmousedown=f,n.ontouchstart=f,n.onmousemove=g,n.ontouchmove=g,n.onmouseup=h,n.ontouchend=h,e.onInit())}))};DragMenu.onDragCancel=function(e){if(e.data){document.getElementById("addMenuForm").querySelector("input#menu-items").value=e.data}},DragMenu.onDragEnd=function(e,t){if(e.data){document.getElementById("addMenuForm").querySelector("input#menu-items").value=e.data}},DragMenu.onChange=function(e,t){document.getElementById("addMenuForm").querySelector("input#menu-items").value=this.getItemsData()},DragMenu.onAddSuccess=function(e,t){document.getElementById("addMenuForm").querySelector("input#menu-items").value=this.getItemsData()},DragMenu.onInit=function(){let e=document.getElementById("addMenuForm").querySelector("input#menu-items").value;e&&this.buildMenuItems(JSON.parse(e))};
//# sourceMappingURL=data:application/json;charset=utf8;base64,
