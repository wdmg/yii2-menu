var DragMenu=new function(){var e=this,t={},a=document.getElementById("menuItems"),n=document.getElementById("menuSources").querySelectorAll(".panel .panel-body"),l=(a=document.getElementById("menuItems"),document.getElementById("itemFormTemplate")),o=document.getElementById("menuItemTemplate");const r=e=>e.forEach((e=>e.remove())),i=(e,t=!0)=>{let a=[];function n(e,t){let a={itemId:e.id};e.childElementCount&&(a.children=[],Array.from(e.children).forEach((e=>{"UL"===e.nodeName&&Array.from(e.children).forEach((e=>{n(e,a.children)}))}))),t.push(a)}return Array.from(e.children).forEach((e=>{n(e,a)})),t?JSON.stringify(a):a},s=(e,t)=>{do{var a=e,n=(e=e.replace(/{{\s*([^}\s]+)\s*}}/g,(function(e,a){var n=t[$.trim(a)];return void 0===n?e:n})))!==a}while(n);return e};[...n].filter((e=>{if(e.children.length){let t=e.querySelectorAll('.source-list input[type="checkbox"]'),a=e.querySelector('button[data-rel="add"]');a&&t&&(a.onclick=e=>{e.preventDefault();[...t].filter((e=>{e.checked&&d(e)}));t.forEach((e=>{e.checked=!1}))});let n=e.querySelector('input[type="checkbox"][name="select-all"]');n&&t&&(n.onchange=e=>{e.preventDefault(),e.target.checked?t.forEach((e=>{e.checked=!0})):t.forEach((e=>{e.checked=!1}))})}}));var d=e=>{if(a&&o&&"content"in document.createElement("template")){a.classList.contains("no-items")&&(a.classList.remove("no-items"),a.innerHTML="");let r=e.dataset;r.form=s(l.innerHTML,r);let i=s(o.innerHTML,r);a.append((t=i,n=document.createElement("template"),t=t.trim(),n.innerHTML=t,n.content.firstChild))}var t,n},c=e=>{t.avatar.hidden=!0;let a=e.clientY||e.changedTouches[0].pageY,n=e.clientX||e.changedTouches[0].pageX,l=document.elementFromPoint(n,a);return t.avatar.hidden=!1,null==l?null:l.closest(".droppable")},u=e=>{if("mousedown"!==e.type||1==e.which){var a=e.target.closest(".draggable");if(a)return t.elem=a,t.downX=e.pageX||e.targetTouches[0].pageX,t.downY=e.pageY||e.targetTouches[0].pageY,!1}},p=e=>{if(t.elem){if(!t.avatar){let a=0,o=0;if("touchmove"===e.type?(a=e.targetTouches[0].pageX-t.downX,o=e.targetTouches[0].pageY-t.downY):(a=e.pageX-t.downX,o=e.pageY-t.downY),Math.abs(a)<5&&Math.abs(o)<5)return;if(t.avatar=(n=t.elem,l={parent:n.parentNode,nextSibling:n.nextSibling,position:n.position||"",left:n.left||"",top:n.top||"",zIndex:n.zIndex||""},n.rollback=()=>{l.parent.insertBefore(n,l.nextSibling),n.style.position=l.position,n.style.left=l.left,n.style.top=l.top,n.style.zIndex=l.zIndex},n),!t.avatar)return void(t={});let r=(e=>{let t=e.getBoundingClientRect();return{top:t.top+pageYOffset,left:t.left+pageXOffset}})(t.avatar);t.shiftX=t.downX-r.left,t.shiftY=t.downY-r.top,(e=>{let a=t.avatar;a.style.width=t.avatar.offsetWidth+"px",a.style.height=t.avatar.offsetHeight+"px",a.classList.add("drag-in"),document.body.appendChild(a);let n=document.querySelector(".droppable.delete-area");n&&(n.hidden=!1)})()}var n,l;return"touchmove"===e.type?(t.avatar.style.left=e.changedTouches[0].pageX-t.shiftX+"px",t.avatar.style.top=e.changedTouches[0].pageY-t.shiftY+"px"):(t.avatar.style.left=e.pageX-t.shiftX+"px",t.avatar.style.top=e.pageY-t.shiftY+"px"),(e=>{let n=e.clientY||e.targetTouches[0].pageY,l=e.clientX||e.targetTouches[0].pageX,o=document.elementFromPoint(l,n),i=document.createElement("div");i.classList.add("droppable"),t.avatar.getBoundingClientRect().left-o.getBoundingClientRect().left>=.1*t.avatar.offsetWidth?i.classList.add("sub-item"):i.classList.remove("sub-item");let s=t.avatar.querySelector('.panel-title a[data-toggle="collapse"]').dataset.name,d=document.createTextNode(s.trim());i.appendChild(d),i.style.width=t.avatar.offsetWidth+"px",i.style.height=t.avatar.offsetHeight+"px",i.isEqualNode(t.droppable)||(r(a.querySelectorAll(".droppable:not(.delete-area)")),t.droppable=null),t.droppable=i;let c=o.closest(".draggable");if(c&&void 0!==c){r(a.querySelectorAll(".droppable:not(.delete-area)"));let n=e.clientY||e.targetTouches[0].pageY;if(e.clientX||e.targetTouches[0].pageX,n>=c.getBoundingClientRect().top+c.offsetHeight/1.5)t.avatar.getBoundingClientRect().left-o.getBoundingClientRect().left>=.1*t.avatar.offsetWidth?c.querySelector(".collapse").after(i):c.after(i),c.classList.contains("sub-item")&&i.classList.add("sub-item");else if(n<c.getBoundingClientRect().top+c.offsetHeight/1.5&&(t.avatar.getBoundingClientRect().left-o.getBoundingClientRect().left>=.1*t.avatar.offsetWidth?c.querySelector(".collapse").after(i):c.before(i),document.getElementById("menuItems").firstChild.isEqualNode(i)&&i.classList.remove("sub-item"),c.classList.contains("sub-item")))return i.remove(),!1;t.avatar.style.width=i.offsetWidth+"px",t.avatar.style.height=i.offsetHeight+"px"}})(e),!1}},m=n=>{t.avatar&&(n=>{let l=t.avatar,o=c(n);o||l.rollback(),l.style="",l.classList.remove("drag-in");let s=a.querySelector(".droppable");if(s.classList.contains("delete-area"))t={},l.remove();else if(s.classList.contains("sub-item")){let e=s.parentNode.querySelector("ul");e||(e=document.createElement("ul"),e.classList.add("menu-items"),e.setAttribute("role","tablist"),s.parentNode.appendChild(e)),l.classList.add("sub-item"),s.replaceWith(l),e.appendChild(l)}else l.classList.remove("sub-item"),s.replaceWith(l);let d=[...a.querySelectorAll("ul")].filter((e=>0===e.children.length));for(let e of d)e.remove();t.data=i(a.querySelector(".menu-items")),r(a.querySelectorAll(".droppable:not(.delete-area)"));let u=document.querySelector(".droppable.delete-area");u&&(u.hidden=!0),o?e.onDragEnd(t,o):e.onDragCancel(t)})(n),t={}};a.onmousedown=u,a.ontouchstart=u,a.onmousemove=p,a.ontouchmove=p,a.onmouseup=m,a.ontouchend=m,this.onDragEnd=function(e,t){},this.onDragCancel=function(e){}};DragMenu.onDragCancel=function(e){e.data&&(document.getElementById("menuOptions").innerText=e.data)},DragMenu.onDragEnd=function(e,t){e.data&&(document.getElementById("menuOptions").innerText=e.data)};
//# sourceMappingURL=data:application/json;charset=utf8;base64,
